"use strict";function mojrokovnikAuth(api,$cookies){var self=this;api("users").fetch().then(function(user){user&&(self.user=user)}),this.getUser=function(){return self.user},this.isLoggedIn=function(){return!!$cookies.getObject("user")}}function mojrokovnikConf($routeProvider){$routeProvider.otherwise({redirectTo:"/clients"}),$routeProvider.when("/login",{templateUrl:"scripts/mojrokovnik/login/login.html"}),$routeProvider.when("/clients",{templateUrl:"scripts/mojrokovnik-clients/clients.html"}),$routeProvider.when("/cases",{templateUrl:"scripts/mojrokovnik-cases/cases.html"}),$routeProvider.when("/calendar",{templateUrl:"scripts/mojrokovnik-calendar/calendar.html"})}function calendarTemplate(api){return{controller:calendarCtrl,link:function(scope,element,attr,ctrl){function initializeCalendar(events){element.fullCalendar({header:{left:"prev,next today",center:"title",right:"month,agendaWeek,agendaDay"},height:angular.element("body").height(),firstDay:1,lang:"sr",scrollTime:"08:00:00",defaultView:"agendaWeek",slotDuration:"00:15:00",timezone:"UTC",selectable:!0,editable:!0,eventLimit:!0,events:events,select:function(startDate,endDate){scope.showDialog(startDate,endDate)},eventClick:function(event){scope.showDialog(event.start,event.end,event.data),console.log(event.data)},eventDrop:function(event){scope.showDialog(event.start,event.end,event.data)},eventResize:function(event){scope.showDialog(event.start,event.end,event.data)}})}api("calendars").fetch().then(function(events){var filterEvents=[];return angular.forEach(events,function(item){filterEvents.push({title:item.calendar_name+" - "+item.calendar_comment,start:item.calendar_startDate,end:item.calendar_endDate,data:item})}),initializeCalendar(filterEvents)}),scope.createEvent=function(event){var eventData={title:event.calendar_name+" - "+event.calendar_comment,start:event.calendar_startDate,end:event.calendar_endDate,data:event};element.fullCalendar("renderEvent",eventData,!0),element.fullCalendar("unselect")}}}}function calendarCtrl($scope,$q,$uibModal,api){function calendarDialogCtrl($uibModalInstance){$scope.save=function(calendar){calendar.calendar_startDate=calendar.calendar_startDate._d,calendar.calendar_endDate=moment(calendar.calendar_startDate).add(calendar.calendar_duration,"m")._d,calendar=_.omit(calendar,"calendar_duration"),calendar.calendar_id?api("calendars").update(calendar).then(function(){$uibModalInstance.close()}):api("calendars").add(calendar).then(function(data){calendar.calendar_id=data.id,$scope.createEvent(calendar),$uibModalInstance.close()})},$scope.cancel=function(){$uibModalInstance.dismiss()}}$scope.showDialog=function(startDate,endDate,data){data?($scope.calendar=data,$scope.calendar.calendar_startDate=startDate,$scope.calendar.calendar_endDate=endDate,$scope.calendar.calendar_duration=(moment(endDate)-moment(startDate))/6e4):$scope.calendar={calendar_startDate:startDate,calendar_endDate:endDate,calendar_duration:(moment(endDate)-moment(startDate))/6e4},$uibModal.open({animation:!0,scope:$scope,templateUrl:"scripts/mojrokovnik-calendar/calendar-dialog.html",controller:calendarDialogCtrl}),$scope.types=[{value:1,name:"Ročište"},{value:2,name:"Obaveza"}];var clients=api("clients").fetch(),cases=api("cases").fetch();$q.all([clients,cases]).then(function(values){$scope.clients=values[0],$scope.cases=values[1]})}}function casesCtrl($scope,api,$uibModal){function casesDialogCtrl($uibModalInstance){$scope.save=function(cases){$scope.editMode?api("cases").update(cases).then(function(){$scope.editMode=!1,$uibModalInstance.close()}):api("cases").add(cases).then(function(){$scope.cases.push(cases),$uibModalInstance.close()})},$scope.cancel=function(){$uibModalInstance.dismiss()}}api("cases").fetch({case_delete:0}).then(function(cases){$scope.cases=cases,$scope.sCase=cases[0],api("clients").fetch({client_id:cases[0].client_id}).then(function(client){$scope.client=client[0]})}),$scope.selectCase=function(ucase){$scope.sCase=ucase,api("clients").fetch({client_id:ucase.client_id}).then(function(client){$scope.client=client[0]})},$scope.removeCase=function(cases){api("cases")["delete"](cases).then(function(){$scope.cases=_.without($scope.cases,cases),$scope.selCase=$scope.cases[0]})},$scope.showDialog=function(cases){cases?($scope.newCase=cases,$scope.editMode=!0):(delete $scope.newCase,$scope.editMode=!1),api("clients").fetch({client_delete:0}).then(function(clients){$scope.clients=clients}),$uibModal.open({animation:!0,scope:$scope,size:"lg",templateUrl:"scripts/mojrokovnik-cases/cases-dialog.html",controller:casesDialogCtrl})}}function casesSidenav(){return{controller:casesCtrl,link:function(scope,elem,attr,ctrl){}}}function casesTemplate(){return{link:function(scope,elem,attr,ctrl){}}}function clientsCtrl($scope,api,$uibModal){function clientDialogCtrl($uibModalInstance){$scope.save=function(client){$scope.editMode?api("clients").update(client).then(function(){$scope.editMode=!1,$uibModalInstance.close()}):api("clients").add(client).then(function(){$scope.clients.push(client),$uibModalInstance.close()})},$scope.cancel=function(){$uibModalInstance.dismiss()}}api("clients").fetch({client_delete:0}).then(function(clients){$scope.clients=clients,$scope.sClient=clients[0],api("cases").fetch({client_id:clients[0].client_id}).then(function(cases){$scope.cases=cases})}),$scope.selectClient=function(client){$scope.sClient=client,api("cases").fetch({client_id:client.client_id}).then(function(cases){$scope.cases=cases})},$scope.removeClient=function(client){api("clients")["delete"](client).then(function(){$scope.clients=_.without($scope.clients,client),$scope.sClient=$scope.clients[0]})},$scope.showDialog=function(client){client?($scope.client=client,$scope.editMode=!0):(delete $scope.client,$scope.editMode=!1),$uibModal.open({animation:!0,scope:$scope,templateUrl:"scripts/mojrokovnik-clients/clients-dialog.html",controller:clientDialogCtrl})}}function clientsSidenav(){return{controller:clientsCtrl,link:function(scope,elem,attr,ctrl){}}}function clientsTemplate(){return{link:function(scope,elem,attr,ctrl){}}}function apiService($q,$http,notify){function isOK(response){function isErrData(data){return data&&data._status&&"ERR"===data._status}return response.status>=200&&response.status<300&&!isErrData(response.data)}function http(config){return $q.when(config.url).then(function(url){return config.url=url,$http(config)}).then(function(response){return isOK(response)?response.data:$q.reject(response)})}var api=function(table){return{fetch:function(params){return http({url:"../server/api.php?table="+table,method:"GET",params:params}).then(function(response){return response})},add:function(params){return http({url:"../server/api.php?table="+table,method:"POST",params:params}).then(function(response){return notify.success(response.msg),response})},update:function(params){return http({url:"../server/api.php?table="+table,method:"PUT",params:params}).then(function(response){return notify.success(response.msg),response})},"delete":function(params){return http({url:"../server/api.php?table="+table,method:"DELETE",params:params}).then(function(response){return notify.success(response.msg),response})}}};return api}function mrLoginCtrl($location,$http,$cookies,$scope,notify,api){$scope.login=function(login){$http({url:"../server/mr-login.php",method:"POST",params:login}).then(function(response){response.data.login?api("users").fetch().then(function(user){user&&($cookies.putObject("user",user),$location.url("/clients"))}):notify.error(response.data.msg)})}}function mrMainNavitagion($location,authentification){return{templateUrl:"scripts/mojrokovnik/navigation/navigation.html",link:function(scope){scope.visible=authentification.isLoggedIn(),scope.isCurrentPath=function(value){return $location.$$path===value}}}}function notifyService($mdToast){function showToast(type,text){$mdToast.show({template:'<md-toast class="md-toast '+type+'">'+text+"</md-toast>",position:"top right"})}this.success=function(text){showToast("success",text)},this.warn=function(text){showToast("warn",text)},this.error=function(text){showToast("error",text)}}function datetimePicker(){return{scope:{model:"="},link:function(scope,elem,attr,ctrl){elem.datetimepicker({format:"MMMM Do YYYY, HH:mm",inline:!0,sideBySide:!0,defaultDate:scope.model}),elem.on("dp.change",function(e){scope.model=e.date._d,scope.$apply()})}}}function mojrokovnikAuth(api,$cookies){var self=this;api("users").fetch().then(function(user){user&&(self.user=user)}),this.getUser=function(){return self.user},this.isLoggedIn=function(){return!!$cookies.getObject("user")}}function mojrokovnikConf($routeProvider){$routeProvider.otherwise({redirectTo:"/clients"}),$routeProvider.when("/login",{templateUrl:"scripts/mojrokovnik/login/login.html"}),$routeProvider.when("/clients",{templateUrl:"scripts/mojrokovnik-clients/clients.html"}),$routeProvider.when("/cases",{templateUrl:"scripts/mojrokovnik-cases/cases.html"}),$routeProvider.when("/calendar",{templateUrl:"scripts/mojrokovnik-calendar/calendar.html"})}function calendarTemplate(api){return{controller:calendarCtrl,link:function(scope,element,attr,ctrl){function initializeCalendar(events){element.fullCalendar({header:{left:"prev,next today",center:"title",right:"month,agendaWeek,agendaDay"},height:angular.element("body").height(),firstDay:1,lang:"sr",scrollTime:"08:00:00",defaultView:"agendaWeek",slotDuration:"00:15:00",timezone:"UTC",selectable:!0,editable:!0,eventLimit:!0,events:events,select:function(startDate,endDate){scope.showDialog(startDate,endDate)},eventClick:function(event){scope.showDialog(event.start,event.end,event.data),console.log(event.data)},eventDrop:function(event){scope.showDialog(event.start,event.end,event.data)},eventResize:function(event){scope.showDialog(event.start,event.end,event.data)}})}api("calendars").fetch().then(function(events){var filterEvents=[];return angular.forEach(events,function(item){filterEvents.push({title:item.calendar_name+" - "+item.calendar_comment,start:item.calendar_startDate,end:item.calendar_endDate,data:item})}),initializeCalendar(filterEvents)}),scope.createEvent=function(event){var eventData={title:event.calendar_name+" - "+event.calendar_comment,start:event.calendar_startDate,end:event.calendar_endDate,data:event};element.fullCalendar("renderEvent",eventData,!0),element.fullCalendar("unselect")}}}}function calendarCtrl($scope,$q,$uibModal,api){function calendarDialogCtrl($uibModalInstance){$scope.save=function(calendar){calendar.calendar_startDate=calendar.calendar_startDate._d,calendar.calendar_endDate=moment(calendar.calendar_startDate).add(calendar.calendar_duration,"m")._d,calendar=_.omit(calendar,"calendar_duration"),calendar.calendar_id?api("calendars").update(calendar).then(function(){$uibModalInstance.close()}):api("calendars").add(calendar).then(function(data){calendar.calendar_id=data.id,$scope.createEvent(calendar),$uibModalInstance.close()})},$scope.cancel=function(){$uibModalInstance.dismiss()}}$scope.showDialog=function(startDate,endDate,data){data?($scope.calendar=data,$scope.calendar.calendar_startDate=startDate,$scope.calendar.calendar_endDate=endDate,$scope.calendar.calendar_duration=(moment(endDate)-moment(startDate))/6e4):$scope.calendar={calendar_startDate:startDate,calendar_endDate:endDate,calendar_duration:(moment(endDate)-moment(startDate))/6e4},$uibModal.open({animation:!0,scope:$scope,templateUrl:"scripts/mojrokovnik-calendar/calendar-dialog.html",controller:calendarDialogCtrl}),$scope.types=[{value:1,name:"Ročište"},{value:2,name:"Obaveza"}];var clients=api("clients").fetch(),cases=api("cases").fetch();$q.all([clients,cases]).then(function(values){$scope.clients=values[0],$scope.cases=values[1]})}}function casesCtrl($scope,api,$uibModal){function casesDialogCtrl($uibModalInstance){$scope.save=function(cases){$scope.editMode?api("cases").update(cases).then(function(){$scope.editMode=!1,$uibModalInstance.close()}):api("cases").add(cases).then(function(){$scope.cases.push(cases),$uibModalInstance.close()})},$scope.cancel=function(){$uibModalInstance.dismiss()}}api("cases").fetch({case_delete:0}).then(function(cases){$scope.cases=cases,$scope.sCase=cases[0],api("clients").fetch({client_id:cases[0].client_id}).then(function(client){$scope.client=client[0]})}),$scope.selectCase=function(ucase){$scope.sCase=ucase,api("clients").fetch({client_id:ucase.client_id}).then(function(client){$scope.client=client[0]})},$scope.removeCase=function(cases){api("cases")["delete"](cases).then(function(){$scope.cases=_.without($scope.cases,cases),$scope.selCase=$scope.cases[0]})},$scope.showDialog=function(cases){cases?($scope.newCase=cases,$scope.editMode=!0):(delete $scope.newCase,$scope.editMode=!1),api("clients").fetch({client_delete:0}).then(function(clients){$scope.clients=clients}),$uibModal.open({animation:!0,scope:$scope,size:"lg",templateUrl:"scripts/mojrokovnik-cases/cases-dialog.html",controller:casesDialogCtrl}),$scope.data={rivalType:["Tužilac","Tuženi","Poverilac","Dužnik","Usvojilac","Usvojenik","Izvršni poverilac","Izvršni dužnik","Predlagač","Protivnik predlagača","Privatni tužilac","Okrivljeni","Treće lice","Oštećeni"],caseType:["Izvršni postupak","Krivični postupak","Parnični postupak","Prekršajni postupak","Privredno pravo","Upravni postupak i sporovi","Vanparnični postupak","Ostalo"],caseElement:["Bračni spor","Izdržavanje","Kolektivni ugovori  spor","Materinstvo i očinstvo","Naknada štete","Nasledni spor","Obligacioni spor","Platni nalog","Poništaj usvojenja","Privredni spor","Radni spor","Roditeljsko pravo","Smetanje državine","Spor  povreda žiga ili firme","Spor authorskih prava","Spor male vrednosti","Stambeni spor","Svojinski spor","Zaštita od nasilja u porodici","Zaštita prava deteta","Ostalo"]},$scope.getClient=function(client_id){var client=_.find($scope.clients,function(client){});console.log(client)}}}function casesSidenav(){return{controller:casesCtrl,link:function(scope,elem,attr,ctrl){}}}function casesTemplate(){return{link:function(scope,elem,attr,ctrl){}}}function clientsCtrl($scope,api,$uibModal){function clientDialogCtrl($uibModalInstance){$scope.save=function(client){$scope.editMode?api("clients").update(client).then(function(){$scope.editMode=!1,$uibModalInstance.close()}):api("clients").add(client).then(function(){$scope.clients.push(client),$uibModalInstance.close()})},$scope.cancel=function(){$uibModalInstance.dismiss()}}api("clients").fetch({client_delete:0}).then(function(clients){$scope.clients=clients,$scope.sClient=clients[0],api("cases").fetch({client_id:clients[0].client_id}).then(function(cases){$scope.cases=cases})}),$scope.selectClient=function(client){$scope.sClient=client,api("cases").fetch({client_id:client.client_id}).then(function(cases){$scope.cases=cases})},$scope.removeClient=function(client){api("clients")["delete"](client).then(function(){$scope.clients=_.without($scope.clients,client),$scope.sClient=$scope.clients[0]})},$scope.showDialog=function(client){client?($scope.client=client,$scope.editMode=!0):(delete $scope.client,$scope.editMode=!1),$uibModal.open({animation:!0,scope:$scope,templateUrl:"scripts/mojrokovnik-clients/clients-dialog.html",controller:clientDialogCtrl})}}function clientsSidenav(){return{controller:clientsCtrl,link:function(scope,elem,attr,ctrl){}}}function clientsTemplate(){return{link:function(scope,elem,attr,ctrl){}}}function apiService($q,$http,notify){function isOK(response){function isErrData(data){return data&&data._status&&"ERR"===data._status}return response.status>=200&&response.status<300&&!isErrData(response.data)}function http(config){return $q.when(config.url).then(function(url){return config.url=url,$http(config)}).then(function(response){return isOK(response)?response.data:$q.reject(response)})}var api=function(table){return{fetch:function(params){return http({url:"../server/api.php?table="+table,method:"GET",params:params}).then(function(response){return response})},add:function(params){return http({url:"../server/api.php?table="+table,method:"POST",params:params}).then(function(response){return notify.success(response.msg),response})},update:function(params){return http({url:"../server/api.php?table="+table,method:"PUT",params:params}).then(function(response){return notify.success(response.msg),response})},"delete":function(params){return http({url:"../server/api.php?table="+table,method:"DELETE",params:params}).then(function(response){return notify.success(response.msg),response})}}};return api}function mrLoginCtrl($location,$http,$cookies,$scope,notify,api){$scope.login=function(login){$http({url:"../server/mr-login.php",method:"POST",params:login}).then(function(response){response.data.login?api("users").fetch().then(function(user){user&&($cookies.putObject("user",user),$location.url("/clients"))}):notify.error(response.data.msg)})}}function mrMainNavitagion($location,authentification){return{templateUrl:"scripts/mojrokovnik/navigation/navigation.html",link:function(scope){scope.visible=authentification.isLoggedIn(),scope.isCurrentPath=function(value){return $location.$$path===value}}}}function notifyService($mdToast){function showToast(type,text){$mdToast.show({template:'<md-toast class="md-toast '+type+'">'+text+"</md-toast>",position:"top right"})}this.success=function(text){showToast("success",text)},this.warn=function(text){showToast("warn",text)},this.error=function(text){showToast("error",text)}}function datetimePicker(){return{scope:{model:"="},link:function(scope,elem,attr,ctrl){elem.datetimepicker({format:"MMMM Do YYYY, HH:mm",inline:!0,sideBySide:!0,defaultDate:scope.model}),elem.on("dp.change",function(e){scope.model=e.date._d,scope.$apply()})}}}function mojrokovnikAuth(api,$cookies){var self=this;api("users").fetch().then(function(user){user&&(self.user=user)}),this.getUser=function(){return self.user},this.isLoggedIn=function(){return!!$cookies.getObject("user")}}function mojrokovnikConf($routeProvider){$routeProvider.otherwise({redirectTo:"/clients"}),$routeProvider.when("/login",{templateUrl:"scripts/mojrokovnik/login/login.html"}),$routeProvider.when("/clients",{templateUrl:"scripts/mojrokovnik-clients/clients.html"}),$routeProvider.when("/cases",{templateUrl:"scripts/mojrokovnik-cases/cases.html"}),$routeProvider.when("/calendar",{templateUrl:"scripts/mojrokovnik-calendar/calendar.html"})}function calendarTemplate(api){return{controller:calendarCtrl,link:function(scope,element,attr,ctrl){function initializeCalendar(events){element.fullCalendar({header:{left:"prev,next today",center:"title",right:"month,agendaWeek,agendaDay"},height:angular.element("body").height(),firstDay:1,lang:"sr",scrollTime:"08:00:00",defaultView:"agendaWeek",slotDuration:"00:15:00",timezone:"UTC",selectable:!0,editable:!0,eventLimit:!0,events:events,select:function(startDate,endDate){scope.showDialog(startDate,endDate)},eventClick:function(event){scope.showDialog(event.start,event.end,event.data),console.log(event.data)},eventDrop:function(event){scope.showDialog(event.start,event.end,event.data)},eventResize:function(event){scope.showDialog(event.start,event.end,event.data)}})}api("calendars").fetch().then(function(events){var filterEvents=[];return angular.forEach(events,function(item){filterEvents.push({title:item.calendar_name+" - "+item.calendar_comment,start:item.calendar_startDate,end:item.calendar_endDate,data:item})}),initializeCalendar(filterEvents)}),scope.createEvent=function(event){var eventData={title:event.calendar_name+" - "+event.calendar_comment,start:event.calendar_startDate,end:event.calendar_endDate,data:event};element.fullCalendar("renderEvent",eventData,!0),element.fullCalendar("unselect")}}}}function calendarCtrl($scope,$q,$uibModal,api){function calendarDialogCtrl($uibModalInstance){$scope.save=function(calendar){calendar.calendar_startDate=calendar.calendar_startDate._d,calendar.calendar_endDate=moment(calendar.calendar_startDate).add(calendar.calendar_duration,"m")._d,calendar=_.omit(calendar,"calendar_duration"),calendar.calendar_id?api("calendars").update(calendar).then(function(){$uibModalInstance.close()}):api("calendars").add(calendar).then(function(data){calendar.calendar_id=data.id,$scope.createEvent(calendar),$uibModalInstance.close()})},$scope.cancel=function(){$uibModalInstance.dismiss()}}$scope.showDialog=function(startDate,endDate,data){data?($scope.calendar=data,$scope.calendar.calendar_startDate=startDate,$scope.calendar.calendar_endDate=endDate,$scope.calendar.calendar_duration=(moment(endDate)-moment(startDate))/6e4):$scope.calendar={calendar_startDate:startDate,calendar_endDate:endDate,calendar_duration:(moment(endDate)-moment(startDate))/6e4},$uibModal.open({animation:!0,scope:$scope,templateUrl:"scripts/mojrokovnik-calendar/calendar-dialog.html",controller:calendarDialogCtrl}),$scope.types=[{value:1,name:"Ročište"},{value:2,name:"Obaveza"}];var clients=api("clients").fetch(),cases=api("cases").fetch();$q.all([clients,cases]).then(function(values){$scope.clients=values[0],$scope.cases=values[1]})}}function casesCtrl($scope,api,$uibModal){function casesDialogCtrl($uibModalInstance){$scope.save=function(cases){$scope.editMode?api("cases").update(cases).then(function(){$scope.editMode=!1,$uibModalInstance.close()}):api("cases").add(cases).then(function(){$scope.cases.push(cases),$uibModalInstance.close()})},$scope.cancel=function(){$uibModalInstance.dismiss()}}api("cases").fetch({case_delete:0}).then(function(cases){$scope.cases=cases,$scope.sCase=cases[0],api("clients").fetch({client_id:cases[0].client_id}).then(function(client){$scope.client=client[0]})}),$scope.selectCase=function(ucase){$scope.sCase=ucase,api("clients").fetch({client_id:ucase.client_id}).then(function(client){$scope.client=client[0]})},$scope.removeCase=function(cases){api("cases")["delete"](cases).then(function(){$scope.cases=_.without($scope.cases,cases),$scope.selCase=$scope.cases[0]})},$scope.showDialog=function(cases){cases?($scope.newCase=cases,$scope.editMode=!0):(delete $scope.newCase,$scope.editMode=!1),api("clients").fetch({client_delete:0}).then(function(clients){$scope.clients=clients}),$uibModal.open({animation:!0,scope:$scope,size:"lg",templateUrl:"scripts/mojrokovnik-cases/cases-dialog.html",controller:casesDialogCtrl}),$scope.data={rivalType:["Tužilac","Tuženi","Poverilac","Dužnik","Usvojilac","Usvojenik","Izvršni poverilac","Izvršni dužnik","Predlagač","Protivnik predlagača","Privatni tužilac","Okrivljeni","Treće lice","Oštećeni"],caseType:["Izvršni postupak","Krivični postupak","Parnični postupak","Prekršajni postupak","Privredno pravo","Upravni postupak i sporovi","Vanparnični postupak","Ostalo"],caseElement:["Bračni spor","Izdržavanje","Kolektivni ugovori  spor","Materinstvo i očinstvo","Naknada štete","Nasledni spor","Obligacioni spor","Platni nalog","Poništaj usvojenja","Privredni spor","Radni spor","Roditeljsko pravo","Smetanje državine","Spor  povreda žiga ili firme","Spor authorskih prava","Spor male vrednosti","Stambeni spor","Svojinski spor","Zaštita od nasilja u porodici","Zaštita prava deteta","Ostalo"]},$scope.getClient=function(client_id){var client=_.find($scope.clients,function(client){return"client_id"===client[0]});console.log(client)}}}function casesSidenav(){return{controller:casesCtrl,link:function(scope,elem,attr,ctrl){}}}function casesTemplate(){return{link:function(scope,elem,attr,ctrl){}}}function clientsCtrl($scope,api,$uibModal){function clientDialogCtrl($uibModalInstance){$scope.save=function(client){$scope.editMode?api("clients").update(client).then(function(){$scope.editMode=!1,$uibModalInstance.close()}):api("clients").add(client).then(function(){$scope.clients.push(client),$uibModalInstance.close()})},$scope.cancel=function(){$uibModalInstance.dismiss()}}api("clients").fetch({client_delete:0}).then(function(clients){$scope.clients=clients,$scope.sClient=clients[0],api("cases").fetch({client_id:clients[0].client_id}).then(function(cases){$scope.cases=cases})}),$scope.selectClient=function(client){$scope.sClient=client,api("cases").fetch({client_id:client.client_id}).then(function(cases){$scope.cases=cases})},$scope.removeClient=function(client){api("clients")["delete"](client).then(function(){$scope.clients=_.without($scope.clients,client),$scope.sClient=$scope.clients[0]})},$scope.showDialog=function(client){client?($scope.client=client,$scope.editMode=!0):(delete $scope.client,$scope.editMode=!1),$uibModal.open({animation:!0,scope:$scope,templateUrl:"scripts/mojrokovnik-clients/clients-dialog.html",controller:clientDialogCtrl})}}function clientsSidenav(){return{controller:clientsCtrl,link:function(scope,elem,attr,ctrl){}}}function clientsTemplate(){return{link:function(scope,elem,attr,ctrl){}}}function apiService($q,$http,notify){function isOK(response){function isErrData(data){return data&&data._status&&"ERR"===data._status}return response.status>=200&&response.status<300&&!isErrData(response.data)}function http(config){return $q.when(config.url).then(function(url){return config.url=url,$http(config)}).then(function(response){return isOK(response)?response.data:$q.reject(response)})}var api=function(table){return{fetch:function(params){return http({url:"../server/api.php?table="+table,method:"GET",params:params}).then(function(response){return response})},add:function(params){return http({url:"../server/api.php?table="+table,method:"POST",params:params}).then(function(response){return notify.success(response.msg),response})},update:function(params){return http({url:"../server/api.php?table="+table,method:"PUT",params:params}).then(function(response){return notify.success(response.msg),response})},"delete":function(params){return http({url:"../server/api.php?table="+table,method:"DELETE",params:params}).then(function(response){return notify.success(response.msg),response})}}};return api}function mrLoginCtrl($location,$http,$cookies,$scope,notify,api){$scope.login=function(login){$http({url:"../server/mr-login.php",method:"POST",params:login}).then(function(response){response.data.login?api("users").fetch().then(function(user){user&&($cookies.putObject("user",user),$location.url("/clients"))}):notify.error(response.data.msg)})}}function mrMainNavitagion($location,authentification){return{templateUrl:"scripts/mojrokovnik/navigation/navigation.html",link:function(scope){scope.visible=authentification.isLoggedIn(),scope.isCurrentPath=function(value){return $location.$$path===value}}}}function notifyService($mdToast){function showToast(type,text){$mdToast.show({template:'<md-toast class="md-toast '+type+'">'+text+"</md-toast>",position:"top right"})}this.success=function(text){showToast("success",text)},this.warn=function(text){showToast("warn",text)},this.error=function(text){showToast("error",text)}}function datetimePicker(){return{scope:{model:"="},link:function(scope,elem,attr,ctrl){elem.datetimepicker({format:"MMMM Do YYYY, HH:mm",inline:!0,sideBySide:!0,defaultDate:scope.model}),elem.on("dp.change",function(e){scope.model=e.date._d,scope.$apply()})}}}function mojrokovnikAuth(api,$cookies){var self=this;api("users").fetch().then(function(user){user&&(self.user=user)}),this.getUser=function(){return self.user},this.isLoggedIn=function(){return!!$cookies.getObject("user")}}function mojrokovnikConf($routeProvider){$routeProvider.otherwise({redirectTo:"/clients"}),$routeProvider.when("/login",{templateUrl:"scripts/mojrokovnik/login/login.html"}),$routeProvider.when("/clients",{templateUrl:"scripts/mojrokovnik-clients/clients.html"}),$routeProvider.when("/cases",{templateUrl:"scripts/mojrokovnik-cases/cases.html"}),$routeProvider.when("/calendar",{templateUrl:"scripts/mojrokovnik-calendar/calendar.html"})}function calendarTemplate(api){return{controller:calendarCtrl,link:function(scope,element,attr,ctrl){function initializeCalendar(events){element.fullCalendar({header:{left:"prev,next today",center:"title",right:"month,agendaWeek,agendaDay"},height:angular.element("body").height(),firstDay:1,lang:"sr",scrollTime:"08:00:00",defaultView:"agendaWeek",slotDuration:"00:15:00",timezone:"UTC",selectable:!0,editable:!0,eventLimit:!0,events:events,select:function(startDate,endDate){scope.showDialog(startDate,endDate)},eventClick:function(event){scope.showDialog(event.start,event.end,event.data),console.log(event.data)},eventDrop:function(event){scope.showDialog(event.start,event.end,event.data)},eventResize:function(event){scope.showDialog(event.start,event.end,event.data)}})}api("calendars").fetch().then(function(events){var filterEvents=[];return angular.forEach(events,function(item){filterEvents.push({title:item.calendar_name+" - "+item.calendar_comment,start:item.calendar_startDate,end:item.calendar_endDate,data:item})}),initializeCalendar(filterEvents)}),scope.createEvent=function(event){var eventData={title:event.calendar_name+" - "+event.calendar_comment,start:event.calendar_startDate,end:event.calendar_endDate,data:event};element.fullCalendar("renderEvent",eventData,!0),element.fullCalendar("unselect")}}}}function calendarCtrl($scope,$q,$uibModal,api){function calendarDialogCtrl($uibModalInstance){$scope.save=function(calendar){calendar.calendar_startDate=calendar.calendar_startDate._d,calendar.calendar_endDate=moment(calendar.calendar_startDate).add(calendar.calendar_duration,"m")._d,calendar=_.omit(calendar,"calendar_duration"),calendar.calendar_id?api("calendars").update(calendar).then(function(){$uibModalInstance.close()}):api("calendars").add(calendar).then(function(data){calendar.calendar_id=data.id,$scope.createEvent(calendar),$uibModalInstance.close()})},$scope.cancel=function(){$uibModalInstance.dismiss()}}$scope.showDialog=function(startDate,endDate,data){data?($scope.calendar=data,$scope.calendar.calendar_startDate=startDate,$scope.calendar.calendar_endDate=endDate,$scope.calendar.calendar_duration=(moment(endDate)-moment(startDate))/6e4):$scope.calendar={calendar_startDate:startDate,calendar_endDate:endDate,calendar_duration:(moment(endDate)-moment(startDate))/6e4},$uibModal.open({animation:!0,scope:$scope,templateUrl:"scripts/mojrokovnik-calendar/calendar-dialog.html",controller:calendarDialogCtrl}),$scope.types=[{value:1,name:"Ročište"},{value:2,name:"Obaveza"}];var clients=api("clients").fetch(),cases=api("cases").fetch();$q.all([clients,cases]).then(function(values){$scope.clients=values[0],$scope.cases=values[1]})}}function casesCtrl($scope,api,$uibModal){function casesDialogCtrl($uibModalInstance){$scope.save=function(cases){$scope.editMode?api("cases").update(cases).then(function(){$scope.editMode=!1,$uibModalInstance.close()}):api("cases").add(cases).then(function(){$scope.cases.push(cases),$uibModalInstance.close()})},$scope.cancel=function(){$uibModalInstance.dismiss()}}api("cases").fetch({case_delete:0}).then(function(cases){$scope.cases=cases,$scope.sCase=cases[0],api("clients").fetch({client_id:cases[0].client_id}).then(function(client){$scope.client=client[0]})}),$scope.selectCase=function(ucase){$scope.sCase=ucase,api("clients").fetch({client_id:ucase.client_id}).then(function(client){$scope.client=client[0]})},$scope.removeCase=function(cases){api("cases")["delete"](cases).then(function(){$scope.cases=_.without($scope.cases,cases),$scope.selCase=$scope.cases[0]})},$scope.showDialog=function(cases){cases?($scope.newCase=cases,$scope.editMode=!0):(delete $scope.newCase,$scope.editMode=!1),api("clients").fetch({client_delete:0}).then(function(clients){$scope.clients=clients}),$uibModal.open({animation:!0,scope:$scope,size:"lg",templateUrl:"scripts/mojrokovnik-cases/cases-dialog.html",controller:casesDialogCtrl}),$scope.data={rivalType:["Tužilac","Tuženi","Poverilac","Dužnik","Usvojilac","Usvojenik","Izvršni poverilac","Izvršni dužnik","Predlagač","Protivnik predlagača","Privatni tužilac","Okrivljeni","Treće lice","Oštećeni"],caseType:["Izvršni postupak","Krivični postupak","Parnični postupak","Prekršajni postupak","Privredno pravo","Upravni postupak i sporovi","Vanparnični postupak","Ostalo"],caseElement:["Bračni spor","Izdržavanje","Kolektivni ugovori  spor","Materinstvo i očinstvo","Naknada štete","Nasledni spor","Obligacioni spor","Platni nalog","Poništaj usvojenja","Privredni spor","Radni spor","Roditeljsko pravo","Smetanje državine","Spor  povreda žiga ili firme","Spor authorskih prava","Spor male vrednosti","Stambeni spor","Svojinski spor","Zaštita od nasilja u porodici","Zaštita prava deteta","Ostalo"]
},$scope.getClient=function(client_id){var client=_.find($scope.clients,function(client){return"client_id"===client[0]});console.log(client)},$scope.getClient(1)}}function casesSidenav(){return{controller:casesCtrl,link:function(scope,elem,attr,ctrl){}}}function casesTemplate(){return{link:function(scope,elem,attr,ctrl){}}}function clientsCtrl($scope,api,$uibModal){function clientDialogCtrl($uibModalInstance){$scope.save=function(client){$scope.editMode?api("clients").update(client).then(function(){$scope.editMode=!1,$uibModalInstance.close()}):api("clients").add(client).then(function(){$scope.clients.push(client),$uibModalInstance.close()})},$scope.cancel=function(){$uibModalInstance.dismiss()}}api("clients").fetch({client_delete:0}).then(function(clients){$scope.clients=clients,$scope.sClient=clients[0],api("cases").fetch({client_id:clients[0].client_id}).then(function(cases){$scope.cases=cases})}),$scope.selectClient=function(client){$scope.sClient=client,api("cases").fetch({client_id:client.client_id}).then(function(cases){$scope.cases=cases})},$scope.removeClient=function(client){api("clients")["delete"](client).then(function(){$scope.clients=_.without($scope.clients,client),$scope.sClient=$scope.clients[0]})},$scope.showDialog=function(client){client?($scope.client=client,$scope.editMode=!0):(delete $scope.client,$scope.editMode=!1),$uibModal.open({animation:!0,scope:$scope,templateUrl:"scripts/mojrokovnik-clients/clients-dialog.html",controller:clientDialogCtrl})}}function clientsSidenav(){return{controller:clientsCtrl,link:function(scope,elem,attr,ctrl){}}}function clientsTemplate(){return{link:function(scope,elem,attr,ctrl){}}}function apiService($q,$http,notify){function isOK(response){function isErrData(data){return data&&data._status&&"ERR"===data._status}return response.status>=200&&response.status<300&&!isErrData(response.data)}function http(config){return $q.when(config.url).then(function(url){return config.url=url,$http(config)}).then(function(response){return isOK(response)?response.data:$q.reject(response)})}var api=function(table){return{fetch:function(params){return http({url:"../server/api.php?table="+table,method:"GET",params:params}).then(function(response){return response})},add:function(params){return http({url:"../server/api.php?table="+table,method:"POST",params:params}).then(function(response){return notify.success(response.msg),response})},update:function(params){return http({url:"../server/api.php?table="+table,method:"PUT",params:params}).then(function(response){return notify.success(response.msg),response})},"delete":function(params){return http({url:"../server/api.php?table="+table,method:"DELETE",params:params}).then(function(response){return notify.success(response.msg),response})}}};return api}function mrLoginCtrl($location,$http,$cookies,$scope,notify,api){$scope.login=function(login){$http({url:"../server/mr-login.php",method:"POST",params:login}).then(function(response){response.data.login?api("users").fetch().then(function(user){user&&($cookies.putObject("user",user),$location.url("/clients"))}):notify.error(response.data.msg)})}}function mrMainNavitagion($location,authentification){return{templateUrl:"scripts/mojrokovnik/navigation/navigation.html",link:function(scope){scope.visible=authentification.isLoggedIn(),scope.isCurrentPath=function(value){return $location.$$path===value}}}}function notifyService($mdToast){function showToast(type,text){$mdToast.show({template:'<md-toast class="md-toast '+type+'">'+text+"</md-toast>",position:"top right"})}this.success=function(text){showToast("success",text)},this.warn=function(text){showToast("warn",text)},this.error=function(text){showToast("error",text)}}function datetimePicker(){return{scope:{model:"="},link:function(scope,elem,attr,ctrl){elem.datetimepicker({format:"MMMM Do YYYY, HH:mm",inline:!0,sideBySide:!0,defaultDate:scope.model}),elem.on("dp.change",function(e){scope.model=e.date._d,scope.$apply()})}}}function mojrokovnikAuth(api,$cookies){var self=this;api("users").fetch().then(function(user){user&&(self.user=user)}),this.getUser=function(){return self.user},this.isLoggedIn=function(){return!!$cookies.getObject("user")}}function mojrokovnikConf($routeProvider){$routeProvider.otherwise({redirectTo:"/clients"}),$routeProvider.when("/login",{templateUrl:"scripts/mojrokovnik/login/login.html"}),$routeProvider.when("/clients",{templateUrl:"scripts/mojrokovnik-clients/clients.html"}),$routeProvider.when("/cases",{templateUrl:"scripts/mojrokovnik-cases/cases.html"}),$routeProvider.when("/calendar",{templateUrl:"scripts/mojrokovnik-calendar/calendar.html"})}function calendarTemplate(api){return{controller:calendarCtrl,link:function(scope,element,attr,ctrl){function initializeCalendar(events){element.fullCalendar({header:{left:"prev,next today",center:"title",right:"month,agendaWeek,agendaDay"},height:angular.element("body").height(),firstDay:1,lang:"sr",scrollTime:"08:00:00",defaultView:"agendaWeek",slotDuration:"00:15:00",timezone:"UTC",selectable:!0,editable:!0,eventLimit:!0,events:events,select:function(startDate,endDate){scope.showDialog(startDate,endDate)},eventClick:function(event){scope.showDialog(event.start,event.end,event.data),console.log(event.data)},eventDrop:function(event){scope.showDialog(event.start,event.end,event.data)},eventResize:function(event){scope.showDialog(event.start,event.end,event.data)}})}api("calendars").fetch().then(function(events){var filterEvents=[];return angular.forEach(events,function(item){filterEvents.push({title:item.calendar_name+" - "+item.calendar_comment,start:item.calendar_startDate,end:item.calendar_endDate,data:item})}),initializeCalendar(filterEvents)}),scope.createEvent=function(event){var eventData={title:event.calendar_name+" - "+event.calendar_comment,start:event.calendar_startDate,end:event.calendar_endDate,data:event};element.fullCalendar("renderEvent",eventData,!0),element.fullCalendar("unselect")}}}}function calendarCtrl($scope,$q,$uibModal,api){function calendarDialogCtrl($uibModalInstance){$scope.save=function(calendar){calendar.calendar_startDate=calendar.calendar_startDate._d,calendar.calendar_endDate=moment(calendar.calendar_startDate).add(calendar.calendar_duration,"m")._d,calendar=_.omit(calendar,"calendar_duration"),calendar.calendar_id?api("calendars").update(calendar).then(function(){$uibModalInstance.close()}):api("calendars").add(calendar).then(function(data){calendar.calendar_id=data.id,$scope.createEvent(calendar),$uibModalInstance.close()})},$scope.cancel=function(){$uibModalInstance.dismiss()}}$scope.showDialog=function(startDate,endDate,data){data?($scope.calendar=data,$scope.calendar.calendar_startDate=startDate,$scope.calendar.calendar_endDate=endDate,$scope.calendar.calendar_duration=(moment(endDate)-moment(startDate))/6e4):$scope.calendar={calendar_startDate:startDate,calendar_endDate:endDate,calendar_duration:(moment(endDate)-moment(startDate))/6e4},$uibModal.open({animation:!0,scope:$scope,templateUrl:"scripts/mojrokovnik-calendar/calendar-dialog.html",controller:calendarDialogCtrl}),$scope.types=[{value:1,name:"Ročište"},{value:2,name:"Obaveza"}];var clients=api("clients").fetch(),cases=api("cases").fetch();$q.all([clients,cases]).then(function(values){$scope.clients=values[0],$scope.cases=values[1]})}}function casesCtrl($scope,api,$uibModal){function casesDialogCtrl($uibModalInstance){$scope.save=function(cases){$scope.editMode?api("cases").update(cases).then(function(){$scope.editMode=!1,$uibModalInstance.close()}):api("cases").add(cases).then(function(){$scope.cases.push(cases),$uibModalInstance.close()})},$scope.cancel=function(){$uibModalInstance.dismiss()}}api("cases").fetch({case_delete:0}).then(function(cases){$scope.cases=cases,$scope.sCase=cases[0],api("clients").fetch({client_id:cases[0].client_id}).then(function(client){$scope.client=client[0]})}),$scope.selectCase=function(ucase){$scope.sCase=ucase,api("clients").fetch({client_id:ucase.client_id}).then(function(client){$scope.client=client[0]})},$scope.removeCase=function(cases){api("cases")["delete"](cases).then(function(){$scope.cases=_.without($scope.cases,cases),$scope.selCase=$scope.cases[0]})},$scope.showDialog=function(cases){cases?($scope.newCase=cases,$scope.editMode=!0):(delete $scope.newCase,$scope.editMode=!1),api("clients").fetch({client_delete:0}).then(function(clients){$scope.clients=clients}),$uibModal.open({animation:!0,scope:$scope,size:"lg",templateUrl:"scripts/mojrokovnik-cases/cases-dialog.html",controller:casesDialogCtrl}),$scope.data={rivalType:["Tužilac","Tuženi","Poverilac","Dužnik","Usvojilac","Usvojenik","Izvršni poverilac","Izvršni dužnik","Predlagač","Protivnik predlagača","Privatni tužilac","Okrivljeni","Treće lice","Oštećeni"],caseType:["Izvršni postupak","Krivični postupak","Parnični postupak","Prekršajni postupak","Privredno pravo","Upravni postupak i sporovi","Vanparnični postupak","Ostalo"],caseElement:["Bračni spor","Izdržavanje","Kolektivni ugovori  spor","Materinstvo i očinstvo","Naknada štete","Nasledni spor","Obligacioni spor","Platni nalog","Poništaj usvojenja","Privredni spor","Radni spor","Roditeljsko pravo","Smetanje državine","Spor  povreda žiga ili firme","Spor authorskih prava","Spor male vrednosti","Stambeni spor","Svojinski spor","Zaštita od nasilja u porodici","Zaštita prava deteta","Ostalo"]},$scope.getClient=function(client_id){var client=_.find($scope.clients,function(client){"client_id"===client[0]});console.log(client)},$scope.getClient(1)}}function casesSidenav(){return{controller:casesCtrl,link:function(scope,elem,attr,ctrl){}}}function casesTemplate(){return{link:function(scope,elem,attr,ctrl){}}}function clientsCtrl($scope,api,$uibModal){function clientDialogCtrl($uibModalInstance){$scope.save=function(client){$scope.editMode?api("clients").update(client).then(function(){$scope.editMode=!1,$uibModalInstance.close()}):api("clients").add(client).then(function(){$scope.clients.push(client),$uibModalInstance.close()})},$scope.cancel=function(){$uibModalInstance.dismiss()}}api("clients").fetch({client_delete:0}).then(function(clients){$scope.clients=clients,$scope.sClient=clients[0],api("cases").fetch({client_id:clients[0].client_id}).then(function(cases){$scope.cases=cases})}),$scope.selectClient=function(client){$scope.sClient=client,api("cases").fetch({client_id:client.client_id}).then(function(cases){$scope.cases=cases})},$scope.removeClient=function(client){api("clients")["delete"](client).then(function(){$scope.clients=_.without($scope.clients,client),$scope.sClient=$scope.clients[0]})},$scope.showDialog=function(client){client?($scope.client=client,$scope.editMode=!0):(delete $scope.client,$scope.editMode=!1),$uibModal.open({animation:!0,scope:$scope,templateUrl:"scripts/mojrokovnik-clients/clients-dialog.html",controller:clientDialogCtrl})}}function clientsSidenav(){return{controller:clientsCtrl,link:function(scope,elem,attr,ctrl){}}}function clientsTemplate(){return{link:function(scope,elem,attr,ctrl){}}}function apiService($q,$http,notify){function isOK(response){function isErrData(data){return data&&data._status&&"ERR"===data._status}return response.status>=200&&response.status<300&&!isErrData(response.data)}function http(config){return $q.when(config.url).then(function(url){return config.url=url,$http(config)}).then(function(response){return isOK(response)?response.data:$q.reject(response)})}var api=function(table){return{fetch:function(params){return http({url:"../server/api.php?table="+table,method:"GET",params:params}).then(function(response){return response})},add:function(params){return http({url:"../server/api.php?table="+table,method:"POST",params:params}).then(function(response){return notify.success(response.msg),response})},update:function(params){return http({url:"../server/api.php?table="+table,method:"PUT",params:params}).then(function(response){return notify.success(response.msg),response})},"delete":function(params){return http({url:"../server/api.php?table="+table,method:"DELETE",params:params}).then(function(response){return notify.success(response.msg),response})}}};return api}function mrLoginCtrl($location,$http,$cookies,$scope,notify,api){$scope.login=function(login){$http({url:"../server/mr-login.php",method:"POST",params:login}).then(function(response){response.data.login?api("users").fetch().then(function(user){user&&($cookies.putObject("user",user),$location.url("/clients"))}):notify.error(response.data.msg)})}}function mrMainNavitagion($location,authentification){return{templateUrl:"scripts/mojrokovnik/navigation/navigation.html",link:function(scope){scope.visible=authentification.isLoggedIn(),scope.isCurrentPath=function(value){return $location.$$path===value}}}}function notifyService($mdToast){function showToast(type,text){$mdToast.show({template:'<md-toast class="md-toast '+type+'">'+text+"</md-toast>",position:"top right"})}this.success=function(text){showToast("success",text)},this.warn=function(text){showToast("warn",text)},this.error=function(text){showToast("error",text)}}function datetimePicker(){return{scope:{model:"="},link:function(scope,elem,attr,ctrl){elem.datetimepicker({format:"MMMM Do YYYY, HH:mm",inline:!0,sideBySide:!0,defaultDate:scope.model}),elem.on("dp.change",function(e){scope.model=e.date._d,scope.$apply()})}}}function mojrokovnikAuth(api,$cookies){var self=this;api("users").fetch().then(function(user){user&&(self.user=user)}),this.getUser=function(){return self.user},this.isLoggedIn=function(){return!!$cookies.getObject("user")}}function mojrokovnikConf($routeProvider){$routeProvider.otherwise({redirectTo:"/clients"}),$routeProvider.when("/login",{templateUrl:"scripts/mojrokovnik/login/login.html"}),$routeProvider.when("/clients",{templateUrl:"scripts/mojrokovnik-clients/clients.html"}),$routeProvider.when("/cases",{templateUrl:"scripts/mojrokovnik-cases/cases.html"}),$routeProvider.when("/calendar",{templateUrl:"scripts/mojrokovnik-calendar/calendar.html"})}function calendarTemplate(api){return{controller:calendarCtrl,link:function(scope,element,attr,ctrl){function initializeCalendar(events){element.fullCalendar({header:{left:"prev,next today",center:"title",right:"month,agendaWeek,agendaDay"},height:angular.element("body").height(),firstDay:1,lang:"sr",scrollTime:"08:00:00",defaultView:"agendaWeek",slotDuration:"00:15:00",timezone:"UTC",selectable:!0,editable:!0,eventLimit:!0,events:events,select:function(startDate,endDate){scope.showDialog(startDate,endDate)},eventClick:function(event){scope.showDialog(event.start,event.end,event.data),console.log(event.data)},eventDrop:function(event){scope.showDialog(event.start,event.end,event.data)},eventResize:function(event){scope.showDialog(event.start,event.end,event.data)}})}api("calendars").fetch().then(function(events){var filterEvents=[];return angular.forEach(events,function(item){filterEvents.push({title:item.calendar_name+" - "+item.calendar_comment,start:item.calendar_startDate,end:item.calendar_endDate,data:item})}),initializeCalendar(filterEvents)}),scope.createEvent=function(event){var eventData={title:event.calendar_name+" - "+event.calendar_comment,start:event.calendar_startDate,end:event.calendar_endDate,data:event};element.fullCalendar("renderEvent",eventData,!0),element.fullCalendar("unselect")}}}}function calendarCtrl($scope,$q,$uibModal,api){function calendarDialogCtrl($uibModalInstance){$scope.save=function(calendar){calendar.calendar_startDate=calendar.calendar_startDate._d,calendar.calendar_endDate=moment(calendar.calendar_startDate).add(calendar.calendar_duration,"m")._d,calendar=_.omit(calendar,"calendar_duration"),calendar.calendar_id?api("calendars").update(calendar).then(function(){$uibModalInstance.close()}):api("calendars").add(calendar).then(function(data){calendar.calendar_id=data.id,$scope.createEvent(calendar),$uibModalInstance.close()})},$scope.cancel=function(){$uibModalInstance.dismiss()}}$scope.showDialog=function(startDate,endDate,data){data?($scope.calendar=data,$scope.calendar.calendar_startDate=startDate,$scope.calendar.calendar_endDate=endDate,$scope.calendar.calendar_duration=(moment(endDate)-moment(startDate))/6e4):$scope.calendar={calendar_startDate:startDate,calendar_endDate:endDate,calendar_duration:(moment(endDate)-moment(startDate))/6e4},$uibModal.open({animation:!0,scope:$scope,templateUrl:"scripts/mojrokovnik-calendar/calendar-dialog.html",controller:calendarDialogCtrl}),$scope.types=[{value:1,name:"Ročište"},{value:2,name:"Obaveza"}];var clients=api("clients").fetch(),cases=api("cases").fetch();$q.all([clients,cases]).then(function(values){$scope.clients=values[0],$scope.cases=values[1]})}}function casesCtrl($scope,api,$uibModal){function casesDialogCtrl($uibModalInstance){$scope.save=function(cases){$scope.editMode?api("cases").update(cases).then(function(){$scope.editMode=!1,$uibModalInstance.close()}):api("cases").add(cases).then(function(){$scope.cases.push(cases),$uibModalInstance.close()})},$scope.cancel=function(){$uibModalInstance.dismiss()}}api("cases").fetch({case_delete:0}).then(function(cases){$scope.cases=cases,$scope.sCase=cases[0],api("clients").fetch({client_id:cases[0].client_id}).then(function(client){$scope.client=client[0]})}),$scope.selectCase=function(ucase){$scope.sCase=ucase,api("clients").fetch({client_id:ucase.client_id}).then(function(client){$scope.client=client[0]})},$scope.removeCase=function(cases){api("cases")["delete"](cases).then(function(){$scope.cases=_.without($scope.cases,cases),$scope.selCase=$scope.cases[0]})},$scope.showDialog=function(cases){cases?($scope.newCase=cases,$scope.editMode=!0):(delete $scope.newCase,$scope.editMode=!1),api("clients").fetch({client_delete:0}).then(function(clients){$scope.clients=clients}),$uibModal.open({animation:!0,scope:$scope,size:"lg",templateUrl:"scripts/mojrokovnik-cases/cases-dialog.html",controller:casesDialogCtrl}),$scope.data={rivalType:["Tužilac","Tuženi","Poverilac","Dužnik","Usvojilac","Usvojenik","Izvršni poverilac","Izvršni dužnik","Predlagač","Protivnik predlagača","Privatni tužilac","Okrivljeni","Treće lice","Oštećeni"],caseType:["Izvršni postupak","Krivični postupak","Parnični postupak","Prekršajni postupak","Privredno pravo","Upravni postupak i sporovi","Vanparnični postupak","Ostalo"],caseElement:["Bračni spor","Izdržavanje","Kolektivni ugovori  spor","Materinstvo i očinstvo","Naknada štete","Nasledni spor","Obligacioni spor","Platni nalog","Poništaj usvojenja","Privredni spor","Radni spor","Roditeljsko pravo","Smetanje državine","Spor  povreda žiga ili firme","Spor authorskih prava","Spor male vrednosti","Stambeni spor","Svojinski spor","Zaštita od nasilja u porodici","Zaštita prava deteta","Ostalo"]},$scope.getClient=function(client_id){var client=_.find($scope.clients,function(client){"client_id"===client.client_id});console.log(client)},$scope.getClient(1)}}function casesSidenav(){return{controller:casesCtrl,link:function(scope,elem,attr,ctrl){}}}function casesTemplate(){return{link:function(scope,elem,attr,ctrl){}}}function clientsCtrl($scope,api,$uibModal){function clientDialogCtrl($uibModalInstance){$scope.save=function(client){$scope.editMode?api("clients").update(client).then(function(){$scope.editMode=!1,$uibModalInstance.close()}):api("clients").add(client).then(function(){$scope.clients.push(client),$uibModalInstance.close()})},$scope.cancel=function(){$uibModalInstance.dismiss()}}api("clients").fetch({client_delete:0}).then(function(clients){$scope.clients=clients,$scope.sClient=clients[0],api("cases").fetch({client_id:clients[0].client_id}).then(function(cases){$scope.cases=cases})}),$scope.selectClient=function(client){$scope.sClient=client,api("cases").fetch({client_id:client.client_id}).then(function(cases){$scope.cases=cases})},$scope.removeClient=function(client){api("clients")["delete"](client).then(function(){$scope.clients=_.without($scope.clients,client),$scope.sClient=$scope.clients[0]})},$scope.showDialog=function(client){client?($scope.client=client,$scope.editMode=!0):(delete $scope.client,$scope.editMode=!1),$uibModal.open({animation:!0,scope:$scope,templateUrl:"scripts/mojrokovnik-clients/clients-dialog.html",controller:clientDialogCtrl})}}function clientsSidenav(){return{controller:clientsCtrl,link:function(scope,elem,attr,ctrl){}}}function clientsTemplate(){return{link:function(scope,elem,attr,ctrl){}}}function apiService($q,$http,notify){function isOK(response){function isErrData(data){return data&&data._status&&"ERR"===data._status}return response.status>=200&&response.status<300&&!isErrData(response.data)}function http(config){return $q.when(config.url).then(function(url){return config.url=url,$http(config)}).then(function(response){return isOK(response)?response.data:$q.reject(response)})}var api=function(table){return{fetch:function(params){return http({url:"../server/api.php?table="+table,method:"GET",params:params}).then(function(response){return response})},add:function(params){return http({url:"../server/api.php?table="+table,method:"POST",params:params}).then(function(response){return notify.success(response.msg),response})},update:function(params){return http({url:"../server/api.php?table="+table,method:"PUT",params:params}).then(function(response){return notify.success(response.msg),response})},"delete":function(params){return http({url:"../server/api.php?table="+table,method:"DELETE",params:params}).then(function(response){return notify.success(response.msg),response})}}};return api}function mrLoginCtrl($location,$http,$cookies,$scope,notify,api){$scope.login=function(login){$http({url:"../server/mr-login.php",method:"POST",params:login}).then(function(response){response.data.login?api("users").fetch().then(function(user){user&&($cookies.putObject("user",user),$location.url("/clients"))}):notify.error(response.data.msg)})}}function mrMainNavitagion($location,authentification){return{templateUrl:"scripts/mojrokovnik/navigation/navigation.html",link:function(scope){scope.visible=authentification.isLoggedIn(),scope.isCurrentPath=function(value){return $location.$$path===value}}}}function notifyService($mdToast){function showToast(type,text){$mdToast.show({template:'<md-toast class="md-toast '+type+'">'+text+"</md-toast>",position:"top right"})}this.success=function(text){showToast("success",text)},this.warn=function(text){showToast("warn",text)},this.error=function(text){showToast("error",text)}}function datetimePicker(){return{scope:{model:"="},link:function(scope,elem,attr,ctrl){elem.datetimepicker({format:"MMMM Do YYYY, HH:mm",inline:!0,sideBySide:!0,defaultDate:scope.model}),elem.on("dp.change",function(e){scope.model=e.date._d,scope.$apply()})}}}function mojrokovnikAuth(api,$cookies){var self=this;api("users").fetch().then(function(user){user&&(self.user=user)}),this.getUser=function(){return self.user},this.isLoggedIn=function(){return!!$cookies.getObject("user")}}function mojrokovnikConf($routeProvider){$routeProvider.otherwise({redirectTo:"/clients"}),$routeProvider.when("/login",{templateUrl:"scripts/mojrokovnik/login/login.html"}),$routeProvider.when("/clients",{templateUrl:"scripts/mojrokovnik-clients/clients.html"}),$routeProvider.when("/cases",{templateUrl:"scripts/mojrokovnik-cases/cases.html"}),$routeProvider.when("/calendar",{templateUrl:"scripts/mojrokovnik-calendar/calendar.html"})}function calendarTemplate(api){return{controller:calendarCtrl,link:function(scope,element,attr,ctrl){function initializeCalendar(events){element.fullCalendar({header:{left:"prev,next today",center:"title",right:"month,agendaWeek,agendaDay"},height:angular.element("body").height(),firstDay:1,lang:"sr",scrollTime:"08:00:00",defaultView:"agendaWeek",slotDuration:"00:15:00",timezone:"UTC",selectable:!0,editable:!0,eventLimit:!0,events:events,select:function(startDate,endDate){scope.showDialog(startDate,endDate)},eventClick:function(event){scope.showDialog(event.start,event.end,event.data),console.log(event.data)},eventDrop:function(event){scope.showDialog(event.start,event.end,event.data)},eventResize:function(event){scope.showDialog(event.start,event.end,event.data)}})}api("calendars").fetch().then(function(events){var filterEvents=[];return angular.forEach(events,function(item){filterEvents.push({title:item.calendar_name+" - "+item.calendar_comment,start:item.calendar_startDate,end:item.calendar_endDate,data:item})}),initializeCalendar(filterEvents)}),scope.createEvent=function(event){var eventData={title:event.calendar_name+" - "+event.calendar_comment,start:event.calendar_startDate,end:event.calendar_endDate,data:event};element.fullCalendar("renderEvent",eventData,!0),element.fullCalendar("unselect")}}}}function calendarCtrl($scope,$q,$uibModal,api){function calendarDialogCtrl($uibModalInstance){$scope.save=function(calendar){calendar.calendar_startDate=calendar.calendar_startDate._d,calendar.calendar_endDate=moment(calendar.calendar_startDate).add(calendar.calendar_duration,"m")._d,calendar=_.omit(calendar,"calendar_duration"),calendar.calendar_id?api("calendars").update(calendar).then(function(){$uibModalInstance.close()}):api("calendars").add(calendar).then(function(data){calendar.calendar_id=data.id,$scope.createEvent(calendar),$uibModalInstance.close()})},$scope.cancel=function(){$uibModalInstance.dismiss()}}$scope.showDialog=function(startDate,endDate,data){data?($scope.calendar=data,$scope.calendar.calendar_startDate=startDate,$scope.calendar.calendar_endDate=endDate,$scope.calendar.calendar_duration=(moment(endDate)-moment(startDate))/6e4):$scope.calendar={calendar_startDate:startDate,calendar_endDate:endDate,calendar_duration:(moment(endDate)-moment(startDate))/6e4},$uibModal.open({animation:!0,scope:$scope,templateUrl:"scripts/mojrokovnik-calendar/calendar-dialog.html",controller:calendarDialogCtrl}),$scope.types=[{value:1,name:"Ročište"},{value:2,name:"Obaveza"}];var clients=api("clients").fetch(),cases=api("cases").fetch();$q.all([clients,cases]).then(function(values){$scope.clients=values[0],$scope.cases=values[1]})}}function casesCtrl($scope,api,$uibModal){function casesDialogCtrl($uibModalInstance){$scope.save=function(cases){$scope.editMode?api("cases").update(cases).then(function(){$scope.editMode=!1,$uibModalInstance.close()}):api("cases").add(cases).then(function(){$scope.cases.push(cases),$uibModalInstance.close()})},$scope.cancel=function(){$uibModalInstance.dismiss()}}api("cases").fetch({case_delete:0}).then(function(cases){$scope.cases=cases,$scope.sCase=cases[0],api("clients").fetch({client_id:cases[0].client_id}).then(function(client){$scope.client=client[0]})}),$scope.selectCase=function(ucase){$scope.sCase=ucase,api("clients").fetch({client_id:ucase.client_id}).then(function(client){$scope.client=client[0]})},$scope.removeCase=function(cases){api("cases")["delete"](cases).then(function(){$scope.cases=_.without($scope.cases,cases),$scope.selCase=$scope.cases[0]})},$scope.showDialog=function(cases){cases?($scope.newCase=cases,$scope.editMode=!0):(delete $scope.newCase,$scope.editMode=!1),api("clients").fetch({client_delete:0}).then(function(clients){$scope.clients=clients}),$uibModal.open({animation:!0,scope:$scope,size:"lg",templateUrl:"scripts/mojrokovnik-cases/cases-dialog.html",controller:casesDialogCtrl}),$scope.data={rivalType:["Tužilac","Tuženi","Poverilac","Dužnik","Usvojilac","Usvojenik","Izvršni poverilac","Izvršni dužnik","Predlagač","Protivnik predlagača","Privatni tužilac","Okrivljeni","Treće lice","Oštećeni"],caseType:["Izvršni postupak","Krivični postupak","Parnični postupak","Prekršajni postupak","Privredno pravo","Upravni postupak i sporovi","Vanparnični postupak","Ostalo"],caseElement:["Bračni spor","Izdržavanje","Kolektivni ugovori  spor","Materinstvo i očinstvo","Naknada štete","Nasledni spor","Obligacioni spor","Platni nalog","Poništaj usvojenja","Privredni spor","Radni spor","Roditeljsko pravo","Smetanje državine","Spor  povreda žiga ili firme","Spor authorskih prava","Spor male vrednosti","Stambeni spor","Svojinski spor","Zaštita od nasilja u porodici","Zaštita prava deteta","Ostalo"]},$scope.getClient=function(client_id){var client=_.find($scope.clients,function(client){client.client_id===client_id});console.log(client)},$scope.getClient(1)}}function casesSidenav(){return{controller:casesCtrl,link:function(scope,elem,attr,ctrl){}}}function casesTemplate(){return{link:function(scope,elem,attr,ctrl){}}}function clientsCtrl($scope,api,$uibModal){function clientDialogCtrl($uibModalInstance){$scope.save=function(client){$scope.editMode?api("clients").update(client).then(function(){$scope.editMode=!1,$uibModalInstance.close()}):api("clients").add(client).then(function(){$scope.clients.push(client),$uibModalInstance.close()})},$scope.cancel=function(){$uibModalInstance.dismiss()}}api("clients").fetch({client_delete:0}).then(function(clients){$scope.clients=clients,$scope.sClient=clients[0],api("cases").fetch({client_id:clients[0].client_id}).then(function(cases){$scope.cases=cases})}),$scope.selectClient=function(client){$scope.sClient=client,api("cases").fetch({client_id:client.client_id}).then(function(cases){$scope.cases=cases})},$scope.removeClient=function(client){api("clients")["delete"](client).then(function(){$scope.clients=_.without($scope.clients,client),$scope.sClient=$scope.clients[0]})},$scope.showDialog=function(client){client?($scope.client=client,$scope.editMode=!0):(delete $scope.client,$scope.editMode=!1),$uibModal.open({animation:!0,scope:$scope,templateUrl:"scripts/mojrokovnik-clients/clients-dialog.html",controller:clientDialogCtrl})}}function clientsSidenav(){return{controller:clientsCtrl,link:function(scope,elem,attr,ctrl){}}}function clientsTemplate(){return{link:function(scope,elem,attr,ctrl){}}}function apiService($q,$http,notify){function isOK(response){function isErrData(data){return data&&data._status&&"ERR"===data._status}return response.status>=200&&response.status<300&&!isErrData(response.data)}function http(config){return $q.when(config.url).then(function(url){return config.url=url,$http(config)}).then(function(response){return isOK(response)?response.data:$q.reject(response)})}var api=function(table){return{fetch:function(params){return http({url:"../server/api.php?table="+table,method:"GET",params:params}).then(function(response){return response})},add:function(params){return http({url:"../server/api.php?table="+table,method:"POST",params:params}).then(function(response){return notify.success(response.msg),response})},update:function(params){return http({url:"../server/api.php?table="+table,method:"PUT",params:params}).then(function(response){return notify.success(response.msg),response})},"delete":function(params){return http({url:"../server/api.php?table="+table,method:"DELETE",params:params}).then(function(response){return notify.success(response.msg),response})}}};return api}function mrLoginCtrl($location,$http,$cookies,$scope,notify,api){$scope.login=function(login){$http({url:"../server/mr-login.php",method:"POST",params:login}).then(function(response){response.data.login?api("users").fetch().then(function(user){user&&($cookies.putObject("user",user),$location.url("/clients"))}):notify.error(response.data.msg)})}}function mrMainNavitagion($location,authentification){return{templateUrl:"scripts/mojrokovnik/navigation/navigation.html",link:function(scope){scope.visible=authentification.isLoggedIn(),scope.isCurrentPath=function(value){return $location.$$path===value}}}}function notifyService($mdToast){function showToast(type,text){$mdToast.show({template:'<md-toast class="md-toast '+type+'">'+text+"</md-toast>",position:"top right"})}this.success=function(text){showToast("success",text)},this.warn=function(text){showToast("warn",text)},this.error=function(text){showToast("error",text)}}function datetimePicker(){return{scope:{model:"="},link:function(scope,elem,attr,ctrl){elem.datetimepicker({format:"MMMM Do YYYY, HH:mm",inline:!0,sideBySide:!0,defaultDate:scope.model}),elem.on("dp.change",function(e){scope.model=e.date._d,scope.$apply()});
}}}function mojrokovnikAuth(api,$cookies){var self=this;api("users").fetch().then(function(user){user&&(self.user=user)}),this.getUser=function(){return self.user},this.isLoggedIn=function(){return!!$cookies.getObject("user")}}function mojrokovnikConf($routeProvider){$routeProvider.otherwise({redirectTo:"/clients"}),$routeProvider.when("/login",{templateUrl:"scripts/mojrokovnik/login/login.html"}),$routeProvider.when("/clients",{templateUrl:"scripts/mojrokovnik-clients/clients.html"}),$routeProvider.when("/cases",{templateUrl:"scripts/mojrokovnik-cases/cases.html"}),$routeProvider.when("/calendar",{templateUrl:"scripts/mojrokovnik-calendar/calendar.html"})}function calendarTemplate(api){return{controller:calendarCtrl,link:function(scope,element,attr,ctrl){function initializeCalendar(events){element.fullCalendar({header:{left:"prev,next today",center:"title",right:"month,agendaWeek,agendaDay"},height:angular.element("body").height(),firstDay:1,lang:"sr",scrollTime:"08:00:00",defaultView:"agendaWeek",slotDuration:"00:15:00",timezone:"UTC",selectable:!0,editable:!0,eventLimit:!0,events:events,select:function(startDate,endDate){scope.showDialog(startDate,endDate)},eventClick:function(event){scope.showDialog(event.start,event.end,event.data),console.log(event.data)},eventDrop:function(event){scope.showDialog(event.start,event.end,event.data)},eventResize:function(event){scope.showDialog(event.start,event.end,event.data)}})}api("calendars").fetch().then(function(events){var filterEvents=[];return angular.forEach(events,function(item){filterEvents.push({title:item.calendar_name+" - "+item.calendar_comment,start:item.calendar_startDate,end:item.calendar_endDate,data:item})}),initializeCalendar(filterEvents)}),scope.createEvent=function(event){var eventData={title:event.calendar_name+" - "+event.calendar_comment,start:event.calendar_startDate,end:event.calendar_endDate,data:event};element.fullCalendar("renderEvent",eventData,!0),element.fullCalendar("unselect")}}}}function calendarCtrl($scope,$q,$uibModal,api){function calendarDialogCtrl($uibModalInstance){$scope.save=function(calendar){calendar.calendar_startDate=calendar.calendar_startDate._d,calendar.calendar_endDate=moment(calendar.calendar_startDate).add(calendar.calendar_duration,"m")._d,calendar=_.omit(calendar,"calendar_duration"),calendar.calendar_id?api("calendars").update(calendar).then(function(){$uibModalInstance.close()}):api("calendars").add(calendar).then(function(data){calendar.calendar_id=data.id,$scope.createEvent(calendar),$uibModalInstance.close()})},$scope.cancel=function(){$uibModalInstance.dismiss()}}$scope.showDialog=function(startDate,endDate,data){data?($scope.calendar=data,$scope.calendar.calendar_startDate=startDate,$scope.calendar.calendar_endDate=endDate,$scope.calendar.calendar_duration=(moment(endDate)-moment(startDate))/6e4):$scope.calendar={calendar_startDate:startDate,calendar_endDate:endDate,calendar_duration:(moment(endDate)-moment(startDate))/6e4},$uibModal.open({animation:!0,scope:$scope,templateUrl:"scripts/mojrokovnik-calendar/calendar-dialog.html",controller:calendarDialogCtrl}),$scope.types=[{value:1,name:"Ročište"},{value:2,name:"Obaveza"}];var clients=api("clients").fetch(),cases=api("cases").fetch();$q.all([clients,cases]).then(function(values){$scope.clients=values[0],$scope.cases=values[1]})}}function casesCtrl($scope,api,$uibModal){function casesDialogCtrl($uibModalInstance){$scope.save=function(cases){$scope.editMode?api("cases").update(cases).then(function(){$scope.editMode=!1,$uibModalInstance.close()}):api("cases").add(cases).then(function(){$scope.cases.push(cases),$uibModalInstance.close()})},$scope.cancel=function(){$uibModalInstance.dismiss()}}api("cases").fetch({case_delete:0}).then(function(cases){$scope.cases=cases,$scope.sCase=cases[0],api("clients").fetch({client_id:cases[0].client_id}).then(function(client){$scope.client=client[0]})}),$scope.selectCase=function(ucase){$scope.sCase=ucase,api("clients").fetch({client_id:ucase.client_id}).then(function(client){$scope.client=client[0]})},$scope.removeCase=function(cases){api("cases")["delete"](cases).then(function(){$scope.cases=_.without($scope.cases,cases),$scope.selCase=$scope.cases[0]})},$scope.showDialog=function(cases){cases?($scope.newCase=cases,$scope.editMode=!0):(delete $scope.newCase,$scope.editMode=!1),api("clients").fetch({client_delete:0}).then(function(clients){$scope.clients=clients}),$uibModal.open({animation:!0,scope:$scope,size:"lg",templateUrl:"scripts/mojrokovnik-cases/cases-dialog.html",controller:casesDialogCtrl}),$scope.data={rivalType:["Tužilac","Tuženi","Poverilac","Dužnik","Usvojilac","Usvojenik","Izvršni poverilac","Izvršni dužnik","Predlagač","Protivnik predlagača","Privatni tužilac","Okrivljeni","Treće lice","Oštećeni"],caseType:["Izvršni postupak","Krivični postupak","Parnični postupak","Prekršajni postupak","Privredno pravo","Upravni postupak i sporovi","Vanparnični postupak","Ostalo"],caseElement:["Bračni spor","Izdržavanje","Kolektivni ugovori  spor","Materinstvo i očinstvo","Naknada štete","Nasledni spor","Obligacioni spor","Platni nalog","Poništaj usvojenja","Privredni spor","Radni spor","Roditeljsko pravo","Smetanje državine","Spor  povreda žiga ili firme","Spor authorskih prava","Spor male vrednosti","Stambeni spor","Svojinski spor","Zaštita od nasilja u porodici","Zaštita prava deteta","Ostalo"]},$scope.getClient=function(client_id){_.find($scope.clients,function(client){return client.client_id===client_id})},$scope.getClient(1)}}function casesSidenav(){return{controller:casesCtrl,link:function(scope,elem,attr,ctrl){}}}function casesTemplate(){return{link:function(scope,elem,attr,ctrl){}}}function clientsCtrl($scope,api,$uibModal){function clientDialogCtrl($uibModalInstance){$scope.save=function(client){$scope.editMode?api("clients").update(client).then(function(){$scope.editMode=!1,$uibModalInstance.close()}):api("clients").add(client).then(function(){$scope.clients.push(client),$uibModalInstance.close()})},$scope.cancel=function(){$uibModalInstance.dismiss()}}api("clients").fetch({client_delete:0}).then(function(clients){$scope.clients=clients,$scope.sClient=clients[0],api("cases").fetch({client_id:clients[0].client_id}).then(function(cases){$scope.cases=cases})}),$scope.selectClient=function(client){$scope.sClient=client,api("cases").fetch({client_id:client.client_id}).then(function(cases){$scope.cases=cases})},$scope.removeClient=function(client){api("clients")["delete"](client).then(function(){$scope.clients=_.without($scope.clients,client),$scope.sClient=$scope.clients[0]})},$scope.showDialog=function(client){client?($scope.client=client,$scope.editMode=!0):(delete $scope.client,$scope.editMode=!1),$uibModal.open({animation:!0,scope:$scope,templateUrl:"scripts/mojrokovnik-clients/clients-dialog.html",controller:clientDialogCtrl})}}function clientsSidenav(){return{controller:clientsCtrl,link:function(scope,elem,attr,ctrl){}}}function clientsTemplate(){return{link:function(scope,elem,attr,ctrl){}}}function apiService($q,$http,notify){function isOK(response){function isErrData(data){return data&&data._status&&"ERR"===data._status}return response.status>=200&&response.status<300&&!isErrData(response.data)}function http(config){return $q.when(config.url).then(function(url){return config.url=url,$http(config)}).then(function(response){return isOK(response)?response.data:$q.reject(response)})}var api=function(table){return{fetch:function(params){return http({url:"../server/api.php?table="+table,method:"GET",params:params}).then(function(response){return response})},add:function(params){return http({url:"../server/api.php?table="+table,method:"POST",params:params}).then(function(response){return notify.success(response.msg),response})},update:function(params){return http({url:"../server/api.php?table="+table,method:"PUT",params:params}).then(function(response){return notify.success(response.msg),response})},"delete":function(params){return http({url:"../server/api.php?table="+table,method:"DELETE",params:params}).then(function(response){return notify.success(response.msg),response})}}};return api}function mrLoginCtrl($location,$http,$cookies,$scope,notify,api){$scope.login=function(login){$http({url:"../server/mr-login.php",method:"POST",params:login}).then(function(response){response.data.login?api("users").fetch().then(function(user){user&&($cookies.putObject("user",user),$location.url("/clients"))}):notify.error(response.data.msg)})}}function mrMainNavitagion($location,authentification){return{templateUrl:"scripts/mojrokovnik/navigation/navigation.html",link:function(scope){scope.visible=authentification.isLoggedIn(),scope.isCurrentPath=function(value){return $location.$$path===value}}}}function notifyService($mdToast){function showToast(type,text){$mdToast.show({template:'<md-toast class="md-toast '+type+'">'+text+"</md-toast>",position:"top right"})}this.success=function(text){showToast("success",text)},this.warn=function(text){showToast("warn",text)},this.error=function(text){showToast("error",text)}}function datetimePicker(){return{scope:{model:"="},link:function(scope,elem,attr,ctrl){elem.datetimepicker({format:"MMMM Do YYYY, HH:mm",inline:!0,sideBySide:!0,defaultDate:scope.model}),elem.on("dp.change",function(e){scope.model=e.date._d,scope.$apply()})}}}function mojrokovnikAuth(api,$cookies){var self=this;api("users").fetch().then(function(user){user&&(self.user=user)}),this.getUser=function(){return self.user},this.isLoggedIn=function(){return!!$cookies.getObject("user")}}function mojrokovnikConf($routeProvider){$routeProvider.otherwise({redirectTo:"/clients"}),$routeProvider.when("/login",{templateUrl:"scripts/mojrokovnik/login/login.html"}),$routeProvider.when("/clients",{templateUrl:"scripts/mojrokovnik-clients/clients.html"}),$routeProvider.when("/cases",{templateUrl:"scripts/mojrokovnik-cases/cases.html"}),$routeProvider.when("/calendar",{templateUrl:"scripts/mojrokovnik-calendar/calendar.html"})}function calendarTemplate(api){return{controller:calendarCtrl,link:function(scope,element,attr,ctrl){function initializeCalendar(events){element.fullCalendar({header:{left:"prev,next today",center:"title",right:"month,agendaWeek,agendaDay"},height:angular.element("body").height(),firstDay:1,lang:"sr",scrollTime:"08:00:00",defaultView:"agendaWeek",slotDuration:"00:15:00",timezone:"UTC",selectable:!0,editable:!0,eventLimit:!0,events:events,select:function(startDate,endDate){scope.showDialog(startDate,endDate)},eventClick:function(event){scope.showDialog(event.start,event.end,event.data),console.log(event.data)},eventDrop:function(event){scope.showDialog(event.start,event.end,event.data)},eventResize:function(event){scope.showDialog(event.start,event.end,event.data)}})}api("calendars").fetch().then(function(events){var filterEvents=[];return angular.forEach(events,function(item){filterEvents.push({title:item.calendar_name+" - "+item.calendar_comment,start:item.calendar_startDate,end:item.calendar_endDate,data:item})}),initializeCalendar(filterEvents)}),scope.createEvent=function(event){var eventData={title:event.calendar_name+" - "+event.calendar_comment,start:event.calendar_startDate,end:event.calendar_endDate,data:event};element.fullCalendar("renderEvent",eventData,!0),element.fullCalendar("unselect")}}}}function calendarCtrl($scope,$q,$uibModal,api){function calendarDialogCtrl($uibModalInstance){$scope.save=function(calendar){calendar.calendar_startDate=calendar.calendar_startDate._d,calendar.calendar_endDate=moment(calendar.calendar_startDate).add(calendar.calendar_duration,"m")._d,calendar=_.omit(calendar,"calendar_duration"),calendar.calendar_id?api("calendars").update(calendar).then(function(){$uibModalInstance.close()}):api("calendars").add(calendar).then(function(data){calendar.calendar_id=data.id,$scope.createEvent(calendar),$uibModalInstance.close()})},$scope.cancel=function(){$uibModalInstance.dismiss()}}$scope.showDialog=function(startDate,endDate,data){data?($scope.calendar=data,$scope.calendar.calendar_startDate=startDate,$scope.calendar.calendar_endDate=endDate,$scope.calendar.calendar_duration=(moment(endDate)-moment(startDate))/6e4):$scope.calendar={calendar_startDate:startDate,calendar_endDate:endDate,calendar_duration:(moment(endDate)-moment(startDate))/6e4},$uibModal.open({animation:!0,scope:$scope,templateUrl:"scripts/mojrokovnik-calendar/calendar-dialog.html",controller:calendarDialogCtrl}),$scope.types=[{value:1,name:"Ročište"},{value:2,name:"Obaveza"}];var clients=api("clients").fetch(),cases=api("cases").fetch();$q.all([clients,cases]).then(function(values){$scope.clients=values[0],$scope.cases=values[1]})}}function casesCtrl($scope,api,$uibModal){function casesDialogCtrl($uibModalInstance){$scope.save=function(cases){$scope.editMode?api("cases").update(cases).then(function(){$scope.editMode=!1,$uibModalInstance.close()}):api("cases").add(cases).then(function(){$scope.cases.push(cases),$uibModalInstance.close()})},$scope.cancel=function(){$uibModalInstance.dismiss()}}api("cases").fetch({case_delete:0}).then(function(cases){$scope.cases=cases,$scope.sCase=cases[0],api("clients").fetch({client_id:cases[0].client_id}).then(function(client){$scope.client=client[0]})}),$scope.selectCase=function(ucase){$scope.sCase=ucase,api("clients").fetch({client_id:ucase.client_id}).then(function(client){$scope.client=client[0]})},$scope.removeCase=function(cases){api("cases")["delete"](cases).then(function(){$scope.cases=_.without($scope.cases,cases),$scope.selCase=$scope.cases[0]})},$scope.showDialog=function(cases){cases?($scope.newCase=cases,$scope.editMode=!0):(delete $scope.newCase,$scope.editMode=!1),api("clients").fetch({client_delete:0}).then(function(clients){$scope.clients=clients}),$uibModal.open({animation:!0,scope:$scope,size:"lg",templateUrl:"scripts/mojrokovnik-cases/cases-dialog.html",controller:casesDialogCtrl}),$scope.data={rivalType:["Tužilac","Tuženi","Poverilac","Dužnik","Usvojilac","Usvojenik","Izvršni poverilac","Izvršni dužnik","Predlagač","Protivnik predlagača","Privatni tužilac","Okrivljeni","Treće lice","Oštećeni"],caseType:["Izvršni postupak","Krivični postupak","Parnični postupak","Prekršajni postupak","Privredno pravo","Upravni postupak i sporovi","Vanparnični postupak","Ostalo"],caseElement:["Bračni spor","Izdržavanje","Kolektivni ugovori  spor","Materinstvo i očinstvo","Naknada štete","Nasledni spor","Obligacioni spor","Platni nalog","Poništaj usvojenja","Privredni spor","Radni spor","Roditeljsko pravo","Smetanje državine","Spor  povreda žiga ili firme","Spor authorskih prava","Spor male vrednosti","Stambeni spor","Svojinski spor","Zaštita od nasilja u porodici","Zaštita prava deteta","Ostalo"]},$scope.getClient=function(client_id){_.find($scope.clients,function(client){return client.client_id===client_id})}}}function casesSidenav(){return{controller:casesCtrl,link:function(scope,elem,attr,ctrl){}}}function casesTemplate(){return{link:function(scope,elem,attr,ctrl){}}}function clientsCtrl($scope,api,$uibModal){function clientDialogCtrl($uibModalInstance){$scope.save=function(client){$scope.editMode?api("clients").update(client).then(function(){$scope.editMode=!1,$uibModalInstance.close()}):api("clients").add(client).then(function(){$scope.clients.push(client),$uibModalInstance.close()})},$scope.cancel=function(){$uibModalInstance.dismiss()}}api("clients").fetch({client_delete:0}).then(function(clients){$scope.clients=clients,$scope.sClient=clients[0],api("cases").fetch({client_id:clients[0].client_id}).then(function(cases){$scope.cases=cases})}),$scope.selectClient=function(client){$scope.sClient=client,api("cases").fetch({client_id:client.client_id}).then(function(cases){$scope.cases=cases})},$scope.removeClient=function(client){api("clients")["delete"](client).then(function(){$scope.clients=_.without($scope.clients,client),$scope.sClient=$scope.clients[0]})},$scope.showDialog=function(client){client?($scope.client=client,$scope.editMode=!0):(delete $scope.client,$scope.editMode=!1),$uibModal.open({animation:!0,scope:$scope,templateUrl:"scripts/mojrokovnik-clients/clients-dialog.html",controller:clientDialogCtrl})}}function clientsSidenav(){return{controller:clientsCtrl,link:function(scope,elem,attr,ctrl){}}}function clientsTemplate(){return{link:function(scope,elem,attr,ctrl){}}}function apiService($q,$http,notify){function isOK(response){function isErrData(data){return data&&data._status&&"ERR"===data._status}return response.status>=200&&response.status<300&&!isErrData(response.data)}function http(config){return $q.when(config.url).then(function(url){return config.url=url,$http(config)}).then(function(response){return isOK(response)?response.data:$q.reject(response)})}var api=function(table){return{fetch:function(params){return http({url:"../server/api.php?table="+table,method:"GET",params:params}).then(function(response){return response})},add:function(params){return http({url:"../server/api.php?table="+table,method:"POST",params:params}).then(function(response){return notify.success(response.msg),response})},update:function(params){return http({url:"../server/api.php?table="+table,method:"PUT",params:params}).then(function(response){return notify.success(response.msg),response})},"delete":function(params){return http({url:"../server/api.php?table="+table,method:"DELETE",params:params}).then(function(response){return notify.success(response.msg),response})}}};return api}function mrLoginCtrl($location,$http,$cookies,$scope,notify,api){$scope.login=function(login){$http({url:"../server/mr-login.php",method:"POST",params:login}).then(function(response){response.data.login?api("users").fetch().then(function(user){user&&($cookies.putObject("user",user),$location.url("/clients"))}):notify.error(response.data.msg)})}}function mrMainNavitagion($location,authentification){return{templateUrl:"scripts/mojrokovnik/navigation/navigation.html",link:function(scope){scope.visible=authentification.isLoggedIn(),scope.isCurrentPath=function(value){return $location.$$path===value}}}}function notifyService($mdToast){function showToast(type,text){$mdToast.show({template:'<md-toast class="md-toast '+type+'">'+text+"</md-toast>",position:"top right"})}this.success=function(text){showToast("success",text)},this.warn=function(text){showToast("warn",text)},this.error=function(text){showToast("error",text)}}function datetimePicker(){return{scope:{model:"="},link:function(scope,elem,attr,ctrl){elem.datetimepicker({format:"MMMM Do YYYY, HH:mm",inline:!0,sideBySide:!0,defaultDate:scope.model}),elem.on("dp.change",function(e){scope.model=e.date._d,scope.$apply()})}}}function mojrokovnikAuth(api,$cookies){var self=this;api("users").fetch().then(function(user){user&&(self.user=user)}),this.getUser=function(){return self.user},this.isLoggedIn=function(){return!!$cookies.getObject("user")}}function mojrokovnikConf($routeProvider){$routeProvider.otherwise({redirectTo:"/clients"}),$routeProvider.when("/login",{templateUrl:"scripts/mojrokovnik/login/login.html"}),$routeProvider.when("/clients",{templateUrl:"scripts/mojrokovnik-clients/clients.html"}),$routeProvider.when("/cases",{templateUrl:"scripts/mojrokovnik-cases/cases.html"}),$routeProvider.when("/calendar",{templateUrl:"scripts/mojrokovnik-calendar/calendar.html"})}function calendarTemplate(api){return{controller:calendarCtrl,link:function(scope,element,attr,ctrl){function initializeCalendar(events){element.fullCalendar({header:{left:"prev,next today",center:"title",right:"month,agendaWeek,agendaDay"},height:angular.element("body").height(),firstDay:1,lang:"sr",scrollTime:"08:00:00",defaultView:"agendaWeek",slotDuration:"00:15:00",timezone:"UTC",selectable:!0,editable:!0,eventLimit:!0,events:events,select:function(startDate,endDate){scope.showDialog(startDate,endDate)},eventClick:function(event){scope.showDialog(event.start,event.end,event.data),console.log(event.data)},eventDrop:function(event){scope.showDialog(event.start,event.end,event.data)},eventResize:function(event){scope.showDialog(event.start,event.end,event.data)}})}api("calendars").fetch().then(function(events){var filterEvents=[];return angular.forEach(events,function(item){filterEvents.push({title:item.calendar_name+" - "+item.calendar_comment,start:item.calendar_startDate,end:item.calendar_endDate,data:item})}),initializeCalendar(filterEvents)}),scope.createEvent=function(event){var eventData={title:event.calendar_name+" - "+event.calendar_comment,start:event.calendar_startDate,end:event.calendar_endDate,data:event};element.fullCalendar("renderEvent",eventData,!0),element.fullCalendar("unselect")}}}}function calendarCtrl($scope,$q,$uibModal,api){function calendarDialogCtrl($uibModalInstance){$scope.save=function(calendar){calendar.calendar_startDate=calendar.calendar_startDate._d,calendar.calendar_endDate=moment(calendar.calendar_startDate).add(calendar.calendar_duration,"m")._d,calendar=_.omit(calendar,"calendar_duration"),calendar.calendar_id?api("calendars").update(calendar).then(function(){$uibModalInstance.close()}):api("calendars").add(calendar).then(function(data){calendar.calendar_id=data.id,$scope.createEvent(calendar),$uibModalInstance.close()})},$scope.cancel=function(){$uibModalInstance.dismiss()}}$scope.showDialog=function(startDate,endDate,data){data?($scope.calendar=data,$scope.calendar.calendar_startDate=startDate,$scope.calendar.calendar_endDate=endDate,$scope.calendar.calendar_duration=(moment(endDate)-moment(startDate))/6e4):$scope.calendar={calendar_startDate:startDate,calendar_endDate:endDate,calendar_duration:(moment(endDate)-moment(startDate))/6e4},$uibModal.open({animation:!0,scope:$scope,templateUrl:"scripts/mojrokovnik-calendar/calendar-dialog.html",controller:calendarDialogCtrl}),$scope.types=[{value:1,name:"Ročište"},{value:2,name:"Obaveza"}];var clients=api("clients").fetch(),cases=api("cases").fetch();$q.all([clients,cases]).then(function(values){$scope.clients=values[0],$scope.cases=values[1]})}}function casesCtrl($scope,api,$uibModal){function casesDialogCtrl($uibModalInstance){$scope.save=function(cases){$scope.editMode?api("cases").update(cases).then(function(){$scope.editMode=!1,$uibModalInstance.close()}):api("cases").add(cases).then(function(){$scope.cases.push(cases),$uibModalInstance.close()})},$scope.cancel=function(){$uibModalInstance.dismiss()}}api("cases").fetch({case_delete:0}).then(function(cases){$scope.cases=cases,$scope.sCase=cases[0],api("clients").fetch({client_id:cases[0].client_id}).then(function(client){$scope.client=client[0]})}),$scope.selectCase=function(ucase){$scope.sCase=ucase,api("clients").fetch({client_id:ucase.client_id}).then(function(client){$scope.client=client[0]})},$scope.removeCase=function(cases){api("cases")["delete"](cases).then(function(){$scope.cases=_.without($scope.cases,cases),$scope.selCase=$scope.cases[0]})},$scope.showDialog=function(cases){cases?($scope.newCase=cases,$scope.editMode=!0):(delete $scope.newCase,$scope.editMode=!1),api("clients").fetch({client_delete:0}).then(function(clients){$scope.clients=clients}),$uibModal.open({animation:!0,scope:$scope,size:"lg",templateUrl:"scripts/mojrokovnik-cases/cases-dialog.html",controller:casesDialogCtrl}),$scope.data={rivalType:["Tužilac","Tuženi","Poverilac","Dužnik","Usvojilac","Usvojenik","Izvršni poverilac","Izvršni dužnik","Predlagač","Protivnik predlagača","Privatni tužilac","Okrivljeni","Treće lice","Oštećeni"],caseType:["Izvršni postupak","Krivični postupak","Parnični postupak","Prekršajni postupak","Privredno pravo","Upravni postupak i sporovi","Vanparnični postupak","Ostalo"],caseElement:["Bračni spor","Izdržavanje","Kolektivni ugovori  spor","Materinstvo i očinstvo","Naknada štete","Nasledni spor","Obligacioni spor","Platni nalog","Poništaj usvojenja","Privredni spor","Radni spor","Roditeljsko pravo","Smetanje državine","Spor  povreda žiga ili firme","Spor authorskih prava","Spor male vrednosti","Stambeni spor","Svojinski spor","Zaštita od nasilja u porodici","Zaštita prava deteta","Ostalo"]},$scope.getClient=function(client_id){return _.find($scope.clients,function(client){return client.client_id===client_id})}}}function casesSidenav(){return{controller:casesCtrl,link:function(scope,elem,attr,ctrl){}}}function casesTemplate(){return{link:function(scope,elem,attr,ctrl){}}}function clientsCtrl($scope,api,$uibModal){function clientDialogCtrl($uibModalInstance){$scope.save=function(client){$scope.editMode?api("clients").update(client).then(function(){$scope.editMode=!1,$uibModalInstance.close()}):api("clients").add(client).then(function(){$scope.clients.push(client),$uibModalInstance.close()})},$scope.cancel=function(){$uibModalInstance.dismiss()}}api("clients").fetch({client_delete:0}).then(function(clients){$scope.clients=clients,$scope.sClient=clients[0],api("cases").fetch({client_id:clients[0].client_id}).then(function(cases){$scope.cases=cases})}),$scope.selectClient=function(client){$scope.sClient=client,api("cases").fetch({client_id:client.client_id}).then(function(cases){$scope.cases=cases})},$scope.removeClient=function(client){api("clients")["delete"](client).then(function(){$scope.clients=_.without($scope.clients,client),$scope.sClient=$scope.clients[0]})},$scope.showDialog=function(client){client?($scope.client=client,$scope.editMode=!0):(delete $scope.client,$scope.editMode=!1),$uibModal.open({animation:!0,scope:$scope,templateUrl:"scripts/mojrokovnik-clients/clients-dialog.html",controller:clientDialogCtrl})}}function clientsSidenav(){return{controller:clientsCtrl,link:function(scope,elem,attr,ctrl){}}}function clientsTemplate(){return{link:function(scope,elem,attr,ctrl){}}}function apiService($q,$http,notify){function isOK(response){function isErrData(data){return data&&data._status&&"ERR"===data._status}return response.status>=200&&response.status<300&&!isErrData(response.data)}function http(config){return $q.when(config.url).then(function(url){return config.url=url,$http(config)}).then(function(response){return isOK(response)?response.data:$q.reject(response)})}var api=function(table){return{fetch:function(params){return http({url:"../server/api.php?table="+table,method:"GET",params:params}).then(function(response){return response})},add:function(params){return http({url:"../server/api.php?table="+table,method:"POST",params:params}).then(function(response){return notify.success(response.msg),response})},update:function(params){return http({url:"../server/api.php?table="+table,method:"PUT",params:params}).then(function(response){return notify.success(response.msg),response})},"delete":function(params){return http({url:"../server/api.php?table="+table,method:"DELETE",params:params}).then(function(response){return notify.success(response.msg),response})}}};return api}function mrLoginCtrl($location,$http,$cookies,$scope,notify,api){$scope.login=function(login){$http({url:"../server/mr-login.php",method:"POST",params:login}).then(function(response){response.data.login?api("users").fetch().then(function(user){user&&($cookies.putObject("user",user),$location.url("/clients"))}):notify.error(response.data.msg)})}}function mrMainNavitagion($location,authentification){return{templateUrl:"scripts/mojrokovnik/navigation/navigation.html",link:function(scope){scope.visible=authentification.isLoggedIn(),scope.isCurrentPath=function(value){return $location.$$path===value}}}}function notifyService($mdToast){function showToast(type,text){$mdToast.show({template:'<md-toast class="md-toast '+type+'">'+text+"</md-toast>",position:"top right"})}this.success=function(text){showToast("success",text)},this.warn=function(text){showToast("warn",text)},this.error=function(text){showToast("error",text)}}function datetimePicker(){return{scope:{model:"="},link:function(scope,elem,attr,ctrl){elem.datetimepicker({format:"MMMM Do YYYY, HH:mm",inline:!0,sideBySide:!0,defaultDate:scope.model}),elem.on("dp.change",function(e){scope.model=e.date._d,scope.$apply()})}}}function mojrokovnikAuth(api,$cookies){var self=this;api("users").fetch().then(function(user){user&&(self.user=user)}),this.getUser=function(){return self.user},this.isLoggedIn=function(){return!!$cookies.getObject("user")}}function mojrokovnikConf($routeProvider){$routeProvider.otherwise({redirectTo:"/clients"}),$routeProvider.when("/login",{templateUrl:"scripts/mojrokovnik/login/login.html"}),$routeProvider.when("/clients",{templateUrl:"scripts/mojrokovnik-clients/clients.html"}),$routeProvider.when("/cases",{templateUrl:"scripts/mojrokovnik-cases/cases.html"}),$routeProvider.when("/calendar",{templateUrl:"scripts/mojrokovnik-calendar/calendar.html"})}function calendarTemplate(api){return{controller:calendarCtrl,link:function(scope,element,attr,ctrl){function initializeCalendar(events){element.fullCalendar({header:{left:"prev,next today",center:"title",right:"month,agendaWeek,agendaDay"},height:angular.element("body").height(),firstDay:1,lang:"sr",scrollTime:"08:00:00",defaultView:"agendaWeek",slotDuration:"00:15:00",timezone:"UTC",selectable:!0,editable:!0,eventLimit:!0,events:events,select:function(startDate,endDate){scope.showDialog(startDate,endDate)},eventClick:function(event){scope.showDialog(event.start,event.end,event.data),console.log(event.data)},eventDrop:function(event){scope.showDialog(event.start,event.end,event.data)},eventResize:function(event){scope.showDialog(event.start,event.end,event.data)}})}api("calendars").fetch().then(function(events){var filterEvents=[];return angular.forEach(events,function(item){filterEvents.push({title:item.calendar_name+" - "+item.calendar_comment,start:item.calendar_startDate,end:item.calendar_endDate,data:item})}),initializeCalendar(filterEvents)}),scope.createEvent=function(event){var eventData={title:event.calendar_name+" - "+event.calendar_comment,start:event.calendar_startDate,end:event.calendar_endDate,data:event};element.fullCalendar("renderEvent",eventData,!0),element.fullCalendar("unselect")}}}}function calendarCtrl($scope,$q,$uibModal,api){function calendarDialogCtrl($uibModalInstance){$scope.save=function(calendar){calendar.calendar_startDate=calendar.calendar_startDate._d,calendar.calendar_endDate=moment(calendar.calendar_startDate).add(calendar.calendar_duration,"m")._d,calendar=_.omit(calendar,"calendar_duration"),calendar.calendar_id?api("calendars").update(calendar).then(function(){$uibModalInstance.close()}):api("calendars").add(calendar).then(function(data){calendar.calendar_id=data.id,$scope.createEvent(calendar),$uibModalInstance.close()})},$scope.cancel=function(){$uibModalInstance.dismiss()}}$scope.showDialog=function(startDate,endDate,data){data?($scope.calendar=data,$scope.calendar.calendar_startDate=startDate,$scope.calendar.calendar_endDate=endDate,$scope.calendar.calendar_duration=(moment(endDate)-moment(startDate))/6e4):$scope.calendar={calendar_startDate:startDate,calendar_endDate:endDate,calendar_duration:(moment(endDate)-moment(startDate))/6e4},$uibModal.open({animation:!0,scope:$scope,templateUrl:"scripts/mojrokovnik-calendar/calendar-dialog.html",controller:calendarDialogCtrl}),$scope.types=[{value:1,name:"Ročište"},{value:2,name:"Obaveza"}];var clients=api("clients").fetch(),cases=api("cases").fetch();$q.all([clients,cases]).then(function(values){$scope.clients=values[0],$scope.cases=values[1]})}}function casesCtrl($scope,api,$uibModal){function casesDialogCtrl($uibModalInstance){$scope.save=function(cases){$scope.editMode?api("cases").update(cases).then(function(){$scope.editMode=!1,$uibModalInstance.close()}):api("cases").add(cases).then(function(){$scope.cases.push(cases),$uibModalInstance.close()})},$scope.cancel=function(){$uibModalInstance.dismiss()}}api("cases").fetch({case_delete:0}).then(function(cases){$scope.cases=cases,$scope.sCase=cases[0],api("clients").fetch({client_id:cases[0].client_id}).then(function(client){$scope.client=client[0]})}),$scope.selectCase=function(ucase){$scope.sCase=ucase,api("clients").fetch({client_id:ucase.client_id}).then(function(client){$scope.client=client[0]})},$scope.removeCase=function(cases){
api("cases")["delete"](cases).then(function(){$scope.cases=_.without($scope.cases,cases),$scope.selCase=$scope.cases[0]})},$scope.showDialog=function(cases){cases?($scope.newCase=cases,$scope.editMode=!0):(delete $scope.newCase,$scope.editMode=!1),api("clients").fetch({client_delete:0}).then(function(clients){$scope.clients=clients}),$uibModal.open({animation:!0,scope:$scope,size:"lg",templateUrl:"scripts/mojrokovnik-cases/cases-dialog.html",controller:casesDialogCtrl}),$scope.data={rivalType:["Tužilac","Tuženi","Poverilac","Dužnik","Usvojilac","Usvojenik","Izvršni poverilac","Izvršni dužnik","Predlagač","Protivnik predlagača","Privatni tužilac","Okrivljeni","Treće lice","Oštećeni"],caseType:["Izvršni postupak","Krivični postupak","Parnični postupak","Prekršajni postupak","Privredno pravo","Upravni postupak i sporovi","Vanparnični postupak","Ostalo"],caseElement:["Bračni spor","Izdržavanje","Kolektivni ugovori  spor","Materinstvo i očinstvo","Naknada štete","Nasledni spor","Obligacioni spor","Platni nalog","Poništaj usvojenja","Privredni spor","Radni spor","Roditeljsko pravo","Smetanje državine","Spor  povreda žiga ili firme","Spor authorskih prava","Spor male vrednosti","Stambeni spor","Svojinski spor","Zaštita od nasilja u porodici","Zaštita prava deteta","Ostalo"]},$scope.getClient=function(client_id){return _.find($scope.clients,function(client){return client.client_id===client_id})},console.log($scope.getClient(1))}}function casesSidenav(){return{controller:casesCtrl,link:function(scope,elem,attr,ctrl){}}}function casesTemplate(){return{link:function(scope,elem,attr,ctrl){}}}function clientsCtrl($scope,api,$uibModal){function clientDialogCtrl($uibModalInstance){$scope.save=function(client){$scope.editMode?api("clients").update(client).then(function(){$scope.editMode=!1,$uibModalInstance.close()}):api("clients").add(client).then(function(){$scope.clients.push(client),$uibModalInstance.close()})},$scope.cancel=function(){$uibModalInstance.dismiss()}}api("clients").fetch({client_delete:0}).then(function(clients){$scope.clients=clients,$scope.sClient=clients[0],api("cases").fetch({client_id:clients[0].client_id}).then(function(cases){$scope.cases=cases})}),$scope.selectClient=function(client){$scope.sClient=client,api("cases").fetch({client_id:client.client_id}).then(function(cases){$scope.cases=cases})},$scope.removeClient=function(client){api("clients")["delete"](client).then(function(){$scope.clients=_.without($scope.clients,client),$scope.sClient=$scope.clients[0]})},$scope.showDialog=function(client){client?($scope.client=client,$scope.editMode=!0):(delete $scope.client,$scope.editMode=!1),$uibModal.open({animation:!0,scope:$scope,templateUrl:"scripts/mojrokovnik-clients/clients-dialog.html",controller:clientDialogCtrl})}}function clientsSidenav(){return{controller:clientsCtrl,link:function(scope,elem,attr,ctrl){}}}function clientsTemplate(){return{link:function(scope,elem,attr,ctrl){}}}function apiService($q,$http,notify){function isOK(response){function isErrData(data){return data&&data._status&&"ERR"===data._status}return response.status>=200&&response.status<300&&!isErrData(response.data)}function http(config){return $q.when(config.url).then(function(url){return config.url=url,$http(config)}).then(function(response){return isOK(response)?response.data:$q.reject(response)})}var api=function(table){return{fetch:function(params){return http({url:"../server/api.php?table="+table,method:"GET",params:params}).then(function(response){return response})},add:function(params){return http({url:"../server/api.php?table="+table,method:"POST",params:params}).then(function(response){return notify.success(response.msg),response})},update:function(params){return http({url:"../server/api.php?table="+table,method:"PUT",params:params}).then(function(response){return notify.success(response.msg),response})},"delete":function(params){return http({url:"../server/api.php?table="+table,method:"DELETE",params:params}).then(function(response){return notify.success(response.msg),response})}}};return api}function mrLoginCtrl($location,$http,$cookies,$scope,notify,api){$scope.login=function(login){$http({url:"../server/mr-login.php",method:"POST",params:login}).then(function(response){response.data.login?api("users").fetch().then(function(user){user&&($cookies.putObject("user",user),$location.url("/clients"))}):notify.error(response.data.msg)})}}function mrMainNavitagion($location,authentification){return{templateUrl:"scripts/mojrokovnik/navigation/navigation.html",link:function(scope){scope.visible=authentification.isLoggedIn(),scope.isCurrentPath=function(value){return $location.$$path===value}}}}function notifyService($mdToast){function showToast(type,text){$mdToast.show({template:'<md-toast class="md-toast '+type+'">'+text+"</md-toast>",position:"top right"})}this.success=function(text){showToast("success",text)},this.warn=function(text){showToast("warn",text)},this.error=function(text){showToast("error",text)}}function datetimePicker(){return{scope:{model:"="},link:function(scope,elem,attr,ctrl){elem.datetimepicker({format:"MMMM Do YYYY, HH:mm",inline:!0,sideBySide:!0,defaultDate:scope.model}),elem.on("dp.change",function(e){scope.model=e.date._d,scope.$apply()})}}}function mojrokovnikAuth(api,$cookies){var self=this;api("users").fetch().then(function(user){user&&(self.user=user)}),this.getUser=function(){return self.user},this.isLoggedIn=function(){return!!$cookies.getObject("user")}}function mojrokovnikConf($routeProvider){$routeProvider.otherwise({redirectTo:"/clients"}),$routeProvider.when("/login",{templateUrl:"scripts/mojrokovnik/login/login.html"}),$routeProvider.when("/clients",{templateUrl:"scripts/mojrokovnik-clients/clients.html"}),$routeProvider.when("/cases",{templateUrl:"scripts/mojrokovnik-cases/cases.html"}),$routeProvider.when("/calendar",{templateUrl:"scripts/mojrokovnik-calendar/calendar.html"})}function calendarTemplate(api){return{controller:calendarCtrl,link:function(scope,element,attr,ctrl){function initializeCalendar(events){element.fullCalendar({header:{left:"prev,next today",center:"title",right:"month,agendaWeek,agendaDay"},height:angular.element("body").height(),firstDay:1,lang:"sr",scrollTime:"08:00:00",defaultView:"agendaWeek",slotDuration:"00:15:00",timezone:"UTC",selectable:!0,editable:!0,eventLimit:!0,events:events,select:function(startDate,endDate){scope.showDialog(startDate,endDate)},eventClick:function(event){scope.showDialog(event.start,event.end,event.data),console.log(event.data)},eventDrop:function(event){scope.showDialog(event.start,event.end,event.data)},eventResize:function(event){scope.showDialog(event.start,event.end,event.data)}})}api("calendars").fetch().then(function(events){var filterEvents=[];return angular.forEach(events,function(item){filterEvents.push({title:item.calendar_name+" - "+item.calendar_comment,start:item.calendar_startDate,end:item.calendar_endDate,data:item})}),initializeCalendar(filterEvents)}),scope.createEvent=function(event){var eventData={title:event.calendar_name+" - "+event.calendar_comment,start:event.calendar_startDate,end:event.calendar_endDate,data:event};element.fullCalendar("renderEvent",eventData,!0),element.fullCalendar("unselect")}}}}function calendarCtrl($scope,$q,$uibModal,api){function calendarDialogCtrl($uibModalInstance){$scope.save=function(calendar){calendar.calendar_startDate=calendar.calendar_startDate._d,calendar.calendar_endDate=moment(calendar.calendar_startDate).add(calendar.calendar_duration,"m")._d,calendar=_.omit(calendar,"calendar_duration"),calendar.calendar_id?api("calendars").update(calendar).then(function(){$uibModalInstance.close()}):api("calendars").add(calendar).then(function(data){calendar.calendar_id=data.id,$scope.createEvent(calendar),$uibModalInstance.close()})},$scope.cancel=function(){$uibModalInstance.dismiss()}}$scope.showDialog=function(startDate,endDate,data){data?($scope.calendar=data,$scope.calendar.calendar_startDate=startDate,$scope.calendar.calendar_endDate=endDate,$scope.calendar.calendar_duration=(moment(endDate)-moment(startDate))/6e4):$scope.calendar={calendar_startDate:startDate,calendar_endDate:endDate,calendar_duration:(moment(endDate)-moment(startDate))/6e4},$uibModal.open({animation:!0,scope:$scope,templateUrl:"scripts/mojrokovnik-calendar/calendar-dialog.html",controller:calendarDialogCtrl}),$scope.types=[{value:1,name:"Ročište"},{value:2,name:"Obaveza"}];var clients=api("clients").fetch(),cases=api("cases").fetch();$q.all([clients,cases]).then(function(values){$scope.clients=values[0],$scope.cases=values[1]})}}function casesCtrl($scope,api,$uibModal){function casesDialogCtrl($uibModalInstance){$scope.save=function(cases){$scope.editMode?api("cases").update(cases).then(function(){$scope.editMode=!1,$uibModalInstance.close()}):api("cases").add(cases).then(function(){$scope.cases.push(cases),$uibModalInstance.close()})},$scope.cancel=function(){$uibModalInstance.dismiss()}}api("cases").fetch({case_delete:0}).then(function(cases){$scope.cases=cases,$scope.sCase=cases[0],api("clients").fetch({client_id:cases[0].client_id}).then(function(client){$scope.client=client[0]})}),$scope.selectCase=function(ucase){$scope.sCase=ucase,api("clients").fetch({client_id:ucase.client_id}).then(function(client){$scope.client=client[0]})},$scope.removeCase=function(cases){api("cases")["delete"](cases).then(function(){$scope.cases=_.without($scope.cases,cases),$scope.selCase=$scope.cases[0]})},$scope.showDialog=function(cases){cases?($scope.newCase=cases,$scope.editMode=!0):(delete $scope.newCase,$scope.editMode=!1),api("clients").fetch({client_delete:0}).then(function(clients){$scope.clients=clients}),$uibModal.open({animation:!0,scope:$scope,size:"lg",templateUrl:"scripts/mojrokovnik-cases/cases-dialog.html",controller:casesDialogCtrl}),$scope.data={rivalType:["Tužilac","Tuženi","Poverilac","Dužnik","Usvojilac","Usvojenik","Izvršni poverilac","Izvršni dužnik","Predlagač","Protivnik predlagača","Privatni tužilac","Okrivljeni","Treće lice","Oštećeni"],caseType:["Izvršni postupak","Krivični postupak","Parnični postupak","Prekršajni postupak","Privredno pravo","Upravni postupak i sporovi","Vanparnični postupak","Ostalo"],caseElement:["Bračni spor","Izdržavanje","Kolektivni ugovori  spor","Materinstvo i očinstvo","Naknada štete","Nasledni spor","Obligacioni spor","Platni nalog","Poništaj usvojenja","Privredni spor","Radni spor","Roditeljsko pravo","Smetanje državine","Spor  povreda žiga ili firme","Spor authorskih prava","Spor male vrednosti","Stambeni spor","Svojinski spor","Zaštita od nasilja u porodici","Zaštita prava deteta","Ostalo"]},$scope.getClient=function(client_id){return _.find($scope.clients,function(client){client.client_id===client_id})},console.log($scope.getClient(1))}}function casesSidenav(){return{controller:casesCtrl,link:function(scope,elem,attr,ctrl){}}}function casesTemplate(){return{link:function(scope,elem,attr,ctrl){}}}function clientsCtrl($scope,api,$uibModal){function clientDialogCtrl($uibModalInstance){$scope.save=function(client){$scope.editMode?api("clients").update(client).then(function(){$scope.editMode=!1,$uibModalInstance.close()}):api("clients").add(client).then(function(){$scope.clients.push(client),$uibModalInstance.close()})},$scope.cancel=function(){$uibModalInstance.dismiss()}}api("clients").fetch({client_delete:0}).then(function(clients){$scope.clients=clients,$scope.sClient=clients[0],api("cases").fetch({client_id:clients[0].client_id}).then(function(cases){$scope.cases=cases})}),$scope.selectClient=function(client){$scope.sClient=client,api("cases").fetch({client_id:client.client_id}).then(function(cases){$scope.cases=cases})},$scope.removeClient=function(client){api("clients")["delete"](client).then(function(){$scope.clients=_.without($scope.clients,client),$scope.sClient=$scope.clients[0]})},$scope.showDialog=function(client){client?($scope.client=client,$scope.editMode=!0):(delete $scope.client,$scope.editMode=!1),$uibModal.open({animation:!0,scope:$scope,templateUrl:"scripts/mojrokovnik-clients/clients-dialog.html",controller:clientDialogCtrl})}}function clientsSidenav(){return{controller:clientsCtrl,link:function(scope,elem,attr,ctrl){}}}function clientsTemplate(){return{link:function(scope,elem,attr,ctrl){}}}function apiService($q,$http,notify){function isOK(response){function isErrData(data){return data&&data._status&&"ERR"===data._status}return response.status>=200&&response.status<300&&!isErrData(response.data)}function http(config){return $q.when(config.url).then(function(url){return config.url=url,$http(config)}).then(function(response){return isOK(response)?response.data:$q.reject(response)})}var api=function(table){return{fetch:function(params){return http({url:"../server/api.php?table="+table,method:"GET",params:params}).then(function(response){return response})},add:function(params){return http({url:"../server/api.php?table="+table,method:"POST",params:params}).then(function(response){return notify.success(response.msg),response})},update:function(params){return http({url:"../server/api.php?table="+table,method:"PUT",params:params}).then(function(response){return notify.success(response.msg),response})},"delete":function(params){return http({url:"../server/api.php?table="+table,method:"DELETE",params:params}).then(function(response){return notify.success(response.msg),response})}}};return api}function mrLoginCtrl($location,$http,$cookies,$scope,notify,api){$scope.login=function(login){$http({url:"../server/mr-login.php",method:"POST",params:login}).then(function(response){response.data.login?api("users").fetch().then(function(user){user&&($cookies.putObject("user",user),$location.url("/clients"))}):notify.error(response.data.msg)})}}function mrMainNavitagion($location,authentification){return{templateUrl:"scripts/mojrokovnik/navigation/navigation.html",link:function(scope){scope.visible=authentification.isLoggedIn(),scope.isCurrentPath=function(value){return $location.$$path===value}}}}function notifyService($mdToast){function showToast(type,text){$mdToast.show({template:'<md-toast class="md-toast '+type+'">'+text+"</md-toast>",position:"top right"})}this.success=function(text){showToast("success",text)},this.warn=function(text){showToast("warn",text)},this.error=function(text){showToast("error",text)}}function datetimePicker(){return{scope:{model:"="},link:function(scope,elem,attr,ctrl){elem.datetimepicker({format:"MMMM Do YYYY, HH:mm",inline:!0,sideBySide:!0,defaultDate:scope.model}),elem.on("dp.change",function(e){scope.model=e.date._d,scope.$apply()})}}}function mojrokovnikAuth(api,$cookies){var self=this;api("users").fetch().then(function(user){user&&(self.user=user)}),this.getUser=function(){return self.user},this.isLoggedIn=function(){return!!$cookies.getObject("user")}}function mojrokovnikConf($routeProvider){$routeProvider.otherwise({redirectTo:"/clients"}),$routeProvider.when("/login",{templateUrl:"scripts/mojrokovnik/login/login.html"}),$routeProvider.when("/clients",{templateUrl:"scripts/mojrokovnik-clients/clients.html"}),$routeProvider.when("/cases",{templateUrl:"scripts/mojrokovnik-cases/cases.html"}),$routeProvider.when("/calendar",{templateUrl:"scripts/mojrokovnik-calendar/calendar.html"})}function calendarTemplate(api){return{controller:calendarCtrl,link:function(scope,element,attr,ctrl){function initializeCalendar(events){element.fullCalendar({header:{left:"prev,next today",center:"title",right:"month,agendaWeek,agendaDay"},height:angular.element("body").height(),firstDay:1,lang:"sr",scrollTime:"08:00:00",defaultView:"agendaWeek",slotDuration:"00:15:00",timezone:"UTC",selectable:!0,editable:!0,eventLimit:!0,events:events,select:function(startDate,endDate){scope.showDialog(startDate,endDate)},eventClick:function(event){scope.showDialog(event.start,event.end,event.data),console.log(event.data)},eventDrop:function(event){scope.showDialog(event.start,event.end,event.data)},eventResize:function(event){scope.showDialog(event.start,event.end,event.data)}})}api("calendars").fetch().then(function(events){var filterEvents=[];return angular.forEach(events,function(item){filterEvents.push({title:item.calendar_name+" - "+item.calendar_comment,start:item.calendar_startDate,end:item.calendar_endDate,data:item})}),initializeCalendar(filterEvents)}),scope.createEvent=function(event){var eventData={title:event.calendar_name+" - "+event.calendar_comment,start:event.calendar_startDate,end:event.calendar_endDate,data:event};element.fullCalendar("renderEvent",eventData,!0),element.fullCalendar("unselect")}}}}function calendarCtrl($scope,$q,$uibModal,api){function calendarDialogCtrl($uibModalInstance){$scope.save=function(calendar){calendar.calendar_startDate=calendar.calendar_startDate._d,calendar.calendar_endDate=moment(calendar.calendar_startDate).add(calendar.calendar_duration,"m")._d,calendar=_.omit(calendar,"calendar_duration"),calendar.calendar_id?api("calendars").update(calendar).then(function(){$uibModalInstance.close()}):api("calendars").add(calendar).then(function(data){calendar.calendar_id=data.id,$scope.createEvent(calendar),$uibModalInstance.close()})},$scope.cancel=function(){$uibModalInstance.dismiss()}}$scope.showDialog=function(startDate,endDate,data){data?($scope.calendar=data,$scope.calendar.calendar_startDate=startDate,$scope.calendar.calendar_endDate=endDate,$scope.calendar.calendar_duration=(moment(endDate)-moment(startDate))/6e4):$scope.calendar={calendar_startDate:startDate,calendar_endDate:endDate,calendar_duration:(moment(endDate)-moment(startDate))/6e4},$uibModal.open({animation:!0,scope:$scope,templateUrl:"scripts/mojrokovnik-calendar/calendar-dialog.html",controller:calendarDialogCtrl}),$scope.types=[{value:1,name:"Ročište"},{value:2,name:"Obaveza"}];var clients=api("clients").fetch(),cases=api("cases").fetch();$q.all([clients,cases]).then(function(values){$scope.clients=values[0],$scope.cases=values[1]})}}function casesCtrl($scope,api,$uibModal){function casesDialogCtrl($uibModalInstance){$scope.save=function(cases){$scope.editMode?api("cases").update(cases).then(function(){$scope.editMode=!1,$uibModalInstance.close()}):api("cases").add(cases).then(function(){$scope.cases.push(cases),$uibModalInstance.close()})},$scope.cancel=function(){$uibModalInstance.dismiss()}}api("cases").fetch({case_delete:0}).then(function(cases){$scope.cases=cases,$scope.sCase=cases[0],api("clients").fetch({client_id:cases[0].client_id}).then(function(client){$scope.client=client[0]})}),$scope.selectCase=function(ucase){$scope.sCase=ucase,api("clients").fetch({client_id:ucase.client_id}).then(function(client){$scope.client=client[0]})},$scope.removeCase=function(cases){api("cases")["delete"](cases).then(function(){$scope.cases=_.without($scope.cases,cases),$scope.selCase=$scope.cases[0]})},$scope.showDialog=function(cases){cases?($scope.newCase=cases,$scope.editMode=!0):(delete $scope.newCase,$scope.editMode=!1),api("clients").fetch({client_delete:0}).then(function(clients){$scope.clients=clients}),$uibModal.open({animation:!0,scope:$scope,size:"lg",templateUrl:"scripts/mojrokovnik-cases/cases-dialog.html",controller:casesDialogCtrl}),$scope.data={rivalType:["Tužilac","Tuženi","Poverilac","Dužnik","Usvojilac","Usvojenik","Izvršni poverilac","Izvršni dužnik","Predlagač","Protivnik predlagača","Privatni tužilac","Okrivljeni","Treće lice","Oštećeni"],caseType:["Izvršni postupak","Krivični postupak","Parnični postupak","Prekršajni postupak","Privredno pravo","Upravni postupak i sporovi","Vanparnični postupak","Ostalo"],caseElement:["Bračni spor","Izdržavanje","Kolektivni ugovori  spor","Materinstvo i očinstvo","Naknada štete","Nasledni spor","Obligacioni spor","Platni nalog","Poništaj usvojenja","Privredni spor","Radni spor","Roditeljsko pravo","Smetanje državine","Spor  povreda žiga ili firme","Spor authorskih prava","Spor male vrednosti","Stambeni spor","Svojinski spor","Zaštita od nasilja u porodici","Zaštita prava deteta","Ostalo"]},$scope.getClient=function(client_id){_.find($scope.clients,function(client){return client.client_id===client_id?client:void 0})},console.log($scope.getClient(1))}}function casesSidenav(){return{controller:casesCtrl,link:function(scope,elem,attr,ctrl){}}}function casesTemplate(){return{link:function(scope,elem,attr,ctrl){}}}function clientsCtrl($scope,api,$uibModal){function clientDialogCtrl($uibModalInstance){$scope.save=function(client){$scope.editMode?api("clients").update(client).then(function(){$scope.editMode=!1,$uibModalInstance.close()}):api("clients").add(client).then(function(){$scope.clients.push(client),$uibModalInstance.close()})},$scope.cancel=function(){$uibModalInstance.dismiss()}}api("clients").fetch({client_delete:0}).then(function(clients){$scope.clients=clients,$scope.sClient=clients[0],api("cases").fetch({client_id:clients[0].client_id}).then(function(cases){$scope.cases=cases})}),$scope.selectClient=function(client){$scope.sClient=client,api("cases").fetch({client_id:client.client_id}).then(function(cases){$scope.cases=cases})},$scope.removeClient=function(client){api("clients")["delete"](client).then(function(){$scope.clients=_.without($scope.clients,client),$scope.sClient=$scope.clients[0]})},$scope.showDialog=function(client){client?($scope.client=client,$scope.editMode=!0):(delete $scope.client,$scope.editMode=!1),$uibModal.open({animation:!0,scope:$scope,templateUrl:"scripts/mojrokovnik-clients/clients-dialog.html",controller:clientDialogCtrl})}}function clientsSidenav(){return{controller:clientsCtrl,link:function(scope,elem,attr,ctrl){}}}function clientsTemplate(){return{link:function(scope,elem,attr,ctrl){}}}function apiService($q,$http,notify){function isOK(response){function isErrData(data){return data&&data._status&&"ERR"===data._status}return response.status>=200&&response.status<300&&!isErrData(response.data)}function http(config){return $q.when(config.url).then(function(url){return config.url=url,$http(config)}).then(function(response){return isOK(response)?response.data:$q.reject(response)})}var api=function(table){return{fetch:function(params){return http({url:"../server/api.php?table="+table,method:"GET",params:params}).then(function(response){return response})},add:function(params){return http({url:"../server/api.php?table="+table,method:"POST",params:params}).then(function(response){return notify.success(response.msg),response})},update:function(params){return http({url:"../server/api.php?table="+table,method:"PUT",params:params}).then(function(response){return notify.success(response.msg),response})},"delete":function(params){return http({url:"../server/api.php?table="+table,method:"DELETE",params:params}).then(function(response){return notify.success(response.msg),response})}}};return api}function mrLoginCtrl($location,$http,$cookies,$scope,notify,api){$scope.login=function(login){$http({url:"../server/mr-login.php",method:"POST",params:login}).then(function(response){response.data.login?api("users").fetch().then(function(user){user&&($cookies.putObject("user",user),$location.url("/clients"))}):notify.error(response.data.msg)})}}function mrMainNavitagion($location,authentification){return{templateUrl:"scripts/mojrokovnik/navigation/navigation.html",link:function(scope){scope.visible=authentification.isLoggedIn(),scope.isCurrentPath=function(value){return $location.$$path===value}}}}function notifyService($mdToast){function showToast(type,text){$mdToast.show({template:'<md-toast class="md-toast '+type+'">'+text+"</md-toast>",position:"top right"})}this.success=function(text){showToast("success",text)},this.warn=function(text){showToast("warn",text)},this.error=function(text){showToast("error",text)}}function datetimePicker(){return{scope:{model:"="},link:function(scope,elem,attr,ctrl){elem.datetimepicker({format:"MMMM Do YYYY, HH:mm",inline:!0,sideBySide:!0,defaultDate:scope.model}),elem.on("dp.change",function(e){scope.model=e.date._d,scope.$apply()})}}}function mojrokovnikAuth(api,$cookies){var self=this;api("users").fetch().then(function(user){user&&(self.user=user)}),this.getUser=function(){return self.user},this.isLoggedIn=function(){return!!$cookies.getObject("user")}}function mojrokovnikConf($routeProvider){$routeProvider.otherwise({redirectTo:"/clients"}),$routeProvider.when("/login",{templateUrl:"scripts/mojrokovnik/login/login.html"}),$routeProvider.when("/clients",{templateUrl:"scripts/mojrokovnik-clients/clients.html"}),$routeProvider.when("/cases",{templateUrl:"scripts/mojrokovnik-cases/cases.html"}),$routeProvider.when("/calendar",{templateUrl:"scripts/mojrokovnik-calendar/calendar.html"})}function calendarTemplate(api){return{controller:calendarCtrl,link:function(scope,element,attr,ctrl){function initializeCalendar(events){element.fullCalendar({header:{left:"prev,next today",center:"title",right:"month,agendaWeek,agendaDay"},height:angular.element("body").height(),firstDay:1,lang:"sr",scrollTime:"08:00:00",defaultView:"agendaWeek",slotDuration:"00:15:00",timezone:"UTC",selectable:!0,editable:!0,eventLimit:!0,events:events,select:function(startDate,endDate){scope.showDialog(startDate,endDate)},eventClick:function(event){scope.showDialog(event.start,event.end,event.data),console.log(event.data)},eventDrop:function(event){scope.showDialog(event.start,event.end,event.data)},eventResize:function(event){scope.showDialog(event.start,event.end,event.data)}})}api("calendars").fetch().then(function(events){var filterEvents=[];return angular.forEach(events,function(item){filterEvents.push({title:item.calendar_name+" - "+item.calendar_comment,start:item.calendar_startDate,end:item.calendar_endDate,data:item})}),initializeCalendar(filterEvents)}),scope.createEvent=function(event){var eventData={title:event.calendar_name+" - "+event.calendar_comment,start:event.calendar_startDate,end:event.calendar_endDate,data:event};element.fullCalendar("renderEvent",eventData,!0),element.fullCalendar("unselect")}}}}function calendarCtrl($scope,$q,$uibModal,api){function calendarDialogCtrl($uibModalInstance){$scope.save=function(calendar){calendar.calendar_startDate=calendar.calendar_startDate._d,calendar.calendar_endDate=moment(calendar.calendar_startDate).add(calendar.calendar_duration,"m")._d,calendar=_.omit(calendar,"calendar_duration"),calendar.calendar_id?api("calendars").update(calendar).then(function(){$uibModalInstance.close()}):api("calendars").add(calendar).then(function(data){calendar.calendar_id=data.id,$scope.createEvent(calendar),$uibModalInstance.close()})},$scope.cancel=function(){$uibModalInstance.dismiss()}}$scope.showDialog=function(startDate,endDate,data){data?($scope.calendar=data,$scope.calendar.calendar_startDate=startDate,$scope.calendar.calendar_endDate=endDate,$scope.calendar.calendar_duration=(moment(endDate)-moment(startDate))/6e4):$scope.calendar={calendar_startDate:startDate,calendar_endDate:endDate,calendar_duration:(moment(endDate)-moment(startDate))/6e4},$uibModal.open({animation:!0,scope:$scope,templateUrl:"scripts/mojrokovnik-calendar/calendar-dialog.html",controller:calendarDialogCtrl}),$scope.types=[{value:1,name:"Ročište"},{value:2,name:"Obaveza"}];var clients=api("clients").fetch(),cases=api("cases").fetch();$q.all([clients,cases]).then(function(values){$scope.clients=values[0],$scope.cases=values[1]})}}function casesCtrl($scope,api,$uibModal){function casesDialogCtrl($uibModalInstance){$scope.save=function(cases){$scope.editMode?api("cases").update(cases).then(function(){$scope.editMode=!1,$uibModalInstance.close()}):api("cases").add(cases).then(function(){$scope.cases.push(cases),$uibModalInstance.close()})},$scope.cancel=function(){$uibModalInstance.dismiss()}}api("cases").fetch({case_delete:0}).then(function(cases){$scope.cases=cases,$scope.sCase=cases[0],api("clients").fetch({client_id:cases[0].client_id}).then(function(client){$scope.client=client[0]})}),$scope.selectCase=function(ucase){$scope.sCase=ucase,api("clients").fetch({client_id:ucase.client_id}).then(function(client){$scope.client=client[0]})},$scope.removeCase=function(cases){api("cases")["delete"](cases).then(function(){$scope.cases=_.without($scope.cases,cases),$scope.selCase=$scope.cases[0]})},$scope.showDialog=function(cases){cases?($scope.newCase=cases,$scope.editMode=!0):(delete $scope.newCase,$scope.editMode=!1),api("clients").fetch({client_delete:0}).then(function(clients){$scope.clients=clients}),$uibModal.open({animation:!0,scope:$scope,size:"lg",templateUrl:"scripts/mojrokovnik-cases/cases-dialog.html",controller:casesDialogCtrl}),$scope.data={rivalType:["Tužilac","Tuženi","Poverilac","Dužnik","Usvojilac","Usvojenik","Izvršni poverilac","Izvršni dužnik","Predlagač","Protivnik predlagača","Privatni tužilac","Okrivljeni","Treće lice","Oštećeni"],caseType:["Izvršni postupak","Krivični postupak","Parnični postupak","Prekršajni postupak","Privredno pravo","Upravni postupak i sporovi","Vanparnični postupak","Ostalo"],caseElement:["Bračni spor","Izdržavanje","Kolektivni ugovori  spor","Materinstvo i očinstvo","Naknada štete","Nasledni spor","Obligacioni spor","Platni nalog","Poništaj usvojenja","Privredni spor","Radni spor","Roditeljsko pravo","Smetanje državine","Spor  povreda žiga ili firme","Spor authorskih prava","Spor male vrednosti","Stambeni spor","Svojinski spor","Zaštita od nasilja u porodici","Zaštita prava deteta","Ostalo"]},$scope.getClient=function(client_id){_.find($scope.clients,function(client){return client.client_id==client_id?client:void 0})},console.log($scope.getClient(1))}}function casesSidenav(){return{controller:casesCtrl,link:function(scope,elem,attr,ctrl){}}}function casesTemplate(){return{link:function(scope,elem,attr,ctrl){}}}function clientsCtrl($scope,api,$uibModal){function clientDialogCtrl($uibModalInstance){$scope.save=function(client){$scope.editMode?api("clients").update(client).then(function(){$scope.editMode=!1,$uibModalInstance.close()}):api("clients").add(client).then(function(){$scope.clients.push(client),$uibModalInstance.close()})},$scope.cancel=function(){$uibModalInstance.dismiss()}}api("clients").fetch({client_delete:0}).then(function(clients){$scope.clients=clients,$scope.sClient=clients[0],api("cases").fetch({client_id:clients[0].client_id}).then(function(cases){$scope.cases=cases})}),$scope.selectClient=function(client){$scope.sClient=client,api("cases").fetch({client_id:client.client_id}).then(function(cases){$scope.cases=cases})},$scope.removeClient=function(client){api("clients")["delete"](client).then(function(){$scope.clients=_.without($scope.clients,client),$scope.sClient=$scope.clients[0]})},$scope.showDialog=function(client){client?($scope.client=client,$scope.editMode=!0):(delete $scope.client,$scope.editMode=!1),$uibModal.open({animation:!0,scope:$scope,templateUrl:"scripts/mojrokovnik-clients/clients-dialog.html",controller:clientDialogCtrl})}}function clientsSidenav(){return{controller:clientsCtrl,link:function(scope,elem,attr,ctrl){}}}function clientsTemplate(){return{link:function(scope,elem,attr,ctrl){}}}function apiService($q,$http,notify){function isOK(response){function isErrData(data){return data&&data._status&&"ERR"===data._status}return response.status>=200&&response.status<300&&!isErrData(response.data)}function http(config){return $q.when(config.url).then(function(url){return config.url=url,$http(config)}).then(function(response){return isOK(response)?response.data:$q.reject(response)})}var api=function(table){return{fetch:function(params){return http({url:"../server/api.php?table="+table,method:"GET",params:params}).then(function(response){return response})},add:function(params){return http({url:"../server/api.php?table="+table,method:"POST",params:params}).then(function(response){return notify.success(response.msg),response})},update:function(params){return http({url:"../server/api.php?table="+table,method:"PUT",params:params}).then(function(response){return notify.success(response.msg),response})},"delete":function(params){return http({url:"../server/api.php?table="+table,method:"DELETE",params:params
}).then(function(response){return notify.success(response.msg),response})}}};return api}function mrLoginCtrl($location,$http,$cookies,$scope,notify,api){$scope.login=function(login){$http({url:"../server/mr-login.php",method:"POST",params:login}).then(function(response){response.data.login?api("users").fetch().then(function(user){user&&($cookies.putObject("user",user),$location.url("/clients"))}):notify.error(response.data.msg)})}}function mrMainNavitagion($location,authentification){return{templateUrl:"scripts/mojrokovnik/navigation/navigation.html",link:function(scope){scope.visible=authentification.isLoggedIn(),scope.isCurrentPath=function(value){return $location.$$path===value}}}}function notifyService($mdToast){function showToast(type,text){$mdToast.show({template:'<md-toast class="md-toast '+type+'">'+text+"</md-toast>",position:"top right"})}this.success=function(text){showToast("success",text)},this.warn=function(text){showToast("warn",text)},this.error=function(text){showToast("error",text)}}function datetimePicker(){return{scope:{model:"="},link:function(scope,elem,attr,ctrl){elem.datetimepicker({format:"MMMM Do YYYY, HH:mm",inline:!0,sideBySide:!0,defaultDate:scope.model}),elem.on("dp.change",function(e){scope.model=e.date._d,scope.$apply()})}}}function mojrokovnikAuth(api,$cookies){var self=this;api("users").fetch().then(function(user){user&&(self.user=user)}),this.getUser=function(){return self.user},this.isLoggedIn=function(){return!!$cookies.getObject("user")}}function mojrokovnikConf($routeProvider){$routeProvider.otherwise({redirectTo:"/clients"}),$routeProvider.when("/login",{templateUrl:"scripts/mojrokovnik/login/login.html"}),$routeProvider.when("/clients",{templateUrl:"scripts/mojrokovnik-clients/clients.html"}),$routeProvider.when("/cases",{templateUrl:"scripts/mojrokovnik-cases/cases.html"}),$routeProvider.when("/calendar",{templateUrl:"scripts/mojrokovnik-calendar/calendar.html"})}function calendarTemplate(api){return{controller:calendarCtrl,link:function(scope,element,attr,ctrl){function initializeCalendar(events){element.fullCalendar({header:{left:"prev,next today",center:"title",right:"month,agendaWeek,agendaDay"},height:angular.element("body").height(),firstDay:1,lang:"sr",scrollTime:"08:00:00",defaultView:"agendaWeek",slotDuration:"00:15:00",timezone:"UTC",selectable:!0,editable:!0,eventLimit:!0,events:events,select:function(startDate,endDate){scope.showDialog(startDate,endDate)},eventClick:function(event){scope.showDialog(event.start,event.end,event.data),console.log(event.data)},eventDrop:function(event){scope.showDialog(event.start,event.end,event.data)},eventResize:function(event){scope.showDialog(event.start,event.end,event.data)}})}api("calendars").fetch().then(function(events){var filterEvents=[];return angular.forEach(events,function(item){filterEvents.push({title:item.calendar_name+" - "+item.calendar_comment,start:item.calendar_startDate,end:item.calendar_endDate,data:item})}),initializeCalendar(filterEvents)}),scope.createEvent=function(event){var eventData={title:event.calendar_name+" - "+event.calendar_comment,start:event.calendar_startDate,end:event.calendar_endDate,data:event};element.fullCalendar("renderEvent",eventData,!0),element.fullCalendar("unselect")}}}}function calendarCtrl($scope,$q,$uibModal,api){function calendarDialogCtrl($uibModalInstance){$scope.save=function(calendar){calendar.calendar_startDate=calendar.calendar_startDate._d,calendar.calendar_endDate=moment(calendar.calendar_startDate).add(calendar.calendar_duration,"m")._d,calendar=_.omit(calendar,"calendar_duration"),calendar.calendar_id?api("calendars").update(calendar).then(function(){$uibModalInstance.close()}):api("calendars").add(calendar).then(function(data){calendar.calendar_id=data.id,$scope.createEvent(calendar),$uibModalInstance.close()})},$scope.cancel=function(){$uibModalInstance.dismiss()}}$scope.showDialog=function(startDate,endDate,data){data?($scope.calendar=data,$scope.calendar.calendar_startDate=startDate,$scope.calendar.calendar_endDate=endDate,$scope.calendar.calendar_duration=(moment(endDate)-moment(startDate))/6e4):$scope.calendar={calendar_startDate:startDate,calendar_endDate:endDate,calendar_duration:(moment(endDate)-moment(startDate))/6e4},$uibModal.open({animation:!0,scope:$scope,templateUrl:"scripts/mojrokovnik-calendar/calendar-dialog.html",controller:calendarDialogCtrl}),$scope.types=[{value:1,name:"Ročište"},{value:2,name:"Obaveza"}];var clients=api("clients").fetch(),cases=api("cases").fetch();$q.all([clients,cases]).then(function(values){$scope.clients=values[0],$scope.cases=values[1]})}}function casesCtrl($scope,api,$uibModal){function casesDialogCtrl($uibModalInstance){$scope.save=function(cases){$scope.editMode?api("cases").update(cases).then(function(){$scope.editMode=!1,$uibModalInstance.close()}):api("cases").add(cases).then(function(){$scope.cases.push(cases),$uibModalInstance.close()})},$scope.cancel=function(){$uibModalInstance.dismiss()}}api("cases").fetch({case_delete:0}).then(function(cases){$scope.cases=cases,$scope.sCase=cases[0],api("clients").fetch({client_id:cases[0].client_id}).then(function(client){$scope.client=client[0]})}),$scope.selectCase=function(ucase){$scope.sCase=ucase,api("clients").fetch({client_id:ucase.client_id}).then(function(client){$scope.client=client[0]})},$scope.removeCase=function(cases){api("cases")["delete"](cases).then(function(){$scope.cases=_.without($scope.cases,cases),$scope.selCase=$scope.cases[0]})},$scope.showDialog=function(cases){cases?($scope.newCase=cases,$scope.editMode=!0):(delete $scope.newCase,$scope.editMode=!1),api("clients").fetch({client_delete:0}).then(function(clients){$scope.clients=clients}),$uibModal.open({animation:!0,scope:$scope,size:"lg",templateUrl:"scripts/mojrokovnik-cases/cases-dialog.html",controller:casesDialogCtrl}),$scope.data={rivalType:["Tužilac","Tuženi","Poverilac","Dužnik","Usvojilac","Usvojenik","Izvršni poverilac","Izvršni dužnik","Predlagač","Protivnik predlagača","Privatni tužilac","Okrivljeni","Treće lice","Oštećeni"],caseType:["Izvršni postupak","Krivični postupak","Parnični postupak","Prekršajni postupak","Privredno pravo","Upravni postupak i sporovi","Vanparnični postupak","Ostalo"],caseElement:["Bračni spor","Izdržavanje","Kolektivni ugovori  spor","Materinstvo i očinstvo","Naknada štete","Nasledni spor","Obligacioni spor","Platni nalog","Poništaj usvojenja","Privredni spor","Radni spor","Roditeljsko pravo","Smetanje državine","Spor  povreda žiga ili firme","Spor authorskih prava","Spor male vrednosti","Stambeni spor","Svojinski spor","Zaštita od nasilja u porodici","Zaštita prava deteta","Ostalo"]},$scope.getClient=function(client_id){var client=_.find($scope.clients,function(client){return client.client_id==client_id});console.log(client)},$scope.getClient(1)}}function casesSidenav(){return{controller:casesCtrl,link:function(scope,elem,attr,ctrl){}}}function casesTemplate(){return{link:function(scope,elem,attr,ctrl){}}}function clientsCtrl($scope,api,$uibModal){function clientDialogCtrl($uibModalInstance){$scope.save=function(client){$scope.editMode?api("clients").update(client).then(function(){$scope.editMode=!1,$uibModalInstance.close()}):api("clients").add(client).then(function(){$scope.clients.push(client),$uibModalInstance.close()})},$scope.cancel=function(){$uibModalInstance.dismiss()}}api("clients").fetch({client_delete:0}).then(function(clients){$scope.clients=clients,$scope.sClient=clients[0],api("cases").fetch({client_id:clients[0].client_id}).then(function(cases){$scope.cases=cases})}),$scope.selectClient=function(client){$scope.sClient=client,api("cases").fetch({client_id:client.client_id}).then(function(cases){$scope.cases=cases})},$scope.removeClient=function(client){api("clients")["delete"](client).then(function(){$scope.clients=_.without($scope.clients,client),$scope.sClient=$scope.clients[0]})},$scope.showDialog=function(client){client?($scope.client=client,$scope.editMode=!0):(delete $scope.client,$scope.editMode=!1),$uibModal.open({animation:!0,scope:$scope,templateUrl:"scripts/mojrokovnik-clients/clients-dialog.html",controller:clientDialogCtrl})}}function clientsSidenav(){return{controller:clientsCtrl,link:function(scope,elem,attr,ctrl){}}}function clientsTemplate(){return{link:function(scope,elem,attr,ctrl){}}}function apiService($q,$http,notify){function isOK(response){function isErrData(data){return data&&data._status&&"ERR"===data._status}return response.status>=200&&response.status<300&&!isErrData(response.data)}function http(config){return $q.when(config.url).then(function(url){return config.url=url,$http(config)}).then(function(response){return isOK(response)?response.data:$q.reject(response)})}var api=function(table){return{fetch:function(params){return http({url:"../server/api.php?table="+table,method:"GET",params:params}).then(function(response){return response})},add:function(params){return http({url:"../server/api.php?table="+table,method:"POST",params:params}).then(function(response){return notify.success(response.msg),response})},update:function(params){return http({url:"../server/api.php?table="+table,method:"PUT",params:params}).then(function(response){return notify.success(response.msg),response})},"delete":function(params){return http({url:"../server/api.php?table="+table,method:"DELETE",params:params}).then(function(response){return notify.success(response.msg),response})}}};return api}function mrLoginCtrl($location,$http,$cookies,$scope,notify,api){$scope.login=function(login){$http({url:"../server/mr-login.php",method:"POST",params:login}).then(function(response){response.data.login?api("users").fetch().then(function(user){user&&($cookies.putObject("user",user),$location.url("/clients"))}):notify.error(response.data.msg)})}}function mrMainNavitagion($location,authentification){return{templateUrl:"scripts/mojrokovnik/navigation/navigation.html",link:function(scope){scope.visible=authentification.isLoggedIn(),scope.isCurrentPath=function(value){return $location.$$path===value}}}}function notifyService($mdToast){function showToast(type,text){$mdToast.show({template:'<md-toast class="md-toast '+type+'">'+text+"</md-toast>",position:"top right"})}this.success=function(text){showToast("success",text)},this.warn=function(text){showToast("warn",text)},this.error=function(text){showToast("error",text)}}function datetimePicker(){return{scope:{model:"="},link:function(scope,elem,attr,ctrl){elem.datetimepicker({format:"MMMM Do YYYY, HH:mm",inline:!0,sideBySide:!0,defaultDate:scope.model}),elem.on("dp.change",function(e){scope.model=e.date._d,scope.$apply()})}}}function mojrokovnikAuth(api,$cookies){var self=this;api("users").fetch().then(function(user){user&&(self.user=user)}),this.getUser=function(){return self.user},this.isLoggedIn=function(){return!!$cookies.getObject("user")}}function mojrokovnikConf($routeProvider){$routeProvider.otherwise({redirectTo:"/clients"}),$routeProvider.when("/login",{templateUrl:"scripts/mojrokovnik/login/login.html"}),$routeProvider.when("/clients",{templateUrl:"scripts/mojrokovnik-clients/clients.html"}),$routeProvider.when("/cases",{templateUrl:"scripts/mojrokovnik-cases/cases.html"}),$routeProvider.when("/calendar",{templateUrl:"scripts/mojrokovnik-calendar/calendar.html"})}function calendarTemplate(api){return{controller:calendarCtrl,link:function(scope,element,attr,ctrl){function initializeCalendar(events){element.fullCalendar({header:{left:"prev,next today",center:"title",right:"month,agendaWeek,agendaDay"},height:angular.element("body").height(),firstDay:1,lang:"sr",scrollTime:"08:00:00",defaultView:"agendaWeek",slotDuration:"00:15:00",timezone:"UTC",selectable:!0,editable:!0,eventLimit:!0,events:events,select:function(startDate,endDate){scope.showDialog(startDate,endDate)},eventClick:function(event){scope.showDialog(event.start,event.end,event.data),console.log(event.data)},eventDrop:function(event){scope.showDialog(event.start,event.end,event.data)},eventResize:function(event){scope.showDialog(event.start,event.end,event.data)}})}api("calendars").fetch().then(function(events){var filterEvents=[];return angular.forEach(events,function(item){filterEvents.push({title:item.calendar_name+" - "+item.calendar_comment,start:item.calendar_startDate,end:item.calendar_endDate,data:item})}),initializeCalendar(filterEvents)}),scope.createEvent=function(event){var eventData={title:event.calendar_name+" - "+event.calendar_comment,start:event.calendar_startDate,end:event.calendar_endDate,data:event};element.fullCalendar("renderEvent",eventData,!0),element.fullCalendar("unselect")}}}}function calendarCtrl($scope,$q,$uibModal,api){function calendarDialogCtrl($uibModalInstance){$scope.save=function(calendar){calendar.calendar_startDate=calendar.calendar_startDate._d,calendar.calendar_endDate=moment(calendar.calendar_startDate).add(calendar.calendar_duration,"m")._d,calendar=_.omit(calendar,"calendar_duration"),calendar.calendar_id?api("calendars").update(calendar).then(function(){$uibModalInstance.close()}):api("calendars").add(calendar).then(function(data){calendar.calendar_id=data.id,$scope.createEvent(calendar),$uibModalInstance.close()})},$scope.cancel=function(){$uibModalInstance.dismiss()}}$scope.showDialog=function(startDate,endDate,data){data?($scope.calendar=data,$scope.calendar.calendar_startDate=startDate,$scope.calendar.calendar_endDate=endDate,$scope.calendar.calendar_duration=(moment(endDate)-moment(startDate))/6e4):$scope.calendar={calendar_startDate:startDate,calendar_endDate:endDate,calendar_duration:(moment(endDate)-moment(startDate))/6e4},$uibModal.open({animation:!0,scope:$scope,templateUrl:"scripts/mojrokovnik-calendar/calendar-dialog.html",controller:calendarDialogCtrl}),$scope.types=[{value:1,name:"Ročište"},{value:2,name:"Obaveza"}];var clients=api("clients").fetch(),cases=api("cases").fetch();$q.all([clients,cases]).then(function(values){$scope.clients=values[0],$scope.cases=values[1]})}}function casesCtrl($scope,api,$uibModal){function casesDialogCtrl($uibModalInstance){$scope.save=function(cases){$scope.editMode?api("cases").update(cases).then(function(){$scope.editMode=!1,$uibModalInstance.close()}):api("cases").add(cases).then(function(){$scope.cases.push(cases),$uibModalInstance.close()})},$scope.cancel=function(){$uibModalInstance.dismiss()}}api("cases").fetch({case_delete:0}).then(function(cases){$scope.cases=cases,$scope.sCase=cases[0],api("clients").fetch({client_id:cases[0].client_id}).then(function(client){$scope.client=client[0]})}),$scope.selectCase=function(ucase){$scope.sCase=ucase,api("clients").fetch({client_id:ucase.client_id}).then(function(client){$scope.client=client[0]})},$scope.removeCase=function(cases){api("cases")["delete"](cases).then(function(){$scope.cases=_.without($scope.cases,cases),$scope.selCase=$scope.cases[0]})},$scope.showDialog=function(cases){cases?($scope.newCase=cases,$scope.editMode=!0):(delete $scope.newCase,$scope.editMode=!1),api("clients").fetch({client_delete:0}).then(function(clients){$scope.clients=clients}),$uibModal.open({animation:!0,scope:$scope,size:"lg",templateUrl:"scripts/mojrokovnik-cases/cases-dialog.html",controller:casesDialogCtrl}),$scope.data={rivalType:["Tužilac","Tuženi","Poverilac","Dužnik","Usvojilac","Usvojenik","Izvršni poverilac","Izvršni dužnik","Predlagač","Protivnik predlagača","Privatni tužilac","Okrivljeni","Treće lice","Oštećeni"],caseType:["Izvršni postupak","Krivični postupak","Parnični postupak","Prekršajni postupak","Privredno pravo","Upravni postupak i sporovi","Vanparnični postupak","Ostalo"],caseElement:["Bračni spor","Izdržavanje","Kolektivni ugovori  spor","Materinstvo i očinstvo","Naknada štete","Nasledni spor","Obligacioni spor","Platni nalog","Poništaj usvojenja","Privredni spor","Radni spor","Roditeljsko pravo","Smetanje državine","Spor  povreda žiga ili firme","Spor authorskih prava","Spor male vrednosti","Stambeni spor","Svojinski spor","Zaštita od nasilja u porodici","Zaštita prava deteta","Ostalo"]},$scope.getClient=function(client_id){var client=_.find($scope.clients,function(client){return client.client_id==client_id});return client},console.log($scope.getClient(1))}}function casesSidenav(){return{controller:casesCtrl,link:function(scope,elem,attr,ctrl){}}}function casesTemplate(){return{link:function(scope,elem,attr,ctrl){}}}function clientsCtrl($scope,api,$uibModal){function clientDialogCtrl($uibModalInstance){$scope.save=function(client){$scope.editMode?api("clients").update(client).then(function(){$scope.editMode=!1,$uibModalInstance.close()}):api("clients").add(client).then(function(){$scope.clients.push(client),$uibModalInstance.close()})},$scope.cancel=function(){$uibModalInstance.dismiss()}}api("clients").fetch({client_delete:0}).then(function(clients){$scope.clients=clients,$scope.sClient=clients[0],api("cases").fetch({client_id:clients[0].client_id}).then(function(cases){$scope.cases=cases})}),$scope.selectClient=function(client){$scope.sClient=client,api("cases").fetch({client_id:client.client_id}).then(function(cases){$scope.cases=cases})},$scope.removeClient=function(client){api("clients")["delete"](client).then(function(){$scope.clients=_.without($scope.clients,client),$scope.sClient=$scope.clients[0]})},$scope.showDialog=function(client){client?($scope.client=client,$scope.editMode=!0):(delete $scope.client,$scope.editMode=!1),$uibModal.open({animation:!0,scope:$scope,templateUrl:"scripts/mojrokovnik-clients/clients-dialog.html",controller:clientDialogCtrl})}}function clientsSidenav(){return{controller:clientsCtrl,link:function(scope,elem,attr,ctrl){}}}function clientsTemplate(){return{link:function(scope,elem,attr,ctrl){}}}function apiService($q,$http,notify){function isOK(response){function isErrData(data){return data&&data._status&&"ERR"===data._status}return response.status>=200&&response.status<300&&!isErrData(response.data)}function http(config){return $q.when(config.url).then(function(url){return config.url=url,$http(config)}).then(function(response){return isOK(response)?response.data:$q.reject(response)})}var api=function(table){return{fetch:function(params){return http({url:"../server/api.php?table="+table,method:"GET",params:params}).then(function(response){return response})},add:function(params){return http({url:"../server/api.php?table="+table,method:"POST",params:params}).then(function(response){return notify.success(response.msg),response})},update:function(params){return http({url:"../server/api.php?table="+table,method:"PUT",params:params}).then(function(response){return notify.success(response.msg),response})},"delete":function(params){return http({url:"../server/api.php?table="+table,method:"DELETE",params:params}).then(function(response){return notify.success(response.msg),response})}}};return api}function mrLoginCtrl($location,$http,$cookies,$scope,notify,api){$scope.login=function(login){$http({url:"../server/mr-login.php",method:"POST",params:login}).then(function(response){response.data.login?api("users").fetch().then(function(user){user&&($cookies.putObject("user",user),$location.url("/clients"))}):notify.error(response.data.msg)})}}function mrMainNavitagion($location,authentification){return{templateUrl:"scripts/mojrokovnik/navigation/navigation.html",link:function(scope){scope.visible=authentification.isLoggedIn(),scope.isCurrentPath=function(value){return $location.$$path===value}}}}function notifyService($mdToast){function showToast(type,text){$mdToast.show({template:'<md-toast class="md-toast '+type+'">'+text+"</md-toast>",position:"top right"})}this.success=function(text){showToast("success",text)},this.warn=function(text){showToast("warn",text)},this.error=function(text){showToast("error",text)}}function datetimePicker(){return{scope:{model:"="},link:function(scope,elem,attr,ctrl){elem.datetimepicker({format:"MMMM Do YYYY, HH:mm",inline:!0,sideBySide:!0,defaultDate:scope.model}),elem.on("dp.change",function(e){scope.model=e.date._d,scope.$apply()})}}}function mojrokovnikAuth(api,$cookies){var self=this;api("users").fetch().then(function(user){user&&(self.user=user)}),this.getUser=function(){return self.user},this.isLoggedIn=function(){return!!$cookies.getObject("user")}}function mojrokovnikConf($routeProvider){$routeProvider.otherwise({redirectTo:"/clients"}),$routeProvider.when("/login",{templateUrl:"scripts/mojrokovnik/login/login.html"}),$routeProvider.when("/clients",{templateUrl:"scripts/mojrokovnik-clients/clients.html"}),$routeProvider.when("/cases",{templateUrl:"scripts/mojrokovnik-cases/cases.html"}),$routeProvider.when("/calendar",{templateUrl:"scripts/mojrokovnik-calendar/calendar.html"})}function calendarTemplate(api){return{controller:calendarCtrl,link:function(scope,element,attr,ctrl){function initializeCalendar(events){element.fullCalendar({header:{left:"prev,next today",center:"title",right:"month,agendaWeek,agendaDay"},height:angular.element("body").height(),firstDay:1,lang:"sr",scrollTime:"08:00:00",defaultView:"agendaWeek",slotDuration:"00:15:00",timezone:"UTC",selectable:!0,editable:!0,eventLimit:!0,events:events,select:function(startDate,endDate){scope.showDialog(startDate,endDate)},eventClick:function(event){scope.showDialog(event.start,event.end,event.data),console.log(event.data)},eventDrop:function(event){scope.showDialog(event.start,event.end,event.data)},eventResize:function(event){scope.showDialog(event.start,event.end,event.data)}})}api("calendars").fetch().then(function(events){var filterEvents=[];return angular.forEach(events,function(item){filterEvents.push({title:item.calendar_name+" - "+item.calendar_comment,start:item.calendar_startDate,end:item.calendar_endDate,data:item})}),initializeCalendar(filterEvents)}),scope.createEvent=function(event){var eventData={title:event.calendar_name+" - "+event.calendar_comment,start:event.calendar_startDate,end:event.calendar_endDate,data:event};element.fullCalendar("renderEvent",eventData,!0),element.fullCalendar("unselect")}}}}function calendarCtrl($scope,$q,$uibModal,api){function calendarDialogCtrl($uibModalInstance){$scope.save=function(calendar){calendar.calendar_startDate=calendar.calendar_startDate._d,calendar.calendar_endDate=moment(calendar.calendar_startDate).add(calendar.calendar_duration,"m")._d,calendar=_.omit(calendar,"calendar_duration"),calendar.calendar_id?api("calendars").update(calendar).then(function(){$uibModalInstance.close()}):api("calendars").add(calendar).then(function(data){calendar.calendar_id=data.id,$scope.createEvent(calendar),$uibModalInstance.close()})},$scope.cancel=function(){$uibModalInstance.dismiss()}}$scope.showDialog=function(startDate,endDate,data){data?($scope.calendar=data,$scope.calendar.calendar_startDate=startDate,$scope.calendar.calendar_endDate=endDate,$scope.calendar.calendar_duration=(moment(endDate)-moment(startDate))/6e4):$scope.calendar={calendar_startDate:startDate,calendar_endDate:endDate,calendar_duration:(moment(endDate)-moment(startDate))/6e4},$uibModal.open({animation:!0,scope:$scope,templateUrl:"scripts/mojrokovnik-calendar/calendar-dialog.html",controller:calendarDialogCtrl}),$scope.types=[{value:1,name:"Ročište"},{value:2,name:"Obaveza"}];var clients=api("clients").fetch(),cases=api("cases").fetch();$q.all([clients,cases]).then(function(values){$scope.clients=values[0],$scope.cases=values[1]})}}function casesCtrl($scope,api,$uibModal){function casesDialogCtrl($uibModalInstance){$scope.save=function(cases){$scope.editMode?api("cases").update(cases).then(function(){$scope.editMode=!1,$uibModalInstance.close()}):api("cases").add(cases).then(function(){$scope.cases.push(cases),$uibModalInstance.close()})},$scope.cancel=function(){$uibModalInstance.dismiss()}}api("cases").fetch({case_delete:0}).then(function(cases){$scope.cases=cases,$scope.sCase=cases[0],api("clients").fetch({client_id:cases[0].client_id}).then(function(client){$scope.client=client[0]})}),$scope.selectCase=function(ucase){$scope.sCase=ucase,api("clients").fetch({client_id:ucase.client_id}).then(function(client){$scope.client=client[0]})},$scope.removeCase=function(cases){api("cases")["delete"](cases).then(function(){$scope.cases=_.without($scope.cases,cases),$scope.selCase=$scope.cases[0]})},$scope.showDialog=function(cases){cases?($scope.newCase=cases,$scope.editMode=!0):(delete $scope.newCase,$scope.editMode=!1),api("clients").fetch({client_delete:0}).then(function(clients){$scope.clients=clients}),$uibModal.open({animation:!0,scope:$scope,size:"lg",templateUrl:"scripts/mojrokovnik-cases/cases-dialog.html",controller:casesDialogCtrl}),$scope.data={rivalType:["Tužilac","Tuženi","Poverilac","Dužnik","Usvojilac","Usvojenik","Izvršni poverilac","Izvršni dužnik","Predlagač","Protivnik predlagača","Privatni tužilac","Okrivljeni","Treće lice","Oštećeni"],caseType:["Izvršni postupak","Krivični postupak","Parnični postupak","Prekršajni postupak","Privredno pravo","Upravni postupak i sporovi","Vanparnični postupak","Ostalo"],caseElement:["Bračni spor","Izdržavanje","Kolektivni ugovori  spor","Materinstvo i očinstvo","Naknada štete","Nasledni spor","Obligacioni spor","Platni nalog","Poništaj usvojenja","Privredni spor","Radni spor","Roditeljsko pravo","Smetanje državine","Spor  povreda žiga ili firme","Spor authorskih prava","Spor male vrednosti","Stambeni spor","Svojinski spor","Zaštita od nasilja u porodici","Zaštita prava deteta","Ostalo"]},$scope.getClient=function(client_id){return _.find($scope.clients,function(client){return client.client_id==client_id})},console.log($scope.getClient(1))}}function casesSidenav(){return{controller:casesCtrl,link:function(scope,elem,attr,ctrl){}}}function casesTemplate(){return{link:function(scope,elem,attr,ctrl){}}}function clientsCtrl($scope,api,$uibModal){function clientDialogCtrl($uibModalInstance){$scope.save=function(client){$scope.editMode?api("clients").update(client).then(function(){$scope.editMode=!1,$uibModalInstance.close()}):api("clients").add(client).then(function(){$scope.clients.push(client),$uibModalInstance.close()})},$scope.cancel=function(){$uibModalInstance.dismiss()}}api("clients").fetch({client_delete:0}).then(function(clients){$scope.clients=clients,$scope.sClient=clients[0],api("cases").fetch({client_id:clients[0].client_id}).then(function(cases){$scope.cases=cases})}),$scope.selectClient=function(client){$scope.sClient=client,api("cases").fetch({client_id:client.client_id}).then(function(cases){$scope.cases=cases})},$scope.removeClient=function(client){api("clients")["delete"](client).then(function(){$scope.clients=_.without($scope.clients,client),$scope.sClient=$scope.clients[0]})},$scope.showDialog=function(client){client?($scope.client=client,$scope.editMode=!0):(delete $scope.client,$scope.editMode=!1),$uibModal.open({animation:!0,scope:$scope,templateUrl:"scripts/mojrokovnik-clients/clients-dialog.html",controller:clientDialogCtrl})}}function clientsSidenav(){return{controller:clientsCtrl,link:function(scope,elem,attr,ctrl){}}}function clientsTemplate(){return{link:function(scope,elem,attr,ctrl){}}}function apiService($q,$http,notify){function isOK(response){function isErrData(data){return data&&data._status&&"ERR"===data._status}return response.status>=200&&response.status<300&&!isErrData(response.data)}function http(config){return $q.when(config.url).then(function(url){return config.url=url,$http(config)}).then(function(response){return isOK(response)?response.data:$q.reject(response)})}var api=function(table){return{fetch:function(params){return http({url:"../server/api.php?table="+table,method:"GET",params:params}).then(function(response){return response})},add:function(params){return http({url:"../server/api.php?table="+table,method:"POST",params:params}).then(function(response){return notify.success(response.msg),response})},update:function(params){return http({url:"../server/api.php?table="+table,method:"PUT",params:params}).then(function(response){return notify.success(response.msg),response})},"delete":function(params){return http({url:"../server/api.php?table="+table,method:"DELETE",params:params}).then(function(response){return notify.success(response.msg),response})}}};return api}function mrLoginCtrl($location,$http,$cookies,$scope,notify,api){$scope.login=function(login){$http({url:"../server/mr-login.php",method:"POST",params:login}).then(function(response){response.data.login?api("users").fetch().then(function(user){user&&($cookies.putObject("user",user),$location.url("/clients"))}):notify.error(response.data.msg)})}}function mrMainNavitagion($location,authentification){return{templateUrl:"scripts/mojrokovnik/navigation/navigation.html",link:function(scope){scope.visible=authentification.isLoggedIn(),scope.isCurrentPath=function(value){return $location.$$path===value}}}}function notifyService($mdToast){function showToast(type,text){$mdToast.show({template:'<md-toast class="md-toast '+type+'">'+text+"</md-toast>",position:"top right"})}this.success=function(text){showToast("success",text)},this.warn=function(text){showToast("warn",text)},this.error=function(text){showToast("error",text)}}function datetimePicker(){return{scope:{model:"="},link:function(scope,elem,attr,ctrl){elem.datetimepicker({format:"MMMM Do YYYY, HH:mm",inline:!0,sideBySide:!0,defaultDate:scope.model}),elem.on("dp.change",function(e){scope.model=e.date._d,scope.$apply()})}}}function mojrokovnikAuth(api,$cookies){var self=this;api("users").fetch().then(function(user){user&&(self.user=user)}),this.getUser=function(){return self.user},this.isLoggedIn=function(){return!!$cookies.getObject("user")}}function mojrokovnikConf($routeProvider){$routeProvider.otherwise({redirectTo:"/clients"}),$routeProvider.when("/login",{templateUrl:"scripts/mojrokovnik/login/login.html"}),$routeProvider.when("/clients",{templateUrl:"scripts/mojrokovnik-clients/clients.html"}),$routeProvider.when("/cases",{templateUrl:"scripts/mojrokovnik-cases/cases.html"}),$routeProvider.when("/calendar",{templateUrl:"scripts/mojrokovnik-calendar/calendar.html"})}function calendarTemplate(api){return{controller:calendarCtrl,link:function(scope,element,attr,ctrl){function initializeCalendar(events){element.fullCalendar({header:{left:"prev,next today",center:"title",right:"month,agendaWeek,agendaDay"},height:angular.element("body").height(),firstDay:1,lang:"sr",scrollTime:"08:00:00",defaultView:"agendaWeek",slotDuration:"00:15:00",timezone:"UTC",selectable:!0,editable:!0,eventLimit:!0,events:events,select:function(startDate,endDate){scope.showDialog(startDate,endDate)},eventClick:function(event){scope.showDialog(event.start,event.end,event.data),console.log(event.data)},eventDrop:function(event){scope.showDialog(event.start,event.end,event.data)},eventResize:function(event){scope.showDialog(event.start,event.end,event.data)}})}api("calendars").fetch().then(function(events){var filterEvents=[];return angular.forEach(events,function(item){filterEvents.push({title:item.calendar_name+" - "+item.calendar_comment,start:item.calendar_startDate,end:item.calendar_endDate,data:item})}),initializeCalendar(filterEvents)}),scope.createEvent=function(event){var eventData={title:event.calendar_name+" - "+event.calendar_comment,start:event.calendar_startDate,end:event.calendar_endDate,data:event};element.fullCalendar("renderEvent",eventData,!0),element.fullCalendar("unselect")}}}}function calendarCtrl($scope,$q,$uibModal,api){function calendarDialogCtrl($uibModalInstance){$scope.save=function(calendar){calendar.calendar_startDate=calendar.calendar_startDate._d,calendar.calendar_endDate=moment(calendar.calendar_startDate).add(calendar.calendar_duration,"m")._d,calendar=_.omit(calendar,"calendar_duration"),calendar.calendar_id?api("calendars").update(calendar).then(function(){$uibModalInstance.close()}):api("calendars").add(calendar).then(function(data){calendar.calendar_id=data.id,$scope.createEvent(calendar),$uibModalInstance.close()})},$scope.cancel=function(){$uibModalInstance.dismiss()}}$scope.showDialog=function(startDate,endDate,data){data?($scope.calendar=data,
$scope.calendar.calendar_startDate=startDate,$scope.calendar.calendar_endDate=endDate,$scope.calendar.calendar_duration=(moment(endDate)-moment(startDate))/6e4):$scope.calendar={calendar_startDate:startDate,calendar_endDate:endDate,calendar_duration:(moment(endDate)-moment(startDate))/6e4},$uibModal.open({animation:!0,scope:$scope,templateUrl:"scripts/mojrokovnik-calendar/calendar-dialog.html",controller:calendarDialogCtrl}),$scope.types=[{value:1,name:"Ročište"},{value:2,name:"Obaveza"}];var clients=api("clients").fetch(),cases=api("cases").fetch();$q.all([clients,cases]).then(function(values){$scope.clients=values[0],$scope.cases=values[1]})}}function casesCtrl($scope,api,$uibModal){function casesDialogCtrl($uibModalInstance){$scope.save=function(cases){$scope.editMode?api("cases").update(cases).then(function(){$scope.editMode=!1,$uibModalInstance.close()}):api("cases").add(cases).then(function(){$scope.cases.push(cases),$uibModalInstance.close()})},$scope.cancel=function(){$uibModalInstance.dismiss()}}api("cases").fetch({case_delete:0}).then(function(cases){$scope.cases=cases,$scope.sCase=cases[0],api("clients").fetch({client_id:cases[0].client_id}).then(function(client){$scope.client=client[0]})}),$scope.selectCase=function(ucase){$scope.sCase=ucase,api("clients").fetch({client_id:ucase.client_id}).then(function(client){$scope.client=client[0]})},$scope.removeCase=function(cases){api("cases")["delete"](cases).then(function(){$scope.cases=_.without($scope.cases,cases),$scope.selCase=$scope.cases[0]})},$scope.showDialog=function(cases){cases?($scope.newCase=cases,$scope.editMode=!0):(delete $scope.newCase,$scope.editMode=!1),api("clients").fetch({client_delete:0}).then(function(clients){$scope.clients=clients}),$uibModal.open({animation:!0,scope:$scope,size:"lg",templateUrl:"scripts/mojrokovnik-cases/cases-dialog.html",controller:casesDialogCtrl}),$scope.data={rivalType:["Tužilac","Tuženi","Poverilac","Dužnik","Usvojilac","Usvojenik","Izvršni poverilac","Izvršni dužnik","Predlagač","Protivnik predlagača","Privatni tužilac","Okrivljeni","Treće lice","Oštećeni"],caseType:["Izvršni postupak","Krivični postupak","Parnični postupak","Prekršajni postupak","Privredno pravo","Upravni postupak i sporovi","Vanparnični postupak","Ostalo"],caseElement:["Bračni spor","Izdržavanje","Kolektivni ugovori  spor","Materinstvo i očinstvo","Naknada štete","Nasledni spor","Obligacioni spor","Platni nalog","Poništaj usvojenja","Privredni spor","Radni spor","Roditeljsko pravo","Smetanje državine","Spor  povreda žiga ili firme","Spor authorskih prava","Spor male vrednosti","Stambeni spor","Svojinski spor","Zaštita od nasilja u porodici","Zaštita prava deteta","Ostalo"]},$scope.getClient=function(client_id){return _.find($scope.clients,function(client){return client.client_id==client_id})}}}function casesSidenav(){return{controller:casesCtrl,link:function(scope,elem,attr,ctrl){}}}function casesTemplate(){return{link:function(scope,elem,attr,ctrl){}}}function clientsCtrl($scope,api,$uibModal){function clientDialogCtrl($uibModalInstance){$scope.save=function(client){$scope.editMode?api("clients").update(client).then(function(){$scope.editMode=!1,$uibModalInstance.close()}):api("clients").add(client).then(function(){$scope.clients.push(client),$uibModalInstance.close()})},$scope.cancel=function(){$uibModalInstance.dismiss()}}api("clients").fetch({client_delete:0}).then(function(clients){$scope.clients=clients,$scope.sClient=clients[0],api("cases").fetch({client_id:clients[0].client_id}).then(function(cases){$scope.cases=cases})}),$scope.selectClient=function(client){$scope.sClient=client,api("cases").fetch({client_id:client.client_id}).then(function(cases){$scope.cases=cases})},$scope.removeClient=function(client){api("clients")["delete"](client).then(function(){$scope.clients=_.without($scope.clients,client),$scope.sClient=$scope.clients[0]})},$scope.showDialog=function(client){client?($scope.client=client,$scope.editMode=!0):(delete $scope.client,$scope.editMode=!1),$uibModal.open({animation:!0,scope:$scope,templateUrl:"scripts/mojrokovnik-clients/clients-dialog.html",controller:clientDialogCtrl})}}function clientsSidenav(){return{controller:clientsCtrl,link:function(scope,elem,attr,ctrl){}}}function clientsTemplate(){return{link:function(scope,elem,attr,ctrl){}}}function apiService($q,$http,notify){function isOK(response){function isErrData(data){return data&&data._status&&"ERR"===data._status}return response.status>=200&&response.status<300&&!isErrData(response.data)}function http(config){return $q.when(config.url).then(function(url){return config.url=url,$http(config)}).then(function(response){return isOK(response)?response.data:$q.reject(response)})}var api=function(table){return{fetch:function(params){return http({url:"../server/api.php?table="+table,method:"GET",params:params}).then(function(response){return response})},add:function(params){return http({url:"../server/api.php?table="+table,method:"POST",params:params}).then(function(response){return notify.success(response.msg),response})},update:function(params){return http({url:"../server/api.php?table="+table,method:"PUT",params:params}).then(function(response){return notify.success(response.msg),response})},"delete":function(params){return http({url:"../server/api.php?table="+table,method:"DELETE",params:params}).then(function(response){return notify.success(response.msg),response})}}};return api}function mrLoginCtrl($location,$http,$cookies,$scope,notify,api){$scope.login=function(login){$http({url:"../server/mr-login.php",method:"POST",params:login}).then(function(response){response.data.login?api("users").fetch().then(function(user){user&&($cookies.putObject("user",user),$location.url("/clients"))}):notify.error(response.data.msg)})}}function mrMainNavitagion($location,authentification){return{templateUrl:"scripts/mojrokovnik/navigation/navigation.html",link:function(scope){scope.visible=authentification.isLoggedIn(),scope.isCurrentPath=function(value){return $location.$$path===value}}}}function notifyService($mdToast){function showToast(type,text){$mdToast.show({template:'<md-toast class="md-toast '+type+'">'+text+"</md-toast>",position:"top right"})}this.success=function(text){showToast("success",text)},this.warn=function(text){showToast("warn",text)},this.error=function(text){showToast("error",text)}}function datetimePicker(){return{scope:{model:"="},link:function(scope,elem,attr,ctrl){elem.datetimepicker({format:"MMMM Do YYYY, HH:mm",inline:!0,sideBySide:!0,defaultDate:scope.model}),elem.on("dp.change",function(e){scope.model=e.date._d,scope.$apply()})}}}function mojrokovnikAuth(api,$cookies){var self=this;api("users").fetch().then(function(user){user&&(self.user=user)}),this.getUser=function(){return self.user},this.isLoggedIn=function(){return!!$cookies.getObject("user")}}function mojrokovnikConf($routeProvider){$routeProvider.otherwise({redirectTo:"/clients"}),$routeProvider.when("/login",{templateUrl:"scripts/mojrokovnik/login/login.html"}),$routeProvider.when("/clients",{templateUrl:"scripts/mojrokovnik-clients/clients.html"}),$routeProvider.when("/cases",{templateUrl:"scripts/mojrokovnik-cases/cases.html"}),$routeProvider.when("/calendar",{templateUrl:"scripts/mojrokovnik-calendar/calendar.html"})}function calendarTemplate(api){return{controller:calendarCtrl,link:function(scope,element,attr,ctrl){function initializeCalendar(events){element.fullCalendar({header:{left:"prev,next today",center:"title",right:"month,agendaWeek,agendaDay"},height:angular.element("body").height(),firstDay:1,lang:"sr",scrollTime:"08:00:00",defaultView:"agendaWeek",slotDuration:"00:15:00",timezone:"UTC",selectable:!0,editable:!0,eventLimit:!0,events:events,select:function(startDate,endDate){scope.showDialog(startDate,endDate)},eventClick:function(event){scope.showDialog(event.start,event.end,event.data),console.log(event.data)},eventDrop:function(event){scope.showDialog(event.start,event.end,event.data)},eventResize:function(event){scope.showDialog(event.start,event.end,event.data)}})}api("calendars").fetch().then(function(events){var filterEvents=[];return angular.forEach(events,function(item){filterEvents.push({title:item.calendar_name+" - "+item.calendar_comment,start:item.calendar_startDate,end:item.calendar_endDate,data:item})}),initializeCalendar(filterEvents)}),scope.createEvent=function(event){var eventData={title:event.calendar_name+" - "+event.calendar_comment,start:event.calendar_startDate,end:event.calendar_endDate,data:event};element.fullCalendar("renderEvent",eventData,!0),element.fullCalendar("unselect")}}}}function calendarCtrl($scope,$q,$uibModal,api){function calendarDialogCtrl($uibModalInstance){$scope.save=function(calendar){calendar.calendar_startDate=calendar.calendar_startDate._d,calendar.calendar_endDate=moment(calendar.calendar_startDate).add(calendar.calendar_duration,"m")._d,calendar=_.omit(calendar,"calendar_duration"),calendar.calendar_id?api("calendars").update(calendar).then(function(){$uibModalInstance.close()}):api("calendars").add(calendar).then(function(data){calendar.calendar_id=data.id,$scope.createEvent(calendar),$uibModalInstance.close()})},$scope.cancel=function(){$uibModalInstance.dismiss()}}$scope.showDialog=function(startDate,endDate,data){data?($scope.calendar=data,$scope.calendar.calendar_startDate=startDate,$scope.calendar.calendar_endDate=endDate,$scope.calendar.calendar_duration=(moment(endDate)-moment(startDate))/6e4):$scope.calendar={calendar_startDate:startDate,calendar_endDate:endDate,calendar_duration:(moment(endDate)-moment(startDate))/6e4},$uibModal.open({animation:!0,scope:$scope,templateUrl:"scripts/mojrokovnik-calendar/calendar-dialog.html",controller:calendarDialogCtrl}),$scope.types=[{value:1,name:"Ročište"},{value:2,name:"Obaveza"}];var clients=api("clients").fetch(),cases=api("cases").fetch();$q.all([clients,cases]).then(function(values){$scope.clients=values[0],$scope.cases=values[1]})}}function casesCtrl($scope,api,$uibModal){function casesDialogCtrl($uibModalInstance){$scope.save=function(cases){$scope.editMode?api("cases").update(cases).then(function(){$scope.editMode=!1,$uibModalInstance.close()}):api("cases").add(cases).then(function(){$scope.cases.push(cases),$uibModalInstance.close()})},$scope.cancel=function(){$uibModalInstance.dismiss()}}api("cases").fetch({case_delete:0}).then(function(cases){$scope.cases=cases,$scope.sCase=cases[0],api("clients").fetch({client_id:cases[0].client_id}).then(function(client){$scope.client=client[0]})}),$scope.selectCase=function(ucase){$scope.sCase=ucase,api("clients").fetch({client_id:ucase.client_id}).then(function(client){$scope.client=client[0]})},$scope.removeCase=function(cases){api("cases")["delete"](cases).then(function(){$scope.cases=_.without($scope.cases,cases),$scope.selCase=$scope.cases[0]})},$scope.getClient=function(client_id){return _.find($scope.clients,function(client){return client.client_id==client_id})},$scope.showDialog=function(cases){cases?($scope.newCase=cases,$scope.editMode=!0):(delete $scope.newCase,$scope.editMode=!1),api("clients").fetch({client_delete:0}).then(function(clients){$scope.clients=clients}),$uibModal.open({animation:!0,scope:$scope,size:"lg",templateUrl:"scripts/mojrokovnik-cases/cases-dialog.html",controller:casesDialogCtrl}),$scope.data={rivalType:["Tužilac","Tuženi","Poverilac","Dužnik","Usvojilac","Usvojenik","Izvršni poverilac","Izvršni dužnik","Predlagač","Protivnik predlagača","Privatni tužilac","Okrivljeni","Treće lice","Oštećeni"],caseType:["Izvršni postupak","Krivični postupak","Parnični postupak","Prekršajni postupak","Privredno pravo","Upravni postupak i sporovi","Vanparnični postupak","Ostalo"],caseElement:["Bračni spor","Izdržavanje","Kolektivni ugovori  spor","Materinstvo i očinstvo","Naknada štete","Nasledni spor","Obligacioni spor","Platni nalog","Poništaj usvojenja","Privredni spor","Radni spor","Roditeljsko pravo","Smetanje državine","Spor  povreda žiga ili firme","Spor authorskih prava","Spor male vrednosti","Stambeni spor","Svojinski spor","Zaštita od nasilja u porodici","Zaštita prava deteta","Ostalo"]}}}function casesSidenav(){return{controller:casesCtrl,link:function(scope,elem,attr,ctrl){}}}function casesTemplate(){return{link:function(scope,elem,attr,ctrl){}}}function clientsCtrl($scope,api,$uibModal){function clientDialogCtrl($uibModalInstance){$scope.save=function(client){$scope.editMode?api("clients").update(client).then(function(){$scope.editMode=!1,$uibModalInstance.close()}):api("clients").add(client).then(function(){$scope.clients.push(client),$uibModalInstance.close()})},$scope.cancel=function(){$uibModalInstance.dismiss()}}api("clients").fetch({client_delete:0}).then(function(clients){$scope.clients=clients,$scope.sClient=clients[0],api("cases").fetch({client_id:clients[0].client_id}).then(function(cases){$scope.cases=cases})}),$scope.selectClient=function(client){$scope.sClient=client,api("cases").fetch({client_id:client.client_id}).then(function(cases){$scope.cases=cases})},$scope.removeClient=function(client){api("clients")["delete"](client).then(function(){$scope.clients=_.without($scope.clients,client),$scope.sClient=$scope.clients[0]})},$scope.showDialog=function(client){client?($scope.client=client,$scope.editMode=!0):(delete $scope.client,$scope.editMode=!1),$uibModal.open({animation:!0,scope:$scope,templateUrl:"scripts/mojrokovnik-clients/clients-dialog.html",controller:clientDialogCtrl})}}function clientsSidenav(){return{controller:clientsCtrl,link:function(scope,elem,attr,ctrl){}}}function clientsTemplate(){return{link:function(scope,elem,attr,ctrl){}}}function apiService($q,$http,notify){function isOK(response){function isErrData(data){return data&&data._status&&"ERR"===data._status}return response.status>=200&&response.status<300&&!isErrData(response.data)}function http(config){return $q.when(config.url).then(function(url){return config.url=url,$http(config)}).then(function(response){return isOK(response)?response.data:$q.reject(response)})}var api=function(table){return{fetch:function(params){return http({url:"../server/api.php?table="+table,method:"GET",params:params}).then(function(response){return response})},add:function(params){return http({url:"../server/api.php?table="+table,method:"POST",params:params}).then(function(response){return notify.success(response.msg),response})},update:function(params){return http({url:"../server/api.php?table="+table,method:"PUT",params:params}).then(function(response){return notify.success(response.msg),response})},"delete":function(params){return http({url:"../server/api.php?table="+table,method:"DELETE",params:params}).then(function(response){return notify.success(response.msg),response})}}};return api}function mrLoginCtrl($location,$http,$cookies,$scope,notify,api){$scope.login=function(login){$http({url:"../server/mr-login.php",method:"POST",params:login}).then(function(response){response.data.login?api("users").fetch().then(function(user){user&&($cookies.putObject("user",user),$location.url("/clients"))}):notify.error(response.data.msg)})}}function mrMainNavitagion($location,authentification){return{templateUrl:"scripts/mojrokovnik/navigation/navigation.html",link:function(scope){scope.visible=authentification.isLoggedIn(),scope.isCurrentPath=function(value){return $location.$$path===value}}}}function notifyService($mdToast){function showToast(type,text){$mdToast.show({template:'<md-toast class="md-toast '+type+'">'+text+"</md-toast>",position:"top right"})}this.success=function(text){showToast("success",text)},this.warn=function(text){showToast("warn",text)},this.error=function(text){showToast("error",text)}}function datetimePicker(){return{scope:{model:"="},link:function(scope,elem,attr,ctrl){elem.datetimepicker({format:"MMMM Do YYYY, HH:mm",inline:!0,sideBySide:!0,defaultDate:scope.model}),elem.on("dp.change",function(e){scope.model=e.date._d,scope.$apply()})}}}function mojrokovnikAuth(api,$cookies){var self=this;api("users").fetch().then(function(user){user&&(self.user=user)}),this.getUser=function(){return self.user},this.isLoggedIn=function(){return!!$cookies.getObject("user")}}function mojrokovnikConf($routeProvider){$routeProvider.otherwise({redirectTo:"/clients"}),$routeProvider.when("/login",{templateUrl:"scripts/mojrokovnik/login/login.html"}),$routeProvider.when("/clients",{templateUrl:"scripts/mojrokovnik-clients/clients.html"}),$routeProvider.when("/cases",{templateUrl:"scripts/mojrokovnik-cases/cases.html"}),$routeProvider.when("/calendar",{templateUrl:"scripts/mojrokovnik-calendar/calendar.html"})}function calendarTemplate(api){return{controller:calendarCtrl,link:function(scope,element,attr,ctrl){function initializeCalendar(events){element.fullCalendar({header:{left:"prev,next today",center:"title",right:"month,agendaWeek,agendaDay"},height:angular.element("body").height(),firstDay:1,lang:"sr",scrollTime:"08:00:00",defaultView:"agendaWeek",slotDuration:"00:15:00",timezone:"UTC",selectable:!0,editable:!0,eventLimit:!0,events:events,select:function(startDate,endDate){scope.showDialog(startDate,endDate)},eventClick:function(event){scope.showDialog(event.start,event.end,event.data),console.log(event.data)},eventDrop:function(event){scope.showDialog(event.start,event.end,event.data)},eventResize:function(event){scope.showDialog(event.start,event.end,event.data)}})}api("calendars").fetch().then(function(events){var filterEvents=[];return angular.forEach(events,function(item){filterEvents.push({title:item.calendar_name+" - "+item.calendar_comment,start:item.calendar_startDate,end:item.calendar_endDate,data:item})}),initializeCalendar(filterEvents)}),scope.createEvent=function(event){var eventData={title:event.calendar_name+" - "+event.calendar_comment,start:event.calendar_startDate,end:event.calendar_endDate,data:event};element.fullCalendar("renderEvent",eventData,!0),element.fullCalendar("unselect")}}}}function calendarCtrl($scope,$q,$uibModal,api){function calendarDialogCtrl($uibModalInstance){$scope.save=function(calendar){calendar.calendar_startDate=calendar.calendar_startDate._d,calendar.calendar_endDate=moment(calendar.calendar_startDate).add(calendar.calendar_duration,"m")._d,calendar=_.omit(calendar,"calendar_duration"),calendar.calendar_id?api("calendars").update(calendar).then(function(){$uibModalInstance.close()}):api("calendars").add(calendar).then(function(data){calendar.calendar_id=data.id,$scope.createEvent(calendar),$uibModalInstance.close()})},$scope.cancel=function(){$uibModalInstance.dismiss()}}$scope.showDialog=function(startDate,endDate,data){data?($scope.calendar=data,$scope.calendar.calendar_startDate=startDate,$scope.calendar.calendar_endDate=endDate,$scope.calendar.calendar_duration=(moment(endDate)-moment(startDate))/6e4):$scope.calendar={calendar_startDate:startDate,calendar_endDate:endDate,calendar_duration:(moment(endDate)-moment(startDate))/6e4},$uibModal.open({animation:!0,scope:$scope,templateUrl:"scripts/mojrokovnik-calendar/calendar-dialog.html",controller:calendarDialogCtrl}),$scope.types=[{value:1,name:"Ročište"},{value:2,name:"Obaveza"}];var clients=api("clients").fetch(),cases=api("cases").fetch();$q.all([clients,cases]).then(function(values){$scope.clients=values[0],$scope.cases=values[1]})}}function casesCtrl($scope,api,$uibModal){function casesDialogCtrl($uibModalInstance){$scope.save=function(cases){$scope.editMode?api("cases").update(cases).then(function(){$scope.editMode=!1,$uibModalInstance.close()}):api("cases").add(cases).then(function(){$scope.cases.push(cases),$uibModalInstance.close()})},$scope.cancel=function(){$uibModalInstance.dismiss()}}api("cases").fetch({case_delete:0}).then(function(cases){$scope.cases=cases,$scope.sCase=cases[0],api("clients").fetch({client_id:cases[0].client_id}).then(function(client){$scope.client=client[0]})}),$scope.selectCase=function(ucase){$scope.sCase=ucase,api("clients").fetch({client_id:ucase.client_id}).then(function(client){$scope.client=client[0]})},$scope.removeCase=function(cases){api("cases")["delete"](cases).then(function(){$scope.cases=_.without($scope.cases,cases),$scope.selCase=$scope.cases[0]})},$scope.getClient=function(client_id){return _.find($scope.clients,function(client){client.client_id==client_id})},$scope.showDialog=function(cases){cases?($scope.newCase=cases,$scope.editMode=!0):(delete $scope.newCase,$scope.editMode=!1),api("clients").fetch({client_delete:0}).then(function(clients){$scope.clients=clients}),$uibModal.open({animation:!0,scope:$scope,size:"lg",templateUrl:"scripts/mojrokovnik-cases/cases-dialog.html",controller:casesDialogCtrl}),$scope.data={rivalType:["Tužilac","Tuženi","Poverilac","Dužnik","Usvojilac","Usvojenik","Izvršni poverilac","Izvršni dužnik","Predlagač","Protivnik predlagača","Privatni tužilac","Okrivljeni","Treće lice","Oštećeni"],caseType:["Izvršni postupak","Krivični postupak","Parnični postupak","Prekršajni postupak","Privredno pravo","Upravni postupak i sporovi","Vanparnični postupak","Ostalo"],caseElement:["Bračni spor","Izdržavanje","Kolektivni ugovori  spor","Materinstvo i očinstvo","Naknada štete","Nasledni spor","Obligacioni spor","Platni nalog","Poništaj usvojenja","Privredni spor","Radni spor","Roditeljsko pravo","Smetanje državine","Spor  povreda žiga ili firme","Spor authorskih prava","Spor male vrednosti","Stambeni spor","Svojinski spor","Zaštita od nasilja u porodici","Zaštita prava deteta","Ostalo"]}}}function casesSidenav(){return{controller:casesCtrl,link:function(scope,elem,attr,ctrl){}}}function casesTemplate(){return{link:function(scope,elem,attr,ctrl){}}}function clientsCtrl($scope,api,$uibModal){function clientDialogCtrl($uibModalInstance){$scope.save=function(client){$scope.editMode?api("clients").update(client).then(function(){$scope.editMode=!1,$uibModalInstance.close()}):api("clients").add(client).then(function(){$scope.clients.push(client),$uibModalInstance.close()})},$scope.cancel=function(){$uibModalInstance.dismiss()}}api("clients").fetch({client_delete:0}).then(function(clients){$scope.clients=clients,$scope.sClient=clients[0],api("cases").fetch({client_id:clients[0].client_id}).then(function(cases){$scope.cases=cases})}),$scope.selectClient=function(client){$scope.sClient=client,api("cases").fetch({client_id:client.client_id}).then(function(cases){$scope.cases=cases})},$scope.removeClient=function(client){api("clients")["delete"](client).then(function(){$scope.clients=_.without($scope.clients,client),$scope.sClient=$scope.clients[0]})},$scope.showDialog=function(client){client?($scope.client=client,$scope.editMode=!0):(delete $scope.client,$scope.editMode=!1),$uibModal.open({animation:!0,scope:$scope,templateUrl:"scripts/mojrokovnik-clients/clients-dialog.html",controller:clientDialogCtrl})}}function clientsSidenav(){return{controller:clientsCtrl,link:function(scope,elem,attr,ctrl){}}}function clientsTemplate(){return{link:function(scope,elem,attr,ctrl){}}}function apiService($q,$http,notify){function isOK(response){function isErrData(data){return data&&data._status&&"ERR"===data._status}return response.status>=200&&response.status<300&&!isErrData(response.data)}function http(config){return $q.when(config.url).then(function(url){return config.url=url,$http(config)}).then(function(response){return isOK(response)?response.data:$q.reject(response)})}var api=function(table){return{fetch:function(params){return http({url:"../server/api.php?table="+table,method:"GET",params:params}).then(function(response){return response})},add:function(params){return http({url:"../server/api.php?table="+table,method:"POST",params:params}).then(function(response){return notify.success(response.msg),response})},update:function(params){return http({url:"../server/api.php?table="+table,method:"PUT",params:params}).then(function(response){return notify.success(response.msg),response})},"delete":function(params){return http({url:"../server/api.php?table="+table,method:"DELETE",params:params}).then(function(response){return notify.success(response.msg),response})}}};return api}function mrLoginCtrl($location,$http,$cookies,$scope,notify,api){$scope.login=function(login){$http({url:"../server/mr-login.php",method:"POST",params:login}).then(function(response){response.data.login?api("users").fetch().then(function(user){user&&($cookies.putObject("user",user),$location.url("/clients"))}):notify.error(response.data.msg)})}}function mrMainNavitagion($location,authentification){return{templateUrl:"scripts/mojrokovnik/navigation/navigation.html",link:function(scope){scope.visible=authentification.isLoggedIn(),scope.isCurrentPath=function(value){return $location.$$path===value}}}}function notifyService($mdToast){function showToast(type,text){$mdToast.show({template:'<md-toast class="md-toast '+type+'">'+text+"</md-toast>",position:"top right"})}this.success=function(text){showToast("success",text)},this.warn=function(text){showToast("warn",text)},this.error=function(text){showToast("error",text)}}function datetimePicker(){return{scope:{model:"="},link:function(scope,elem,attr,ctrl){elem.datetimepicker({format:"MMMM Do YYYY, HH:mm",inline:!0,sideBySide:!0,defaultDate:scope.model}),elem.on("dp.change",function(e){scope.model=e.date._d,scope.$apply()})}}}function mojrokovnikAuth(api,$cookies){var self=this;api("users").fetch().then(function(user){user&&(self.user=user)}),this.getUser=function(){return self.user},this.isLoggedIn=function(){return!!$cookies.getObject("user")}}function mojrokovnikConf($routeProvider){$routeProvider.otherwise({redirectTo:"/clients"}),$routeProvider.when("/login",{templateUrl:"scripts/mojrokovnik/login/login.html"}),$routeProvider.when("/clients",{templateUrl:"scripts/mojrokovnik-clients/clients.html"}),$routeProvider.when("/cases",{templateUrl:"scripts/mojrokovnik-cases/cases.html"}),$routeProvider.when("/calendar",{templateUrl:"scripts/mojrokovnik-calendar/calendar.html"})}function calendarTemplate(api){return{controller:calendarCtrl,link:function(scope,element,attr,ctrl){function initializeCalendar(events){element.fullCalendar({header:{left:"prev,next today",center:"title",right:"month,agendaWeek,agendaDay"},height:angular.element("body").height(),firstDay:1,lang:"sr",scrollTime:"08:00:00",defaultView:"agendaWeek",slotDuration:"00:15:00",timezone:"UTC",selectable:!0,editable:!0,eventLimit:!0,events:events,select:function(startDate,endDate){scope.showDialog(startDate,endDate)},eventClick:function(event){scope.showDialog(event.start,event.end,event.data),console.log(event.data)},eventDrop:function(event){scope.showDialog(event.start,event.end,event.data)},eventResize:function(event){scope.showDialog(event.start,event.end,event.data)}})}api("calendars").fetch().then(function(events){var filterEvents=[];return angular.forEach(events,function(item){filterEvents.push({title:item.calendar_name+" - "+item.calendar_comment,start:item.calendar_startDate,end:item.calendar_endDate,data:item})}),initializeCalendar(filterEvents)}),scope.createEvent=function(event){var eventData={title:event.calendar_name+" - "+event.calendar_comment,start:event.calendar_startDate,end:event.calendar_endDate,data:event};element.fullCalendar("renderEvent",eventData,!0),element.fullCalendar("unselect")}}}}function calendarCtrl($scope,$q,$uibModal,api){function calendarDialogCtrl($uibModalInstance){$scope.save=function(calendar){calendar.calendar_startDate=calendar.calendar_startDate._d,calendar.calendar_endDate=moment(calendar.calendar_startDate).add(calendar.calendar_duration,"m")._d,calendar=_.omit(calendar,"calendar_duration"),calendar.calendar_id?api("calendars").update(calendar).then(function(){$uibModalInstance.close()}):api("calendars").add(calendar).then(function(data){calendar.calendar_id=data.id,$scope.createEvent(calendar),$uibModalInstance.close()})},$scope.cancel=function(){$uibModalInstance.dismiss()}}$scope.showDialog=function(startDate,endDate,data){data?($scope.calendar=data,$scope.calendar.calendar_startDate=startDate,$scope.calendar.calendar_endDate=endDate,$scope.calendar.calendar_duration=(moment(endDate)-moment(startDate))/6e4):$scope.calendar={calendar_startDate:startDate,calendar_endDate:endDate,calendar_duration:(moment(endDate)-moment(startDate))/6e4},$uibModal.open({animation:!0,scope:$scope,templateUrl:"scripts/mojrokovnik-calendar/calendar-dialog.html",controller:calendarDialogCtrl}),$scope.types=[{value:1,name:"Ročište"},{value:2,name:"Obaveza"}];var clients=api("clients").fetch(),cases=api("cases").fetch();$q.all([clients,cases]).then(function(values){$scope.clients=values[0],$scope.cases=values[1]})}}function casesCtrl($scope,api,$uibModal){function casesDialogCtrl($uibModalInstance){$scope.save=function(cases){$scope.editMode?api("cases").update(cases).then(function(){$scope.editMode=!1,$uibModalInstance.close()}):api("cases").add(cases).then(function(){$scope.cases.push(cases),$uibModalInstance.close()})},$scope.cancel=function(){$uibModalInstance.dismiss()}}api("clients").fetch({client_id:cases[0].client_id}).then(function(client){$scope.client=client[0]}),api("cases").fetch({case_delete:0}).then(function(cases){$scope.cases=cases,$scope.sCase=cases[0]}),$scope.selectCase=function(ucase){$scope.sCase=ucase,api("clients").fetch({client_id:ucase.client_id}).then(function(client){$scope.client=client[0]})},$scope.removeCase=function(cases){api("cases")["delete"](cases).then(function(){$scope.cases=_.without($scope.cases,cases),$scope.selCase=$scope.cases[0]})},$scope.getClient=function(client_id){return _.find($scope.clients,function(client){client.client_id==client_id})},$scope.showDialog=function(cases){cases?($scope.newCase=cases,$scope.editMode=!0):(delete $scope.newCase,$scope.editMode=!1),api("clients").fetch({client_delete:0}).then(function(clients){$scope.clients=clients}),$uibModal.open({animation:!0,scope:$scope,size:"lg",templateUrl:"scripts/mojrokovnik-cases/cases-dialog.html",controller:casesDialogCtrl}),$scope.data={rivalType:["Tužilac","Tuženi","Poverilac","Dužnik","Usvojilac","Usvojenik","Izvršni poverilac","Izvršni dužnik","Predlagač","Protivnik predlagača","Privatni tužilac","Okrivljeni","Treće lice","Oštećeni"],caseType:["Izvršni postupak","Krivični postupak","Parnični postupak","Prekršajni postupak","Privredno pravo","Upravni postupak i sporovi","Vanparnični postupak","Ostalo"],caseElement:["Bračni spor","Izdržavanje","Kolektivni ugovori  spor","Materinstvo i očinstvo","Naknada štete","Nasledni spor","Obligacioni spor","Platni nalog","Poništaj usvojenja","Privredni spor","Radni spor","Roditeljsko pravo","Smetanje državine","Spor  povreda žiga ili firme","Spor authorskih prava","Spor male vrednosti","Stambeni spor","Svojinski spor","Zaštita od nasilja u porodici","Zaštita prava deteta","Ostalo"]}}}function casesSidenav(){return{controller:casesCtrl,link:function(scope,elem,attr,ctrl){}}}function casesTemplate(){return{link:function(scope,elem,attr,ctrl){}}}function clientsCtrl($scope,api,$uibModal){function clientDialogCtrl($uibModalInstance){$scope.save=function(client){$scope.editMode?api("clients").update(client).then(function(){$scope.editMode=!1,$uibModalInstance.close()}):api("clients").add(client).then(function(){$scope.clients.push(client),$uibModalInstance.close()})},$scope.cancel=function(){$uibModalInstance.dismiss()}}api("clients").fetch({client_delete:0}).then(function(clients){$scope.clients=clients,$scope.sClient=clients[0],api("cases").fetch({client_id:clients[0].client_id}).then(function(cases){$scope.cases=cases})}),$scope.selectClient=function(client){$scope.sClient=client,api("cases").fetch({client_id:client.client_id}).then(function(cases){$scope.cases=cases})},$scope.removeClient=function(client){api("clients")["delete"](client).then(function(){$scope.clients=_.without($scope.clients,client),$scope.sClient=$scope.clients[0]})},$scope.showDialog=function(client){client?($scope.client=client,$scope.editMode=!0):(delete $scope.client,$scope.editMode=!1),$uibModal.open({animation:!0,scope:$scope,templateUrl:"scripts/mojrokovnik-clients/clients-dialog.html",
controller:clientDialogCtrl})}}function clientsSidenav(){return{controller:clientsCtrl,link:function(scope,elem,attr,ctrl){}}}function clientsTemplate(){return{link:function(scope,elem,attr,ctrl){}}}function apiService($q,$http,notify){function isOK(response){function isErrData(data){return data&&data._status&&"ERR"===data._status}return response.status>=200&&response.status<300&&!isErrData(response.data)}function http(config){return $q.when(config.url).then(function(url){return config.url=url,$http(config)}).then(function(response){return isOK(response)?response.data:$q.reject(response)})}var api=function(table){return{fetch:function(params){return http({url:"../server/api.php?table="+table,method:"GET",params:params}).then(function(response){return response})},add:function(params){return http({url:"../server/api.php?table="+table,method:"POST",params:params}).then(function(response){return notify.success(response.msg),response})},update:function(params){return http({url:"../server/api.php?table="+table,method:"PUT",params:params}).then(function(response){return notify.success(response.msg),response})},"delete":function(params){return http({url:"../server/api.php?table="+table,method:"DELETE",params:params}).then(function(response){return notify.success(response.msg),response})}}};return api}function mrLoginCtrl($location,$http,$cookies,$scope,notify,api){$scope.login=function(login){$http({url:"../server/mr-login.php",method:"POST",params:login}).then(function(response){response.data.login?api("users").fetch().then(function(user){user&&($cookies.putObject("user",user),$location.url("/clients"))}):notify.error(response.data.msg)})}}function mrMainNavitagion($location,authentification){return{templateUrl:"scripts/mojrokovnik/navigation/navigation.html",link:function(scope){scope.visible=authentification.isLoggedIn(),scope.isCurrentPath=function(value){return $location.$$path===value}}}}function notifyService($mdToast){function showToast(type,text){$mdToast.show({template:'<md-toast class="md-toast '+type+'">'+text+"</md-toast>",position:"top right"})}this.success=function(text){showToast("success",text)},this.warn=function(text){showToast("warn",text)},this.error=function(text){showToast("error",text)}}function datetimePicker(){return{scope:{model:"="},link:function(scope,elem,attr,ctrl){elem.datetimepicker({format:"MMMM Do YYYY, HH:mm",inline:!0,sideBySide:!0,defaultDate:scope.model}),elem.on("dp.change",function(e){scope.model=e.date._d,scope.$apply()})}}}function mojrokovnikAuth(api,$cookies){var self=this;api("users").fetch().then(function(user){user&&(self.user=user)}),this.getUser=function(){return self.user},this.isLoggedIn=function(){return!!$cookies.getObject("user")}}function mojrokovnikConf($routeProvider){$routeProvider.otherwise({redirectTo:"/clients"}),$routeProvider.when("/login",{templateUrl:"scripts/mojrokovnik/login/login.html"}),$routeProvider.when("/clients",{templateUrl:"scripts/mojrokovnik-clients/clients.html"}),$routeProvider.when("/cases",{templateUrl:"scripts/mojrokovnik-cases/cases.html"}),$routeProvider.when("/calendar",{templateUrl:"scripts/mojrokovnik-calendar/calendar.html"})}function calendarTemplate(api){return{controller:calendarCtrl,link:function(scope,element,attr,ctrl){function initializeCalendar(events){element.fullCalendar({header:{left:"prev,next today",center:"title",right:"month,agendaWeek,agendaDay"},height:angular.element("body").height(),firstDay:1,lang:"sr",scrollTime:"08:00:00",defaultView:"agendaWeek",slotDuration:"00:15:00",timezone:"UTC",selectable:!0,editable:!0,eventLimit:!0,events:events,select:function(startDate,endDate){scope.showDialog(startDate,endDate)},eventClick:function(event){scope.showDialog(event.start,event.end,event.data),console.log(event.data)},eventDrop:function(event){scope.showDialog(event.start,event.end,event.data)},eventResize:function(event){scope.showDialog(event.start,event.end,event.data)}})}api("calendars").fetch().then(function(events){var filterEvents=[];return angular.forEach(events,function(item){filterEvents.push({title:item.calendar_name+" - "+item.calendar_comment,start:item.calendar_startDate,end:item.calendar_endDate,data:item})}),initializeCalendar(filterEvents)}),scope.createEvent=function(event){var eventData={title:event.calendar_name+" - "+event.calendar_comment,start:event.calendar_startDate,end:event.calendar_endDate,data:event};element.fullCalendar("renderEvent",eventData,!0),element.fullCalendar("unselect")}}}}function calendarCtrl($scope,$q,$uibModal,api){function calendarDialogCtrl($uibModalInstance){$scope.save=function(calendar){calendar.calendar_startDate=calendar.calendar_startDate._d,calendar.calendar_endDate=moment(calendar.calendar_startDate).add(calendar.calendar_duration,"m")._d,calendar=_.omit(calendar,"calendar_duration"),calendar.calendar_id?api("calendars").update(calendar).then(function(){$uibModalInstance.close()}):api("calendars").add(calendar).then(function(data){calendar.calendar_id=data.id,$scope.createEvent(calendar),$uibModalInstance.close()})},$scope.cancel=function(){$uibModalInstance.dismiss()}}$scope.showDialog=function(startDate,endDate,data){data?($scope.calendar=data,$scope.calendar.calendar_startDate=startDate,$scope.calendar.calendar_endDate=endDate,$scope.calendar.calendar_duration=(moment(endDate)-moment(startDate))/6e4):$scope.calendar={calendar_startDate:startDate,calendar_endDate:endDate,calendar_duration:(moment(endDate)-moment(startDate))/6e4},$uibModal.open({animation:!0,scope:$scope,templateUrl:"scripts/mojrokovnik-calendar/calendar-dialog.html",controller:calendarDialogCtrl}),$scope.types=[{value:1,name:"Ročište"},{value:2,name:"Obaveza"}];var clients=api("clients").fetch(),cases=api("cases").fetch();$q.all([clients,cases]).then(function(values){$scope.clients=values[0],$scope.cases=values[1]})}}function casesCtrl($scope,api,$uibModal){function casesDialogCtrl($uibModalInstance){$scope.save=function(cases){$scope.editMode?api("cases").update(cases).then(function(){$scope.editMode=!1,$uibModalInstance.close()}):api("cases").add(cases).then(function(){$scope.cases.push(cases),$uibModalInstance.close()})},$scope.cancel=function(){$uibModalInstance.dismiss()}}api("clients").fetch({client_delete:0}).then(function(clients){$scope.clients=clients}),api("cases").fetch({case_delete:0}).then(function(cases){$scope.cases=cases,$scope.sCase=cases[0]}),$scope.selectCase=function(ucase){$scope.sCase=ucase,api("clients").fetch({client_id:ucase.client_id}).then(function(client){$scope.client=client[0]})},$scope.removeCase=function(cases){api("cases")["delete"](cases).then(function(){$scope.cases=_.without($scope.cases,cases),$scope.selCase=$scope.cases[0]})},$scope.getClient=function(client_id){return _.find($scope.clients,function(client){client.client_id==client_id})},$scope.showDialog=function(cases){cases?($scope.newCase=cases,$scope.editMode=!0):(delete $scope.newCase,$scope.editMode=!1),api("clients").fetch({client_delete:0}).then(function(clients){$scope.clients=clients}),$uibModal.open({animation:!0,scope:$scope,size:"lg",templateUrl:"scripts/mojrokovnik-cases/cases-dialog.html",controller:casesDialogCtrl}),$scope.data={rivalType:["Tužilac","Tuženi","Poverilac","Dužnik","Usvojilac","Usvojenik","Izvršni poverilac","Izvršni dužnik","Predlagač","Protivnik predlagača","Privatni tužilac","Okrivljeni","Treće lice","Oštećeni"],caseType:["Izvršni postupak","Krivični postupak","Parnični postupak","Prekršajni postupak","Privredno pravo","Upravni postupak i sporovi","Vanparnični postupak","Ostalo"],caseElement:["Bračni spor","Izdržavanje","Kolektivni ugovori  spor","Materinstvo i očinstvo","Naknada štete","Nasledni spor","Obligacioni spor","Platni nalog","Poništaj usvojenja","Privredni spor","Radni spor","Roditeljsko pravo","Smetanje državine","Spor  povreda žiga ili firme","Spor authorskih prava","Spor male vrednosti","Stambeni spor","Svojinski spor","Zaštita od nasilja u porodici","Zaštita prava deteta","Ostalo"]}}}function casesSidenav(){return{controller:casesCtrl,link:function(scope,elem,attr,ctrl){}}}function casesTemplate(){return{link:function(scope,elem,attr,ctrl){}}}function clientsCtrl($scope,api,$uibModal){function clientDialogCtrl($uibModalInstance){$scope.save=function(client){$scope.editMode?api("clients").update(client).then(function(){$scope.editMode=!1,$uibModalInstance.close()}):api("clients").add(client).then(function(){$scope.clients.push(client),$uibModalInstance.close()})},$scope.cancel=function(){$uibModalInstance.dismiss()}}api("clients").fetch({client_delete:0}).then(function(clients){$scope.clients=clients,$scope.sClient=clients[0],api("cases").fetch({client_id:clients[0].client_id}).then(function(cases){$scope.cases=cases})}),$scope.selectClient=function(client){$scope.sClient=client,api("cases").fetch({client_id:client.client_id}).then(function(cases){$scope.cases=cases})},$scope.removeClient=function(client){api("clients")["delete"](client).then(function(){$scope.clients=_.without($scope.clients,client),$scope.sClient=$scope.clients[0]})},$scope.showDialog=function(client){client?($scope.client=client,$scope.editMode=!0):(delete $scope.client,$scope.editMode=!1),$uibModal.open({animation:!0,scope:$scope,templateUrl:"scripts/mojrokovnik-clients/clients-dialog.html",controller:clientDialogCtrl})}}function clientsSidenav(){return{controller:clientsCtrl,link:function(scope,elem,attr,ctrl){}}}function clientsTemplate(){return{link:function(scope,elem,attr,ctrl){}}}function apiService($q,$http,notify){function isOK(response){function isErrData(data){return data&&data._status&&"ERR"===data._status}return response.status>=200&&response.status<300&&!isErrData(response.data)}function http(config){return $q.when(config.url).then(function(url){return config.url=url,$http(config)}).then(function(response){return isOK(response)?response.data:$q.reject(response)})}var api=function(table){return{fetch:function(params){return http({url:"../server/api.php?table="+table,method:"GET",params:params}).then(function(response){return response})},add:function(params){return http({url:"../server/api.php?table="+table,method:"POST",params:params}).then(function(response){return notify.success(response.msg),response})},update:function(params){return http({url:"../server/api.php?table="+table,method:"PUT",params:params}).then(function(response){return notify.success(response.msg),response})},"delete":function(params){return http({url:"../server/api.php?table="+table,method:"DELETE",params:params}).then(function(response){return notify.success(response.msg),response})}}};return api}function mrLoginCtrl($location,$http,$cookies,$scope,notify,api){$scope.login=function(login){$http({url:"../server/mr-login.php",method:"POST",params:login}).then(function(response){response.data.login?api("users").fetch().then(function(user){user&&($cookies.putObject("user",user),$location.url("/clients"))}):notify.error(response.data.msg)})}}function mrMainNavitagion($location,authentification){return{templateUrl:"scripts/mojrokovnik/navigation/navigation.html",link:function(scope){scope.visible=authentification.isLoggedIn(),scope.isCurrentPath=function(value){return $location.$$path===value}}}}function notifyService($mdToast){function showToast(type,text){$mdToast.show({template:'<md-toast class="md-toast '+type+'">'+text+"</md-toast>",position:"top right"})}this.success=function(text){showToast("success",text)},this.warn=function(text){showToast("warn",text)},this.error=function(text){showToast("error",text)}}function datetimePicker(){return{scope:{model:"="},link:function(scope,elem,attr,ctrl){elem.datetimepicker({format:"MMMM Do YYYY, HH:mm",inline:!0,sideBySide:!0,defaultDate:scope.model}),elem.on("dp.change",function(e){scope.model=e.date._d,scope.$apply()})}}}function mojrokovnikAuth(api,$cookies){var self=this;api("users").fetch().then(function(user){user&&(self.user=user)}),this.getUser=function(){return self.user},this.isLoggedIn=function(){return!!$cookies.getObject("user")}}function mojrokovnikConf($routeProvider){$routeProvider.otherwise({redirectTo:"/clients"}),$routeProvider.when("/login",{templateUrl:"scripts/mojrokovnik/login/login.html"}),$routeProvider.when("/clients",{templateUrl:"scripts/mojrokovnik-clients/clients.html"}),$routeProvider.when("/cases",{templateUrl:"scripts/mojrokovnik-cases/cases.html"}),$routeProvider.when("/calendar",{templateUrl:"scripts/mojrokovnik-calendar/calendar.html"})}function calendarTemplate(api){return{controller:calendarCtrl,link:function(scope,element,attr,ctrl){function initializeCalendar(events){element.fullCalendar({header:{left:"prev,next today",center:"title",right:"month,agendaWeek,agendaDay"},height:angular.element("body").height(),firstDay:1,lang:"sr",scrollTime:"08:00:00",defaultView:"agendaWeek",slotDuration:"00:15:00",timezone:"UTC",selectable:!0,editable:!0,eventLimit:!0,events:events,select:function(startDate,endDate){scope.showDialog(startDate,endDate)},eventClick:function(event){scope.showDialog(event.start,event.end,event.data),console.log(event.data)},eventDrop:function(event){scope.showDialog(event.start,event.end,event.data)},eventResize:function(event){scope.showDialog(event.start,event.end,event.data)}})}api("calendars").fetch().then(function(events){var filterEvents=[];return angular.forEach(events,function(item){filterEvents.push({title:item.calendar_name+" - "+item.calendar_comment,start:item.calendar_startDate,end:item.calendar_endDate,data:item})}),initializeCalendar(filterEvents)}),scope.createEvent=function(event){var eventData={title:event.calendar_name+" - "+event.calendar_comment,start:event.calendar_startDate,end:event.calendar_endDate,data:event};element.fullCalendar("renderEvent",eventData,!0),element.fullCalendar("unselect")}}}}function calendarCtrl($scope,$q,$uibModal,api){function calendarDialogCtrl($uibModalInstance){$scope.save=function(calendar){calendar.calendar_startDate=calendar.calendar_startDate._d,calendar.calendar_endDate=moment(calendar.calendar_startDate).add(calendar.calendar_duration,"m")._d,calendar=_.omit(calendar,"calendar_duration"),calendar.calendar_id?api("calendars").update(calendar).then(function(){$uibModalInstance.close()}):api("calendars").add(calendar).then(function(data){calendar.calendar_id=data.id,$scope.createEvent(calendar),$uibModalInstance.close()})},$scope.cancel=function(){$uibModalInstance.dismiss()}}$scope.showDialog=function(startDate,endDate,data){data?($scope.calendar=data,$scope.calendar.calendar_startDate=startDate,$scope.calendar.calendar_endDate=endDate,$scope.calendar.calendar_duration=(moment(endDate)-moment(startDate))/6e4):$scope.calendar={calendar_startDate:startDate,calendar_endDate:endDate,calendar_duration:(moment(endDate)-moment(startDate))/6e4},$uibModal.open({animation:!0,scope:$scope,templateUrl:"scripts/mojrokovnik-calendar/calendar-dialog.html",controller:calendarDialogCtrl}),$scope.types=[{value:1,name:"Ročište"},{value:2,name:"Obaveza"}];var clients=api("clients").fetch(),cases=api("cases").fetch();$q.all([clients,cases]).then(function(values){$scope.clients=values[0],$scope.cases=values[1]})}}function casesCtrl($scope,api,$uibModal){function casesDialogCtrl($uibModalInstance){$scope.save=function(cases){$scope.editMode?api("cases").update(cases).then(function(){$scope.editMode=!1,$uibModalInstance.close()}):api("cases").add(cases).then(function(){$scope.cases.push(cases),$uibModalInstance.close()})},$scope.cancel=function(){$uibModalInstance.dismiss()}}api("clients").fetch({client_delete:0}).then(function(clients){$scope.clients=clients}),api("cases").fetch({case_delete:0}).then(function(cases){$scope.cases=cases,$scope.sCase=cases[0]}),$scope.selectCase=function(ucase){$scope.sCase=ucase,$scope.client=$scope.getClient(ucase.client_id)},$scope.removeCase=function(cases){api("cases")["delete"](cases).then(function(){$scope.cases=_.without($scope.cases,cases),$scope.selCase=$scope.cases[0]})},$scope.getClient=function(client_id){return _.find($scope.clients,function(client){client.client_id==client_id})},$scope.showDialog=function(cases){cases?($scope.newCase=cases,$scope.editMode=!0):(delete $scope.newCase,$scope.editMode=!1),api("clients").fetch({client_delete:0}).then(function(clients){$scope.clients=clients}),$uibModal.open({animation:!0,scope:$scope,size:"lg",templateUrl:"scripts/mojrokovnik-cases/cases-dialog.html",controller:casesDialogCtrl}),$scope.data={rivalType:["Tužilac","Tuženi","Poverilac","Dužnik","Usvojilac","Usvojenik","Izvršni poverilac","Izvršni dužnik","Predlagač","Protivnik predlagača","Privatni tužilac","Okrivljeni","Treće lice","Oštećeni"],caseType:["Izvršni postupak","Krivični postupak","Parnični postupak","Prekršajni postupak","Privredno pravo","Upravni postupak i sporovi","Vanparnični postupak","Ostalo"],caseElement:["Bračni spor","Izdržavanje","Kolektivni ugovori  spor","Materinstvo i očinstvo","Naknada štete","Nasledni spor","Obligacioni spor","Platni nalog","Poništaj usvojenja","Privredni spor","Radni spor","Roditeljsko pravo","Smetanje državine","Spor  povreda žiga ili firme","Spor authorskih prava","Spor male vrednosti","Stambeni spor","Svojinski spor","Zaštita od nasilja u porodici","Zaštita prava deteta","Ostalo"]}}}function casesSidenav(){return{controller:casesCtrl,link:function(scope,elem,attr,ctrl){}}}function casesTemplate(){return{link:function(scope,elem,attr,ctrl){}}}function clientsCtrl($scope,api,$uibModal){function clientDialogCtrl($uibModalInstance){$scope.save=function(client){$scope.editMode?api("clients").update(client).then(function(){$scope.editMode=!1,$uibModalInstance.close()}):api("clients").add(client).then(function(){$scope.clients.push(client),$uibModalInstance.close()})},$scope.cancel=function(){$uibModalInstance.dismiss()}}api("clients").fetch({client_delete:0}).then(function(clients){$scope.clients=clients,$scope.sClient=clients[0],api("cases").fetch({client_id:clients[0].client_id}).then(function(cases){$scope.cases=cases})}),$scope.selectClient=function(client){$scope.sClient=client,api("cases").fetch({client_id:client.client_id}).then(function(cases){$scope.cases=cases})},$scope.removeClient=function(client){api("clients")["delete"](client).then(function(){$scope.clients=_.without($scope.clients,client),$scope.sClient=$scope.clients[0]})},$scope.showDialog=function(client){client?($scope.client=client,$scope.editMode=!0):(delete $scope.client,$scope.editMode=!1),$uibModal.open({animation:!0,scope:$scope,templateUrl:"scripts/mojrokovnik-clients/clients-dialog.html",controller:clientDialogCtrl})}}function clientsSidenav(){return{controller:clientsCtrl,link:function(scope,elem,attr,ctrl){}}}function clientsTemplate(){return{link:function(scope,elem,attr,ctrl){}}}function apiService($q,$http,notify){function isOK(response){function isErrData(data){return data&&data._status&&"ERR"===data._status}return response.status>=200&&response.status<300&&!isErrData(response.data)}function http(config){return $q.when(config.url).then(function(url){return config.url=url,$http(config)}).then(function(response){return isOK(response)?response.data:$q.reject(response)})}var api=function(table){return{fetch:function(params){return http({url:"../server/api.php?table="+table,method:"GET",params:params}).then(function(response){return response})},add:function(params){return http({url:"../server/api.php?table="+table,method:"POST",params:params}).then(function(response){return notify.success(response.msg),response})},update:function(params){return http({url:"../server/api.php?table="+table,method:"PUT",params:params}).then(function(response){return notify.success(response.msg),response})},"delete":function(params){return http({url:"../server/api.php?table="+table,method:"DELETE",params:params}).then(function(response){return notify.success(response.msg),response})}}};return api}function mrLoginCtrl($location,$http,$cookies,$scope,notify,api){$scope.login=function(login){$http({url:"../server/mr-login.php",method:"POST",params:login}).then(function(response){response.data.login?api("users").fetch().then(function(user){user&&($cookies.putObject("user",user),$location.url("/clients"))}):notify.error(response.data.msg)})}}function mrMainNavitagion($location,authentification){return{templateUrl:"scripts/mojrokovnik/navigation/navigation.html",link:function(scope){scope.visible=authentification.isLoggedIn(),scope.isCurrentPath=function(value){return $location.$$path===value}}}}function notifyService($mdToast){function showToast(type,text){$mdToast.show({template:'<md-toast class="md-toast '+type+'">'+text+"</md-toast>",position:"top right"})}this.success=function(text){showToast("success",text)},this.warn=function(text){showToast("warn",text)},this.error=function(text){showToast("error",text)}}function datetimePicker(){return{scope:{model:"="},link:function(scope,elem,attr,ctrl){elem.datetimepicker({format:"MMMM Do YYYY, HH:mm",inline:!0,sideBySide:!0,defaultDate:scope.model}),elem.on("dp.change",function(e){scope.model=e.date._d,scope.$apply()})}}}function mojrokovnikAuth(api,$cookies){var self=this;api("users").fetch().then(function(user){user&&(self.user=user)}),this.getUser=function(){return self.user},this.isLoggedIn=function(){return!!$cookies.getObject("user")}}function mojrokovnikConf($routeProvider){$routeProvider.otherwise({redirectTo:"/clients"}),$routeProvider.when("/login",{templateUrl:"scripts/mojrokovnik/login/login.html"}),$routeProvider.when("/clients",{templateUrl:"scripts/mojrokovnik-clients/clients.html"}),$routeProvider.when("/cases",{templateUrl:"scripts/mojrokovnik-cases/cases.html"}),$routeProvider.when("/calendar",{templateUrl:"scripts/mojrokovnik-calendar/calendar.html"})}function calendarTemplate(api){return{controller:calendarCtrl,link:function(scope,element,attr,ctrl){function initializeCalendar(events){element.fullCalendar({header:{left:"prev,next today",center:"title",right:"month,agendaWeek,agendaDay"},height:angular.element("body").height(),firstDay:1,lang:"sr",scrollTime:"08:00:00",defaultView:"agendaWeek",slotDuration:"00:15:00",timezone:"UTC",selectable:!0,editable:!0,eventLimit:!0,events:events,select:function(startDate,endDate){scope.showDialog(startDate,endDate)},eventClick:function(event){scope.showDialog(event.start,event.end,event.data),console.log(event.data)},eventDrop:function(event){scope.showDialog(event.start,event.end,event.data)},eventResize:function(event){scope.showDialog(event.start,event.end,event.data)}})}api("calendars").fetch().then(function(events){var filterEvents=[];return angular.forEach(events,function(item){filterEvents.push({title:item.calendar_name+" - "+item.calendar_comment,start:item.calendar_startDate,end:item.calendar_endDate,data:item})}),initializeCalendar(filterEvents)}),scope.createEvent=function(event){var eventData={title:event.calendar_name+" - "+event.calendar_comment,start:event.calendar_startDate,end:event.calendar_endDate,data:event};element.fullCalendar("renderEvent",eventData,!0),element.fullCalendar("unselect")}}}}function calendarCtrl($scope,$q,$uibModal,api){function calendarDialogCtrl($uibModalInstance){$scope.save=function(calendar){calendar.calendar_startDate=calendar.calendar_startDate._d,calendar.calendar_endDate=moment(calendar.calendar_startDate).add(calendar.calendar_duration,"m")._d,calendar=_.omit(calendar,"calendar_duration"),calendar.calendar_id?api("calendars").update(calendar).then(function(){$uibModalInstance.close()}):api("calendars").add(calendar).then(function(data){calendar.calendar_id=data.id,$scope.createEvent(calendar),$uibModalInstance.close()})},$scope.cancel=function(){$uibModalInstance.dismiss()}}$scope.showDialog=function(startDate,endDate,data){data?($scope.calendar=data,$scope.calendar.calendar_startDate=startDate,$scope.calendar.calendar_endDate=endDate,$scope.calendar.calendar_duration=(moment(endDate)-moment(startDate))/6e4):$scope.calendar={calendar_startDate:startDate,calendar_endDate:endDate,calendar_duration:(moment(endDate)-moment(startDate))/6e4},$uibModal.open({animation:!0,scope:$scope,templateUrl:"scripts/mojrokovnik-calendar/calendar-dialog.html",controller:calendarDialogCtrl}),$scope.types=[{value:1,name:"Ročište"},{value:2,name:"Obaveza"}];var clients=api("clients").fetch(),cases=api("cases").fetch();$q.all([clients,cases]).then(function(values){$scope.clients=values[0],$scope.cases=values[1]})}}function casesCtrl($scope,api,$uibModal){function casesDialogCtrl($uibModalInstance){$scope.save=function(cases){$scope.editMode?api("cases").update(cases).then(function(){$scope.editMode=!1,$uibModalInstance.close()}):api("cases").add(cases).then(function(){$scope.cases.push(cases),$uibModalInstance.close()})},$scope.cancel=function(){$uibModalInstance.dismiss()}}api("clients").fetch({client_delete:0}).then(function(clients){$scope.clients=clients}),api("cases").fetch({case_delete:0}).then(function(cases){$scope.cases=cases,$scope.sCase=cases[0]}),$scope.selectCase=function(ucase){$scope.sCase=ucase,$scope.client=$scope.getClient(ucase.client_id)},$scope.removeCase=function(cases){api("cases")["delete"](cases).then(function(){$scope.cases=_.without($scope.cases,cases),$scope.selCase=$scope.cases[0]})},$scope.getClient=function(client_id){return _.find($scope.clients,function(client){client.client_id==client_id})},$scope.showDialog=function(cases){cases?($scope.newCase=cases,$scope.editMode=!0):(delete $scope.newCase,$scope.editMode=!1),$uibModal.open({animation:!0,scope:$scope,size:"lg",templateUrl:"scripts/mojrokovnik-cases/cases-dialog.html",controller:casesDialogCtrl}),$scope.data={rivalType:["Tužilac","Tuženi","Poverilac","Dužnik","Usvojilac","Usvojenik","Izvršni poverilac","Izvršni dužnik","Predlagač","Protivnik predlagača","Privatni tužilac","Okrivljeni","Treće lice","Oštećeni"],caseType:["Izvršni postupak","Krivični postupak","Parnični postupak","Prekršajni postupak","Privredno pravo","Upravni postupak i sporovi","Vanparnični postupak","Ostalo"],caseElement:["Bračni spor","Izdržavanje","Kolektivni ugovori  spor","Materinstvo i očinstvo","Naknada štete","Nasledni spor","Obligacioni spor","Platni nalog","Poništaj usvojenja","Privredni spor","Radni spor","Roditeljsko pravo","Smetanje državine","Spor  povreda žiga ili firme","Spor authorskih prava","Spor male vrednosti","Stambeni spor","Svojinski spor","Zaštita od nasilja u porodici","Zaštita prava deteta","Ostalo"]}}}function casesSidenav(){return{controller:casesCtrl,link:function(scope,elem,attr,ctrl){}}}function casesTemplate(){return{link:function(scope,elem,attr,ctrl){}}}function clientsCtrl($scope,api,$uibModal){function clientDialogCtrl($uibModalInstance){$scope.save=function(client){$scope.editMode?api("clients").update(client).then(function(){$scope.editMode=!1,$uibModalInstance.close()}):api("clients").add(client).then(function(){$scope.clients.push(client),$uibModalInstance.close()})},$scope.cancel=function(){$uibModalInstance.dismiss()}}api("clients").fetch({client_delete:0}).then(function(clients){$scope.clients=clients,$scope.sClient=clients[0],api("cases").fetch({client_id:clients[0].client_id}).then(function(cases){$scope.cases=cases})}),$scope.selectClient=function(client){$scope.sClient=client,api("cases").fetch({client_id:client.client_id}).then(function(cases){$scope.cases=cases})},$scope.removeClient=function(client){api("clients")["delete"](client).then(function(){$scope.clients=_.without($scope.clients,client),$scope.sClient=$scope.clients[0]})},$scope.showDialog=function(client){client?($scope.client=client,$scope.editMode=!0):(delete $scope.client,$scope.editMode=!1),$uibModal.open({animation:!0,scope:$scope,templateUrl:"scripts/mojrokovnik-clients/clients-dialog.html",controller:clientDialogCtrl})}}function clientsSidenav(){return{controller:clientsCtrl,link:function(scope,elem,attr,ctrl){}}}function clientsTemplate(){return{link:function(scope,elem,attr,ctrl){}}}function apiService($q,$http,notify){function isOK(response){function isErrData(data){return data&&data._status&&"ERR"===data._status}return response.status>=200&&response.status<300&&!isErrData(response.data)}function http(config){return $q.when(config.url).then(function(url){return config.url=url,$http(config)}).then(function(response){return isOK(response)?response.data:$q.reject(response)})}var api=function(table){return{fetch:function(params){return http({url:"../server/api.php?table="+table,method:"GET",params:params}).then(function(response){return response})},add:function(params){return http({url:"../server/api.php?table="+table,method:"POST",params:params}).then(function(response){return notify.success(response.msg),response})},update:function(params){return http({url:"../server/api.php?table="+table,method:"PUT",params:params}).then(function(response){return notify.success(response.msg),response})},"delete":function(params){return http({url:"../server/api.php?table="+table,method:"DELETE",params:params}).then(function(response){return notify.success(response.msg),response})}}};return api}function mrLoginCtrl($location,$http,$cookies,$scope,notify,api){$scope.login=function(login){$http({url:"../server/mr-login.php",method:"POST",params:login}).then(function(response){response.data.login?api("users").fetch().then(function(user){user&&($cookies.putObject("user",user),$location.url("/clients"))}):notify.error(response.data.msg)})}}function mrMainNavitagion($location,authentification){return{templateUrl:"scripts/mojrokovnik/navigation/navigation.html",link:function(scope){scope.visible=authentification.isLoggedIn(),scope.isCurrentPath=function(value){return $location.$$path===value}}}}function notifyService($mdToast){function showToast(type,text){$mdToast.show({template:'<md-toast class="md-toast '+type+'">'+text+"</md-toast>",position:"top right"})}this.success=function(text){showToast("success",text)},this.warn=function(text){showToast("warn",text)},this.error=function(text){showToast("error",text)}}function datetimePicker(){return{scope:{model:"="},link:function(scope,elem,attr,ctrl){elem.datetimepicker({format:"MMMM Do YYYY, HH:mm",inline:!0,sideBySide:!0,defaultDate:scope.model}),elem.on("dp.change",function(e){scope.model=e.date._d,scope.$apply()})}}}function mojrokovnikAuth(api,$cookies){var self=this;api("users").fetch().then(function(user){user&&(self.user=user)}),this.getUser=function(){return self.user},this.isLoggedIn=function(){return!!$cookies.getObject("user")}}function mojrokovnikConf($routeProvider){$routeProvider.otherwise({redirectTo:"/clients"}),$routeProvider.when("/login",{templateUrl:"scripts/mojrokovnik/login/login.html"}),$routeProvider.when("/clients",{templateUrl:"scripts/mojrokovnik-clients/clients.html"}),$routeProvider.when("/cases",{templateUrl:"scripts/mojrokovnik-cases/cases.html"}),$routeProvider.when("/calendar",{templateUrl:"scripts/mojrokovnik-calendar/calendar.html"})}function calendarTemplate(api){return{controller:calendarCtrl,link:function(scope,element,attr,ctrl){function initializeCalendar(events){element.fullCalendar({header:{left:"prev,next today",center:"title",right:"month,agendaWeek,agendaDay"},height:angular.element("body").height(),firstDay:1,lang:"sr",scrollTime:"08:00:00",defaultView:"agendaWeek",slotDuration:"00:15:00",timezone:"UTC",selectable:!0,editable:!0,eventLimit:!0,events:events,select:function(startDate,endDate){scope.showDialog(startDate,endDate)},eventClick:function(event){scope.showDialog(event.start,event.end,event.data),console.log(event.data)},eventDrop:function(event){scope.showDialog(event.start,event.end,event.data)},eventResize:function(event){scope.showDialog(event.start,event.end,event.data)}})}api("calendars").fetch().then(function(events){var filterEvents=[];return angular.forEach(events,function(item){filterEvents.push({title:item.calendar_name+" - "+item.calendar_comment,start:item.calendar_startDate,end:item.calendar_endDate,data:item})}),initializeCalendar(filterEvents)}),scope.createEvent=function(event){var eventData={title:event.calendar_name+" - "+event.calendar_comment,
start:event.calendar_startDate,end:event.calendar_endDate,data:event};element.fullCalendar("renderEvent",eventData,!0),element.fullCalendar("unselect")}}}}function calendarCtrl($scope,$q,$uibModal,api){function calendarDialogCtrl($uibModalInstance){$scope.save=function(calendar){calendar.calendar_startDate=calendar.calendar_startDate._d,calendar.calendar_endDate=moment(calendar.calendar_startDate).add(calendar.calendar_duration,"m")._d,calendar=_.omit(calendar,"calendar_duration"),calendar.calendar_id?api("calendars").update(calendar).then(function(){$uibModalInstance.close()}):api("calendars").add(calendar).then(function(data){calendar.calendar_id=data.id,$scope.createEvent(calendar),$uibModalInstance.close()})},$scope.cancel=function(){$uibModalInstance.dismiss()}}$scope.showDialog=function(startDate,endDate,data){data?($scope.calendar=data,$scope.calendar.calendar_startDate=startDate,$scope.calendar.calendar_endDate=endDate,$scope.calendar.calendar_duration=(moment(endDate)-moment(startDate))/6e4):$scope.calendar={calendar_startDate:startDate,calendar_endDate:endDate,calendar_duration:(moment(endDate)-moment(startDate))/6e4},$uibModal.open({animation:!0,scope:$scope,templateUrl:"scripts/mojrokovnik-calendar/calendar-dialog.html",controller:calendarDialogCtrl}),$scope.types=[{value:1,name:"Ročište"},{value:2,name:"Obaveza"}];var clients=api("clients").fetch(),cases=api("cases").fetch();$q.all([clients,cases]).then(function(values){$scope.clients=values[0],$scope.cases=values[1]})}}function casesCtrl($scope,api,$uibModal){function casesDialogCtrl($uibModalInstance){$scope.save=function(cases){$scope.editMode?api("cases").update(cases).then(function(){$scope.editMode=!1,$uibModalInstance.close()}):api("cases").add(cases).then(function(){$scope.cases.push(cases),$uibModalInstance.close()})},$scope.cancel=function(){$uibModalInstance.dismiss()}}api("clients").fetch({client_delete:0}).then(function(clients){$scope.clients=clients}),api("cases").fetch({case_delete:0}).then(function(cases){$scope.cases=cases,$scope.sCase=cases[0]}),$scope.selectCase=function(ucase){$scope.sCase=ucase,$scope.client=$scope.getClient(ucase.client_id)},$scope.removeCase=function(cases){api("cases")["delete"](cases).then(function(){$scope.cases=_.without($scope.cases,cases),$scope.selCase=$scope.cases[0]})},$scope.getClient=function(client_id){return _.find($scope.clients,function(client){client.client_id==client_id})},$scope.showDialog=function(cases){cases?($scope.newCase=cases,$scope.editMode=!0):(delete $scope.newCase,$scope.editMode=!1),$uibModal.open({animation:!0,scope:$scope,size:"lg",templateUrl:"scripts/mojrokovnik-cases/cases-dialog.html",controller:casesDialogCtrl}),$scope.data={rivalType:["Tužilac","Tuženi","Poverilac","Dužnik","Usvojilac","Usvojenik","Izvršni poverilac","Izvršni dužnik","Predlagač","Protivnik predlagača","Privatni tužilac","Okrivljeni","Treće lice","Oštećeni"],caseType:["Izvršni postupak","Krivični postupak","Parnični postupak","Prekršajni postupak","Privredno pravo","Upravni postupak i sporovi","Vanparnični postupak","Ostalo"],caseElement:["Bračni spor","Izdržavanje","Kolektivni ugovori  spor","Materinstvo i očinstvo","Naknada štete","Nasledni spor","Obligacioni spor","Platni nalog","Poništaj usvojenja","Privredni spor","Radni spor","Roditeljsko pravo","Smetanje državine","Spor  povreda žiga ili firme","Spor authorskih prava","Spor male vrednosti","Stambeni spor","Svojinski spor","Zaštita od nasilja u porodici","Zaštita prava deteta","Ostalo"]}}}function casesSidenav(){return{controller:casesCtrl,link:function(scope,elem,attr,ctrl){}}}function casesTemplate(){return{link:function(scope,elem,attr,ctrl){}}}function clientsCtrl($scope,api,$uibModal){function clientDialogCtrl($uibModalInstance){$scope.save=function(client){$scope.editMode?api("clients").update(client).then(function(){$scope.editMode=!1,$uibModalInstance.close()}):api("clients").add(client).then(function(){$scope.clients.push(client),$uibModalInstance.close()})},$scope.cancel=function(){$uibModalInstance.dismiss()}}api("clients").fetch({client_delete:0}).then(function(clients){$scope.clients=clients,$scope.sClient=clients[0],api("cases").fetch({client_id:clients[0].client_id}).then(function(cases){$scope.cases=cases})}),$scope.selectClient=function(client){$scope.sClient=client,api("cases").fetch({client_id:client.client_id}).then(function(cases){$scope.cases=cases})},$scope.removeClient=function(client){api("clients")["delete"](client).then(function(){$scope.clients=_.without($scope.clients,client),$scope.sClient=$scope.clients[0]})},$scope.showDialog=function(client){client?($scope.client=client,$scope.editMode=!0):(delete $scope.client,$scope.editMode=!1),$uibModal.open({animation:!0,scope:$scope,templateUrl:"scripts/mojrokovnik-clients/clients-dialog.html",controller:clientDialogCtrl})}}function clientsSidenav(){return{controller:clientsCtrl,link:function(scope,elem,attr,ctrl){}}}function clientsTemplate(){return{link:function(scope,elem,attr,ctrl){}}}function apiService($q,$http,notify){function isOK(response){function isErrData(data){return data&&data._status&&"ERR"===data._status}return response.status>=200&&response.status<300&&!isErrData(response.data)}function http(config){return $q.when(config.url).then(function(url){return config.url=url,$http(config)}).then(function(response){return isOK(response)?response.data:$q.reject(response)})}var api=function(table){return{fetch:function(params){return http({url:"../server/api.php?table="+table,method:"GET",params:params}).then(function(response){return response})},add:function(params){return http({url:"../server/api.php?table="+table,method:"POST",params:params}).then(function(response){return notify.success(response.msg),response})},update:function(params){return http({url:"../server/api.php?table="+table,method:"PUT",params:params}).then(function(response){return notify.success(response.msg),response})},"delete":function(params){return http({url:"../server/api.php?table="+table,method:"DELETE",params:params}).then(function(response){return notify.success(response.msg),response})}}};return api}function mrLoginCtrl($location,$http,$cookies,$scope,notify,api){$scope.login=function(login){$http({url:"../server/mr-login.php",method:"POST",params:login}).then(function(response){response.data.login?api("users").fetch().then(function(user){user&&($cookies.putObject("user",user),$location.url("/clients"))}):notify.error(response.data.msg)})}}function mrMainNavitagion($location,authentification){return{templateUrl:"scripts/mojrokovnik/navigation/navigation.html",link:function(scope){scope.visible=authentification.isLoggedIn(),scope.isCurrentPath=function(value){return $location.$$path===value}}}}function notifyService($mdToast){function showToast(type,text){$mdToast.show({template:'<md-toast class="md-toast '+type+'">'+text+"</md-toast>",position:"top right"})}this.success=function(text){showToast("success",text)},this.warn=function(text){showToast("warn",text)},this.error=function(text){showToast("error",text)}}function datetimePicker(){return{scope:{model:"="},link:function(scope,elem,attr,ctrl){elem.datetimepicker({format:"MMMM Do YYYY, HH:mm",inline:!0,sideBySide:!0,defaultDate:scope.model}),elem.on("dp.change",function(e){scope.model=e.date._d,scope.$apply()})}}}function mojrokovnikAuth(api,$cookies){var self=this;api("users").fetch().then(function(user){user&&(self.user=user)}),this.getUser=function(){return self.user},this.isLoggedIn=function(){return!!$cookies.getObject("user")}}function mojrokovnikConf($routeProvider){$routeProvider.otherwise({redirectTo:"/clients"}),$routeProvider.when("/login",{templateUrl:"scripts/mojrokovnik/login/login.html"}),$routeProvider.when("/clients",{templateUrl:"scripts/mojrokovnik-clients/clients.html"}),$routeProvider.when("/cases",{templateUrl:"scripts/mojrokovnik-cases/cases.html"}),$routeProvider.when("/calendar",{templateUrl:"scripts/mojrokovnik-calendar/calendar.html"})}function calendarTemplate(api){return{controller:calendarCtrl,link:function(scope,element,attr,ctrl){function initializeCalendar(events){element.fullCalendar({header:{left:"prev,next today",center:"title",right:"month,agendaWeek,agendaDay"},height:angular.element("body").height(),firstDay:1,lang:"sr",scrollTime:"08:00:00",defaultView:"agendaWeek",slotDuration:"00:15:00",timezone:"UTC",selectable:!0,editable:!0,eventLimit:!0,events:events,select:function(startDate,endDate){scope.showDialog(startDate,endDate)},eventClick:function(event){scope.showDialog(event.start,event.end,event.data),console.log(event.data)},eventDrop:function(event){scope.showDialog(event.start,event.end,event.data)},eventResize:function(event){scope.showDialog(event.start,event.end,event.data)}})}api("calendars").fetch().then(function(events){var filterEvents=[];return angular.forEach(events,function(item){filterEvents.push({title:item.calendar_name+" - "+item.calendar_comment,start:item.calendar_startDate,end:item.calendar_endDate,data:item})}),initializeCalendar(filterEvents)}),scope.createEvent=function(event){var eventData={title:event.calendar_name+" - "+event.calendar_comment,start:event.calendar_startDate,end:event.calendar_endDate,data:event};element.fullCalendar("renderEvent",eventData,!0),element.fullCalendar("unselect")}}}}function calendarCtrl($scope,$q,$uibModal,api){function calendarDialogCtrl($uibModalInstance){$scope.save=function(calendar){calendar.calendar_startDate=calendar.calendar_startDate._d,calendar.calendar_endDate=moment(calendar.calendar_startDate).add(calendar.calendar_duration,"m")._d,calendar=_.omit(calendar,"calendar_duration"),calendar.calendar_id?api("calendars").update(calendar).then(function(){$uibModalInstance.close()}):api("calendars").add(calendar).then(function(data){calendar.calendar_id=data.id,$scope.createEvent(calendar),$uibModalInstance.close()})},$scope.cancel=function(){$uibModalInstance.dismiss()}}$scope.showDialog=function(startDate,endDate,data){data?($scope.calendar=data,$scope.calendar.calendar_startDate=startDate,$scope.calendar.calendar_endDate=endDate,$scope.calendar.calendar_duration=(moment(endDate)-moment(startDate))/6e4):$scope.calendar={calendar_startDate:startDate,calendar_endDate:endDate,calendar_duration:(moment(endDate)-moment(startDate))/6e4},$uibModal.open({animation:!0,scope:$scope,templateUrl:"scripts/mojrokovnik-calendar/calendar-dialog.html",controller:calendarDialogCtrl}),$scope.types=[{value:1,name:"Ročište"},{value:2,name:"Obaveza"}];var clients=api("clients").fetch(),cases=api("cases").fetch();$q.all([clients,cases]).then(function(values){$scope.clients=values[0],$scope.cases=values[1]})}}function casesCtrl($scope,api,$uibModal){function casesDialogCtrl($uibModalInstance){$scope.save=function(cases){$scope.editMode?api("cases").update(cases).then(function(){$scope.editMode=!1,$uibModalInstance.close()}):api("cases").add(cases).then(function(){$scope.cases.push(cases),$uibModalInstance.close()})},$scope.cancel=function(){$uibModalInstance.dismiss()}}api("clients").fetch({client_delete:0}).then(function(clients){$scope.clients=clients}),api("cases").fetch({case_delete:0}).then(function(cases){$scope.cases=cases,$scope.sCase=cases[0],$scope.client=$scope.getClient(cases[0].client_id)}),$scope.selectCase=function(ucase){$scope.sCase=ucase,$scope.client=$scope.getClient(ucase.client_id)},$scope.removeCase=function(cases){api("cases")["delete"](cases).then(function(){$scope.cases=_.without($scope.cases,cases),$scope.selCase=$scope.cases[0]})},$scope.getClient=function(client_id){return _.find($scope.clients,function(client){client.client_id==client_id})},$scope.showDialog=function(cases){cases?($scope.newCase=cases,$scope.editMode=!0):(delete $scope.newCase,$scope.editMode=!1),$uibModal.open({animation:!0,scope:$scope,size:"lg",templateUrl:"scripts/mojrokovnik-cases/cases-dialog.html",controller:casesDialogCtrl}),$scope.data={rivalType:["Tužilac","Tuženi","Poverilac","Dužnik","Usvojilac","Usvojenik","Izvršni poverilac","Izvršni dužnik","Predlagač","Protivnik predlagača","Privatni tužilac","Okrivljeni","Treće lice","Oštećeni"],caseType:["Izvršni postupak","Krivični postupak","Parnični postupak","Prekršajni postupak","Privredno pravo","Upravni postupak i sporovi","Vanparnični postupak","Ostalo"],caseElement:["Bračni spor","Izdržavanje","Kolektivni ugovori  spor","Materinstvo i očinstvo","Naknada štete","Nasledni spor","Obligacioni spor","Platni nalog","Poništaj usvojenja","Privredni spor","Radni spor","Roditeljsko pravo","Smetanje državine","Spor  povreda žiga ili firme","Spor authorskih prava","Spor male vrednosti","Stambeni spor","Svojinski spor","Zaštita od nasilja u porodici","Zaštita prava deteta","Ostalo"]}}}function casesSidenav(){return{controller:casesCtrl,link:function(scope,elem,attr,ctrl){}}}function casesTemplate(){return{link:function(scope,elem,attr,ctrl){}}}function clientsCtrl($scope,api,$uibModal){function clientDialogCtrl($uibModalInstance){$scope.save=function(client){$scope.editMode?api("clients").update(client).then(function(){$scope.editMode=!1,$uibModalInstance.close()}):api("clients").add(client).then(function(){$scope.clients.push(client),$uibModalInstance.close()})},$scope.cancel=function(){$uibModalInstance.dismiss()}}api("clients").fetch({client_delete:0}).then(function(clients){$scope.clients=clients,$scope.sClient=clients[0],api("cases").fetch({client_id:clients[0].client_id}).then(function(cases){$scope.cases=cases})}),$scope.selectClient=function(client){$scope.sClient=client,api("cases").fetch({client_id:client.client_id}).then(function(cases){$scope.cases=cases})},$scope.removeClient=function(client){api("clients")["delete"](client).then(function(){$scope.clients=_.without($scope.clients,client),$scope.sClient=$scope.clients[0]})},$scope.showDialog=function(client){client?($scope.client=client,$scope.editMode=!0):(delete $scope.client,$scope.editMode=!1),$uibModal.open({animation:!0,scope:$scope,templateUrl:"scripts/mojrokovnik-clients/clients-dialog.html",controller:clientDialogCtrl})}}function clientsSidenav(){return{controller:clientsCtrl,link:function(scope,elem,attr,ctrl){}}}function clientsTemplate(){return{link:function(scope,elem,attr,ctrl){}}}function apiService($q,$http,notify){function isOK(response){function isErrData(data){return data&&data._status&&"ERR"===data._status}return response.status>=200&&response.status<300&&!isErrData(response.data)}function http(config){return $q.when(config.url).then(function(url){return config.url=url,$http(config)}).then(function(response){return isOK(response)?response.data:$q.reject(response)})}var api=function(table){return{fetch:function(params){return http({url:"../server/api.php?table="+table,method:"GET",params:params}).then(function(response){return response})},add:function(params){return http({url:"../server/api.php?table="+table,method:"POST",params:params}).then(function(response){return notify.success(response.msg),response})},update:function(params){return http({url:"../server/api.php?table="+table,method:"PUT",params:params}).then(function(response){return notify.success(response.msg),response})},"delete":function(params){return http({url:"../server/api.php?table="+table,method:"DELETE",params:params}).then(function(response){return notify.success(response.msg),response})}}};return api}function mrLoginCtrl($location,$http,$cookies,$scope,notify,api){$scope.login=function(login){$http({url:"../server/mr-login.php",method:"POST",params:login}).then(function(response){response.data.login?api("users").fetch().then(function(user){user&&($cookies.putObject("user",user),$location.url("/clients"))}):notify.error(response.data.msg)})}}function mrMainNavitagion($location,authentification){return{templateUrl:"scripts/mojrokovnik/navigation/navigation.html",link:function(scope){scope.visible=authentification.isLoggedIn(),scope.isCurrentPath=function(value){return $location.$$path===value}}}}function notifyService($mdToast){function showToast(type,text){$mdToast.show({template:'<md-toast class="md-toast '+type+'">'+text+"</md-toast>",position:"top right"})}this.success=function(text){showToast("success",text)},this.warn=function(text){showToast("warn",text)},this.error=function(text){showToast("error",text)}}function datetimePicker(){return{scope:{model:"="},link:function(scope,elem,attr,ctrl){elem.datetimepicker({format:"MMMM Do YYYY, HH:mm",inline:!0,sideBySide:!0,defaultDate:scope.model}),elem.on("dp.change",function(e){scope.model=e.date._d,scope.$apply()})}}}function mojrokovnikAuth(api,$cookies){var self=this;api("users").fetch().then(function(user){user&&(self.user=user)}),this.getUser=function(){return self.user},this.isLoggedIn=function(){return!!$cookies.getObject("user")}}function mojrokovnikConf($routeProvider){$routeProvider.otherwise({redirectTo:"/clients"}),$routeProvider.when("/login",{templateUrl:"scripts/mojrokovnik/login/login.html"}),$routeProvider.when("/clients",{templateUrl:"scripts/mojrokovnik-clients/clients.html"}),$routeProvider.when("/cases",{templateUrl:"scripts/mojrokovnik-cases/cases.html"}),$routeProvider.when("/calendar",{templateUrl:"scripts/mojrokovnik-calendar/calendar.html"})}function calendarTemplate(api){return{controller:calendarCtrl,link:function(scope,element,attr,ctrl){function initializeCalendar(events){element.fullCalendar({header:{left:"prev,next today",center:"title",right:"month,agendaWeek,agendaDay"},height:angular.element("body").height(),firstDay:1,lang:"sr",scrollTime:"08:00:00",defaultView:"agendaWeek",slotDuration:"00:15:00",timezone:"UTC",selectable:!0,editable:!0,eventLimit:!0,events:events,select:function(startDate,endDate){scope.showDialog(startDate,endDate)},eventClick:function(event){scope.showDialog(event.start,event.end,event.data),console.log(event.data)},eventDrop:function(event){scope.showDialog(event.start,event.end,event.data)},eventResize:function(event){scope.showDialog(event.start,event.end,event.data)}})}api("calendars").fetch().then(function(events){var filterEvents=[];return angular.forEach(events,function(item){filterEvents.push({title:item.calendar_name+" - "+item.calendar_comment,start:item.calendar_startDate,end:item.calendar_endDate,data:item})}),initializeCalendar(filterEvents)}),scope.createEvent=function(event){var eventData={title:event.calendar_name+" - "+event.calendar_comment,start:event.calendar_startDate,end:event.calendar_endDate,data:event};element.fullCalendar("renderEvent",eventData,!0),element.fullCalendar("unselect")}}}}function calendarCtrl($scope,$q,$uibModal,api){function calendarDialogCtrl($uibModalInstance){$scope.save=function(calendar){calendar.calendar_startDate=calendar.calendar_startDate._d,calendar.calendar_endDate=moment(calendar.calendar_startDate).add(calendar.calendar_duration,"m")._d,calendar=_.omit(calendar,"calendar_duration"),calendar.calendar_id?api("calendars").update(calendar).then(function(){$uibModalInstance.close()}):api("calendars").add(calendar).then(function(data){calendar.calendar_id=data.id,$scope.createEvent(calendar),$uibModalInstance.close()})},$scope.cancel=function(){$uibModalInstance.dismiss()}}$scope.showDialog=function(startDate,endDate,data){data?($scope.calendar=data,$scope.calendar.calendar_startDate=startDate,$scope.calendar.calendar_endDate=endDate,$scope.calendar.calendar_duration=(moment(endDate)-moment(startDate))/6e4):$scope.calendar={calendar_startDate:startDate,calendar_endDate:endDate,calendar_duration:(moment(endDate)-moment(startDate))/6e4},$uibModal.open({animation:!0,scope:$scope,templateUrl:"scripts/mojrokovnik-calendar/calendar-dialog.html",controller:calendarDialogCtrl}),$scope.types=[{value:1,name:"Ročište"},{value:2,name:"Obaveza"}];var clients=api("clients").fetch(),cases=api("cases").fetch();$q.all([clients,cases]).then(function(values){$scope.clients=values[0],$scope.cases=values[1]})}}function casesCtrl($scope,api,$uibModal){function casesDialogCtrl($uibModalInstance){$scope.save=function(cases){$scope.editMode?api("cases").update(cases).then(function(){$scope.editMode=!1,$uibModalInstance.close()}):api("cases").add(cases).then(function(){$scope.cases.push(cases),$uibModalInstance.close()})},$scope.cancel=function(){$uibModalInstance.dismiss()}}api("clients").fetch({client_delete:0}).then(function(clients){$scope.clients=clients}),api("cases").fetch({case_delete:0}).then(function(cases){$scope.cases=cases,$scope.sCase=cases[0],$scope.client=$scope.getClient(cases[0].client_id)}),$scope.selectCase=function(ucase){$scope.sCase=ucase,$scope.client=$scope.getClient(ucase.client_id)},$scope.removeCase=function(cases){api("cases")["delete"](cases).then(function(){$scope.cases=_.without($scope.cases,cases),$scope.selCase=$scope.cases[0]})},$scope.getClient=function(client){return _.find($scope.clients,function(client){client.client_id==client})},$scope.showDialog=function(cases){cases?($scope.newCase=cases,$scope.editMode=!0):(delete $scope.newCase,$scope.editMode=!1),$uibModal.open({animation:!0,scope:$scope,size:"lg",templateUrl:"scripts/mojrokovnik-cases/cases-dialog.html",controller:casesDialogCtrl}),$scope.data={rivalType:["Tužilac","Tuženi","Poverilac","Dužnik","Usvojilac","Usvojenik","Izvršni poverilac","Izvršni dužnik","Predlagač","Protivnik predlagača","Privatni tužilac","Okrivljeni","Treće lice","Oštećeni"],caseType:["Izvršni postupak","Krivični postupak","Parnični postupak","Prekršajni postupak","Privredno pravo","Upravni postupak i sporovi","Vanparnični postupak","Ostalo"],caseElement:["Bračni spor","Izdržavanje","Kolektivni ugovori  spor","Materinstvo i očinstvo","Naknada štete","Nasledni spor","Obligacioni spor","Platni nalog","Poništaj usvojenja","Privredni spor","Radni spor","Roditeljsko pravo","Smetanje državine","Spor  povreda žiga ili firme","Spor authorskih prava","Spor male vrednosti","Stambeni spor","Svojinski spor","Zaštita od nasilja u porodici","Zaštita prava deteta","Ostalo"]}}}function casesSidenav(){return{controller:casesCtrl,link:function(scope,elem,attr,ctrl){}}}function casesTemplate(){return{link:function(scope,elem,attr,ctrl){}}}function clientsCtrl($scope,api,$uibModal){function clientDialogCtrl($uibModalInstance){$scope.save=function(client){$scope.editMode?api("clients").update(client).then(function(){$scope.editMode=!1,$uibModalInstance.close()}):api("clients").add(client).then(function(){$scope.clients.push(client),$uibModalInstance.close()})},$scope.cancel=function(){$uibModalInstance.dismiss()}}api("clients").fetch({client_delete:0}).then(function(clients){$scope.clients=clients,$scope.sClient=clients[0],api("cases").fetch({client_id:clients[0].client_id}).then(function(cases){$scope.cases=cases})}),$scope.selectClient=function(client){$scope.sClient=client,api("cases").fetch({client_id:client.client_id}).then(function(cases){$scope.cases=cases})},$scope.removeClient=function(client){api("clients")["delete"](client).then(function(){$scope.clients=_.without($scope.clients,client),$scope.sClient=$scope.clients[0]})},$scope.showDialog=function(client){client?($scope.client=client,$scope.editMode=!0):(delete $scope.client,$scope.editMode=!1),$uibModal.open({animation:!0,scope:$scope,templateUrl:"scripts/mojrokovnik-clients/clients-dialog.html",controller:clientDialogCtrl})}}function clientsSidenav(){return{controller:clientsCtrl,link:function(scope,elem,attr,ctrl){}}}function clientsTemplate(){return{link:function(scope,elem,attr,ctrl){}}}function apiService($q,$http,notify){function isOK(response){function isErrData(data){return data&&data._status&&"ERR"===data._status}return response.status>=200&&response.status<300&&!isErrData(response.data)}function http(config){return $q.when(config.url).then(function(url){return config.url=url,$http(config)}).then(function(response){return isOK(response)?response.data:$q.reject(response)})}var api=function(table){return{fetch:function(params){return http({url:"../server/api.php?table="+table,method:"GET",params:params}).then(function(response){return response})},add:function(params){return http({url:"../server/api.php?table="+table,method:"POST",params:params}).then(function(response){return notify.success(response.msg),response})},update:function(params){return http({url:"../server/api.php?table="+table,method:"PUT",params:params}).then(function(response){return notify.success(response.msg),response})},"delete":function(params){return http({url:"../server/api.php?table="+table,method:"DELETE",params:params}).then(function(response){return notify.success(response.msg),response})}}};return api}function mrLoginCtrl($location,$http,$cookies,$scope,notify,api){$scope.login=function(login){$http({url:"../server/mr-login.php",method:"POST",params:login}).then(function(response){response.data.login?api("users").fetch().then(function(user){user&&($cookies.putObject("user",user),$location.url("/clients"))}):notify.error(response.data.msg)})}}function mrMainNavitagion($location,authentification){return{templateUrl:"scripts/mojrokovnik/navigation/navigation.html",link:function(scope){scope.visible=authentification.isLoggedIn(),scope.isCurrentPath=function(value){return $location.$$path===value}}}}function notifyService($mdToast){function showToast(type,text){$mdToast.show({template:'<md-toast class="md-toast '+type+'">'+text+"</md-toast>",position:"top right"})}this.success=function(text){showToast("success",text)},this.warn=function(text){showToast("warn",text)},this.error=function(text){showToast("error",text)}}function datetimePicker(){return{scope:{model:"="},link:function(scope,elem,attr,ctrl){elem.datetimepicker({format:"MMMM Do YYYY, HH:mm",inline:!0,sideBySide:!0,defaultDate:scope.model}),elem.on("dp.change",function(e){scope.model=e.date._d,scope.$apply()})}}}function mojrokovnikAuth(api,$cookies){var self=this;api("users").fetch().then(function(user){user&&(self.user=user)}),this.getUser=function(){return self.user},this.isLoggedIn=function(){return!!$cookies.getObject("user")}}function mojrokovnikConf($routeProvider){$routeProvider.otherwise({redirectTo:"/clients"}),$routeProvider.when("/login",{templateUrl:"scripts/mojrokovnik/login/login.html"}),$routeProvider.when("/clients",{templateUrl:"scripts/mojrokovnik-clients/clients.html"}),$routeProvider.when("/cases",{templateUrl:"scripts/mojrokovnik-cases/cases.html"}),$routeProvider.when("/calendar",{templateUrl:"scripts/mojrokovnik-calendar/calendar.html"})}function calendarTemplate(api){return{controller:calendarCtrl,link:function(scope,element,attr,ctrl){function initializeCalendar(events){element.fullCalendar({header:{left:"prev,next today",center:"title",right:"month,agendaWeek,agendaDay"},height:angular.element("body").height(),firstDay:1,lang:"sr",scrollTime:"08:00:00",defaultView:"agendaWeek",slotDuration:"00:15:00",timezone:"UTC",selectable:!0,editable:!0,eventLimit:!0,events:events,select:function(startDate,endDate){scope.showDialog(startDate,endDate)},eventClick:function(event){scope.showDialog(event.start,event.end,event.data),console.log(event.data)},eventDrop:function(event){scope.showDialog(event.start,event.end,event.data)},eventResize:function(event){scope.showDialog(event.start,event.end,event.data)}})}api("calendars").fetch().then(function(events){var filterEvents=[];return angular.forEach(events,function(item){filterEvents.push({title:item.calendar_name+" - "+item.calendar_comment,start:item.calendar_startDate,end:item.calendar_endDate,data:item})}),initializeCalendar(filterEvents)}),scope.createEvent=function(event){var eventData={title:event.calendar_name+" - "+event.calendar_comment,start:event.calendar_startDate,end:event.calendar_endDate,data:event};element.fullCalendar("renderEvent",eventData,!0),element.fullCalendar("unselect")}}}}function calendarCtrl($scope,$q,$uibModal,api){function calendarDialogCtrl($uibModalInstance){$scope.save=function(calendar){calendar.calendar_startDate=calendar.calendar_startDate._d,calendar.calendar_endDate=moment(calendar.calendar_startDate).add(calendar.calendar_duration,"m")._d,calendar=_.omit(calendar,"calendar_duration"),calendar.calendar_id?api("calendars").update(calendar).then(function(){$uibModalInstance.close()}):api("calendars").add(calendar).then(function(data){calendar.calendar_id=data.id,$scope.createEvent(calendar),$uibModalInstance.close()})},$scope.cancel=function(){$uibModalInstance.dismiss()}}$scope.showDialog=function(startDate,endDate,data){data?($scope.calendar=data,$scope.calendar.calendar_startDate=startDate,$scope.calendar.calendar_endDate=endDate,$scope.calendar.calendar_duration=(moment(endDate)-moment(startDate))/6e4):$scope.calendar={calendar_startDate:startDate,calendar_endDate:endDate,calendar_duration:(moment(endDate)-moment(startDate))/6e4},$uibModal.open({animation:!0,scope:$scope,templateUrl:"scripts/mojrokovnik-calendar/calendar-dialog.html",controller:calendarDialogCtrl}),$scope.types=[{value:1,name:"Ročište"},{value:2,name:"Obaveza"}];var clients=api("clients").fetch(),cases=api("cases").fetch();$q.all([clients,cases]).then(function(values){$scope.clients=values[0],$scope.cases=values[1]})}}function casesCtrl($scope,api,$uibModal){function casesDialogCtrl($uibModalInstance){$scope.save=function(cases){$scope.editMode?api("cases").update(cases).then(function(){$scope.editMode=!1,$uibModalInstance.close()}):api("cases").add(cases).then(function(){$scope.cases.push(cases),$uibModalInstance.close()})},$scope.cancel=function(){$uibModalInstance.dismiss()}}api("clients").fetch({client_delete:0}).then(function(clients){$scope.clients=clients}),api("cases").fetch({case_delete:0}).then(function(cases){$scope.cases=cases,$scope.sCase=cases[0],$scope.client=$scope.getClient(cases[0].client_id)}),$scope.selectCase=function(ucase){$scope.sCase=ucase,$scope.client=$scope.getClient(ucase.client_id)},$scope.removeCase=function(cases){api("cases")["delete"](cases).then(function(){$scope.cases=_.without($scope.cases,cases),$scope.selCase=$scope.cases[0]})},$scope.getClient=function(client){return _.find($scope.clients,function(client){return client.client_id==client})},$scope.showDialog=function(cases){cases?($scope.newCase=cases,$scope.editMode=!0):(delete $scope.newCase,$scope.editMode=!1),$uibModal.open({animation:!0,scope:$scope,size:"lg",templateUrl:"scripts/mojrokovnik-cases/cases-dialog.html",controller:casesDialogCtrl}),$scope.data={rivalType:["Tužilac","Tuženi","Poverilac","Dužnik","Usvojilac","Usvojenik","Izvršni poverilac","Izvršni dužnik","Predlagač","Protivnik predlagača","Privatni tužilac","Okrivljeni","Treće lice","Oštećeni"],caseType:["Izvršni postupak","Krivični postupak","Parnični postupak","Prekršajni postupak","Privredno pravo","Upravni postupak i sporovi","Vanparnični postupak","Ostalo"],caseElement:["Bračni spor","Izdržavanje","Kolektivni ugovori  spor","Materinstvo i očinstvo","Naknada štete","Nasledni spor","Obligacioni spor","Platni nalog","Poništaj usvojenja","Privredni spor","Radni spor","Roditeljsko pravo","Smetanje državine","Spor  povreda žiga ili firme","Spor authorskih prava","Spor male vrednosti","Stambeni spor","Svojinski spor","Zaštita od nasilja u porodici","Zaštita prava deteta","Ostalo"]}}}function casesSidenav(){return{controller:casesCtrl,link:function(scope,elem,attr,ctrl){}}}function casesTemplate(){return{link:function(scope,elem,attr,ctrl){}}}function clientsCtrl($scope,api,$uibModal){function clientDialogCtrl($uibModalInstance){$scope.save=function(client){$scope.editMode?api("clients").update(client).then(function(){$scope.editMode=!1,$uibModalInstance.close()}):api("clients").add(client).then(function(){$scope.clients.push(client),$uibModalInstance.close()})},$scope.cancel=function(){$uibModalInstance.dismiss()}}api("clients").fetch({client_delete:0}).then(function(clients){$scope.clients=clients,$scope.sClient=clients[0],api("cases").fetch({client_id:clients[0].client_id}).then(function(cases){$scope.cases=cases})}),$scope.selectClient=function(client){$scope.sClient=client,api("cases").fetch({client_id:client.client_id}).then(function(cases){$scope.cases=cases;
})},$scope.removeClient=function(client){api("clients")["delete"](client).then(function(){$scope.clients=_.without($scope.clients,client),$scope.sClient=$scope.clients[0]})},$scope.showDialog=function(client){client?($scope.client=client,$scope.editMode=!0):(delete $scope.client,$scope.editMode=!1),$uibModal.open({animation:!0,scope:$scope,templateUrl:"scripts/mojrokovnik-clients/clients-dialog.html",controller:clientDialogCtrl})}}function clientsSidenav(){return{controller:clientsCtrl,link:function(scope,elem,attr,ctrl){}}}function clientsTemplate(){return{link:function(scope,elem,attr,ctrl){}}}function apiService($q,$http,notify){function isOK(response){function isErrData(data){return data&&data._status&&"ERR"===data._status}return response.status>=200&&response.status<300&&!isErrData(response.data)}function http(config){return $q.when(config.url).then(function(url){return config.url=url,$http(config)}).then(function(response){return isOK(response)?response.data:$q.reject(response)})}var api=function(table){return{fetch:function(params){return http({url:"../server/api.php?table="+table,method:"GET",params:params}).then(function(response){return response})},add:function(params){return http({url:"../server/api.php?table="+table,method:"POST",params:params}).then(function(response){return notify.success(response.msg),response})},update:function(params){return http({url:"../server/api.php?table="+table,method:"PUT",params:params}).then(function(response){return notify.success(response.msg),response})},"delete":function(params){return http({url:"../server/api.php?table="+table,method:"DELETE",params:params}).then(function(response){return notify.success(response.msg),response})}}};return api}function mrLoginCtrl($location,$http,$cookies,$scope,notify,api){$scope.login=function(login){$http({url:"../server/mr-login.php",method:"POST",params:login}).then(function(response){response.data.login?api("users").fetch().then(function(user){user&&($cookies.putObject("user",user),$location.url("/clients"))}):notify.error(response.data.msg)})}}function mrMainNavitagion($location,authentification){return{templateUrl:"scripts/mojrokovnik/navigation/navigation.html",link:function(scope){scope.visible=authentification.isLoggedIn(),scope.isCurrentPath=function(value){return $location.$$path===value}}}}function notifyService($mdToast){function showToast(type,text){$mdToast.show({template:'<md-toast class="md-toast '+type+'">'+text+"</md-toast>",position:"top right"})}this.success=function(text){showToast("success",text)},this.warn=function(text){showToast("warn",text)},this.error=function(text){showToast("error",text)}}function datetimePicker(){return{scope:{model:"="},link:function(scope,elem,attr,ctrl){elem.datetimepicker({format:"MMMM Do YYYY, HH:mm",inline:!0,sideBySide:!0,defaultDate:scope.model}),elem.on("dp.change",function(e){scope.model=e.date._d,scope.$apply()})}}}function mojrokovnikAuth(api,$cookies){var self=this;api("users").fetch().then(function(user){user&&(self.user=user)}),this.getUser=function(){return self.user},this.isLoggedIn=function(){return!!$cookies.getObject("user")}}function mojrokovnikConf($routeProvider){$routeProvider.otherwise({redirectTo:"/clients"}),$routeProvider.when("/login",{templateUrl:"scripts/mojrokovnik/login/login.html"}),$routeProvider.when("/clients",{templateUrl:"scripts/mojrokovnik-clients/clients.html"}),$routeProvider.when("/cases",{templateUrl:"scripts/mojrokovnik-cases/cases.html"}),$routeProvider.when("/calendar",{templateUrl:"scripts/mojrokovnik-calendar/calendar.html"})}function calendarTemplate(api){return{controller:calendarCtrl,link:function(scope,element,attr,ctrl){function initializeCalendar(events){element.fullCalendar({header:{left:"prev,next today",center:"title",right:"month,agendaWeek,agendaDay"},height:angular.element("body").height(),firstDay:1,lang:"sr",scrollTime:"08:00:00",defaultView:"agendaWeek",slotDuration:"00:15:00",timezone:"UTC",selectable:!0,editable:!0,eventLimit:!0,events:events,select:function(startDate,endDate){scope.showDialog(startDate,endDate)},eventClick:function(event){scope.showDialog(event.start,event.end,event.data),console.log(event.data)},eventDrop:function(event){scope.showDialog(event.start,event.end,event.data)},eventResize:function(event){scope.showDialog(event.start,event.end,event.data)}})}api("calendars").fetch().then(function(events){var filterEvents=[];return angular.forEach(events,function(item){filterEvents.push({title:item.calendar_name+" - "+item.calendar_comment,start:item.calendar_startDate,end:item.calendar_endDate,data:item})}),initializeCalendar(filterEvents)}),scope.createEvent=function(event){var eventData={title:event.calendar_name+" - "+event.calendar_comment,start:event.calendar_startDate,end:event.calendar_endDate,data:event};element.fullCalendar("renderEvent",eventData,!0),element.fullCalendar("unselect")}}}}function calendarCtrl($scope,$q,$uibModal,api){function calendarDialogCtrl($uibModalInstance){$scope.save=function(calendar){calendar.calendar_startDate=calendar.calendar_startDate._d,calendar.calendar_endDate=moment(calendar.calendar_startDate).add(calendar.calendar_duration,"m")._d,calendar=_.omit(calendar,"calendar_duration"),calendar.calendar_id?api("calendars").update(calendar).then(function(){$uibModalInstance.close()}):api("calendars").add(calendar).then(function(data){calendar.calendar_id=data.id,$scope.createEvent(calendar),$uibModalInstance.close()})},$scope.cancel=function(){$uibModalInstance.dismiss()}}$scope.showDialog=function(startDate,endDate,data){data?($scope.calendar=data,$scope.calendar.calendar_startDate=startDate,$scope.calendar.calendar_endDate=endDate,$scope.calendar.calendar_duration=(moment(endDate)-moment(startDate))/6e4):$scope.calendar={calendar_startDate:startDate,calendar_endDate:endDate,calendar_duration:(moment(endDate)-moment(startDate))/6e4},$uibModal.open({animation:!0,scope:$scope,templateUrl:"scripts/mojrokovnik-calendar/calendar-dialog.html",controller:calendarDialogCtrl}),$scope.types=[{value:1,name:"Ročište"},{value:2,name:"Obaveza"}];var clients=api("clients").fetch(),cases=api("cases").fetch();$q.all([clients,cases]).then(function(values){$scope.clients=values[0],$scope.cases=values[1]})}}function casesCtrl($scope,api,$uibModal){function casesDialogCtrl($uibModalInstance){$scope.save=function(cases){$scope.editMode?api("cases").update(cases).then(function(){$scope.editMode=!1,$uibModalInstance.close()}):api("cases").add(cases).then(function(){$scope.cases.push(cases),$uibModalInstance.close()})},$scope.cancel=function(){$uibModalInstance.dismiss()}}api("clients").fetch({client_delete:0}).then(function(clients){$scope.clients=clients}),api("cases").fetch({case_delete:0}).then(function(cases){$scope.cases=cases,$scope.sCase=cases[0],$scope.client=$scope.getClient(cases[0].client_id)}),$scope.selectCase=function(ucase){$scope.sCase=ucase,$scope.client=$scope.getClient(ucase.client_id)},$scope.removeCase=function(cases){api("cases")["delete"](cases).then(function(){$scope.cases=_.without($scope.cases,cases),$scope.selCase=$scope.cases[0]})},$scope.getClient=function(client_id){return _.find($scope.clients,function(client){return client.client_id==client_id})},$scope.showDialog=function(cases){cases?($scope.newCase=cases,$scope.editMode=!0):(delete $scope.newCase,$scope.editMode=!1),$uibModal.open({animation:!0,scope:$scope,size:"lg",templateUrl:"scripts/mojrokovnik-cases/cases-dialog.html",controller:casesDialogCtrl}),$scope.data={rivalType:["Tužilac","Tuženi","Poverilac","Dužnik","Usvojilac","Usvojenik","Izvršni poverilac","Izvršni dužnik","Predlagač","Protivnik predlagača","Privatni tužilac","Okrivljeni","Treće lice","Oštećeni"],caseType:["Izvršni postupak","Krivični postupak","Parnični postupak","Prekršajni postupak","Privredno pravo","Upravni postupak i sporovi","Vanparnični postupak","Ostalo"],caseElement:["Bračni spor","Izdržavanje","Kolektivni ugovori  spor","Materinstvo i očinstvo","Naknada štete","Nasledni spor","Obligacioni spor","Platni nalog","Poništaj usvojenja","Privredni spor","Radni spor","Roditeljsko pravo","Smetanje državine","Spor  povreda žiga ili firme","Spor authorskih prava","Spor male vrednosti","Stambeni spor","Svojinski spor","Zaštita od nasilja u porodici","Zaštita prava deteta","Ostalo"]}}}function casesSidenav(){return{controller:casesCtrl,link:function(scope,elem,attr,ctrl){}}}function casesTemplate(){return{link:function(scope,elem,attr,ctrl){}}}function clientsCtrl($scope,api,$uibModal){function clientDialogCtrl($uibModalInstance){$scope.save=function(client){$scope.editMode?api("clients").update(client).then(function(){$scope.editMode=!1,$uibModalInstance.close()}):api("clients").add(client).then(function(){$scope.clients.push(client),$uibModalInstance.close()})},$scope.cancel=function(){$uibModalInstance.dismiss()}}api("clients").fetch({client_delete:0}).then(function(clients){$scope.clients=clients,$scope.sClient=clients[0],api("cases").fetch({client_id:clients[0].client_id}).then(function(cases){$scope.cases=cases})}),$scope.selectClient=function(client){$scope.sClient=client,api("cases").fetch({client_id:client.client_id}).then(function(cases){$scope.cases=cases})},$scope.removeClient=function(client){api("clients")["delete"](client).then(function(){$scope.clients=_.without($scope.clients,client),$scope.sClient=$scope.clients[0]})},$scope.showDialog=function(client){client?($scope.client=client,$scope.editMode=!0):(delete $scope.client,$scope.editMode=!1),$uibModal.open({animation:!0,scope:$scope,templateUrl:"scripts/mojrokovnik-clients/clients-dialog.html",controller:clientDialogCtrl})}}function clientsSidenav(){return{controller:clientsCtrl,link:function(scope,elem,attr,ctrl){}}}function clientsTemplate(){return{link:function(scope,elem,attr,ctrl){}}}function apiService($q,$http,notify){function isOK(response){function isErrData(data){return data&&data._status&&"ERR"===data._status}return response.status>=200&&response.status<300&&!isErrData(response.data)}function http(config){return $q.when(config.url).then(function(url){return config.url=url,$http(config)}).then(function(response){return isOK(response)?response.data:$q.reject(response)})}var api=function(table){return{fetch:function(params){return http({url:"../server/api.php?table="+table,method:"GET",params:params}).then(function(response){return response})},add:function(params){return http({url:"../server/api.php?table="+table,method:"POST",params:params}).then(function(response){return notify.success(response.msg),response})},update:function(params){return http({url:"../server/api.php?table="+table,method:"PUT",params:params}).then(function(response){return notify.success(response.msg),response})},"delete":function(params){return http({url:"../server/api.php?table="+table,method:"DELETE",params:params}).then(function(response){return notify.success(response.msg),response})}}};return api}function mrLoginCtrl($location,$http,$cookies,$scope,notify,api){$scope.login=function(login){$http({url:"../server/mr-login.php",method:"POST",params:login}).then(function(response){response.data.login?api("users").fetch().then(function(user){user&&($cookies.putObject("user",user),$location.url("/clients"))}):notify.error(response.data.msg)})}}function mrMainNavitagion($location,authentification){return{templateUrl:"scripts/mojrokovnik/navigation/navigation.html",link:function(scope){scope.visible=authentification.isLoggedIn(),scope.isCurrentPath=function(value){return $location.$$path===value}}}}function notifyService($mdToast){function showToast(type,text){$mdToast.show({template:'<md-toast class="md-toast '+type+'">'+text+"</md-toast>",position:"top right"})}this.success=function(text){showToast("success",text)},this.warn=function(text){showToast("warn",text)},this.error=function(text){showToast("error",text)}}function datetimePicker(){return{scope:{model:"="},link:function(scope,elem,attr,ctrl){elem.datetimepicker({format:"MMMM Do YYYY, HH:mm",inline:!0,sideBySide:!0,defaultDate:scope.model}),elem.on("dp.change",function(e){scope.model=e.date._d,scope.$apply()})}}}function mojrokovnikAuth(api,$cookies){var self=this;api("users").fetch().then(function(user){user&&(self.user=user)}),this.getUser=function(){return self.user},this.isLoggedIn=function(){return!!$cookies.getObject("user")}}function mojrokovnikConf($routeProvider){$routeProvider.otherwise({redirectTo:"/clients"}),$routeProvider.when("/login",{templateUrl:"scripts/mojrokovnik/login/login.html"}),$routeProvider.when("/clients",{templateUrl:"scripts/mojrokovnik-clients/clients.html"}),$routeProvider.when("/cases",{templateUrl:"scripts/mojrokovnik-cases/cases.html"}),$routeProvider.when("/calendar",{templateUrl:"scripts/mojrokovnik-calendar/calendar.html"})}function calendarTemplate(api){return{controller:calendarCtrl,link:function(scope,element,attr,ctrl){function initializeCalendar(events){element.fullCalendar({header:{left:"prev,next today",center:"title",right:"month,agendaWeek,agendaDay"},height:angular.element("body").height(),firstDay:1,lang:"sr",scrollTime:"08:00:00",defaultView:"agendaWeek",slotDuration:"00:15:00",timezone:"UTC",selectable:!0,editable:!0,eventLimit:!0,events:events,select:function(startDate,endDate){scope.showDialog(startDate,endDate)},eventClick:function(event){scope.showDialog(event.start,event.end,event.data),console.log(event.data)},eventDrop:function(event){scope.showDialog(event.start,event.end,event.data)},eventResize:function(event){scope.showDialog(event.start,event.end,event.data)}})}api("calendars").fetch().then(function(events){var filterEvents=[];return angular.forEach(events,function(item){filterEvents.push({title:item.calendar_name+" - "+item.calendar_comment,start:item.calendar_startDate,end:item.calendar_endDate,data:item})}),initializeCalendar(filterEvents)}),scope.createEvent=function(event){var eventData={title:event.calendar_name+" - "+event.calendar_comment,start:event.calendar_startDate,end:event.calendar_endDate,data:event};element.fullCalendar("renderEvent",eventData,!0),element.fullCalendar("unselect")}}}}function calendarCtrl($scope,$q,$uibModal,api){function calendarDialogCtrl($uibModalInstance){$scope.save=function(calendar){calendar.calendar_startDate=calendar.calendar_startDate._d,calendar.calendar_endDate=moment(calendar.calendar_startDate).add(calendar.calendar_duration,"m")._d,calendar=_.omit(calendar,"calendar_duration"),calendar.calendar_id?api("calendars").update(calendar).then(function(){$uibModalInstance.close()}):api("calendars").add(calendar).then(function(data){calendar.calendar_id=data.id,$scope.createEvent(calendar),$uibModalInstance.close()})},$scope.cancel=function(){$uibModalInstance.dismiss()}}$scope.showDialog=function(startDate,endDate,data){data?($scope.calendar=data,$scope.calendar.calendar_startDate=startDate,$scope.calendar.calendar_endDate=endDate,$scope.calendar.calendar_duration=(moment(endDate)-moment(startDate))/6e4):$scope.calendar={calendar_startDate:startDate,calendar_endDate:endDate,calendar_duration:(moment(endDate)-moment(startDate))/6e4},$uibModal.open({animation:!0,scope:$scope,templateUrl:"scripts/mojrokovnik-calendar/calendar-dialog.html",controller:calendarDialogCtrl}),$scope.types=[{value:1,name:"Ročište"},{value:2,name:"Obaveza"}];var clients=api("clients").fetch(),cases=api("cases").fetch();$q.all([clients,cases]).then(function(values){$scope.clients=values[0],$scope.cases=values[1]})}}function casesCtrl($scope,api,$uibModal){function casesDialogCtrl($uibModalInstance){$scope.save=function(cases){$scope.editMode?api("cases").update(cases).then(function(){$scope.editMode=!1,$uibModalInstance.close()}):api("cases").add(cases).then(function(){$scope.cases.push(cases),$uibModalInstance.close()})},$scope.cancel=function(){$uibModalInstance.dismiss()}}api("clients").fetch({client_delete:0}).then(function(clients){$scope.clients=clients}),api("cases").fetch({case_delete:0}).then(function(cases){$scope.cases=cases,$scope.sCase=cases[0],$scope.client=$scope.getClient(cases[0].client_id)}),$scope.selectCase=function(ucase){$scope.sCase=ucase,$scope.client=$scope.getClient(ucase.client_id)},$scope.removeCase=function(cases){api("cases")["delete"](cases).then(function(){$scope.cases=_.without($scope.cases,cases),$scope.selCase=$scope.cases[0]})},$scope.getClient=function(client_id){return _.find($scope.clients,function(client){return client.client_id==client_id})},$scope.showDialog=function(cases){cases?($scope.newCase=cases,$scope.editMode=!0):(delete $scope.newCase,$scope.editMode=!1),$uibModal.open({animation:!0,scope:$scope,size:"lg",templateUrl:"scripts/mojrokovnik-cases/cases-dialog.html",controller:casesDialogCtrl}),$scope.data={rivalType:["Tužilac","Tuženi","Poverilac","Dužnik","Usvojilac","Usvojenik","Izvršni poverilac","Izvršni dužnik","Predlagač","Protivnik predlagača","Privatni tužilac","Okrivljeni","Treće lice","Oštećeni"],caseType:["Izvršni postupak","Krivični postupak","Parnični postupak","Prekršajni postupak","Privredno pravo","Upravni postupak i sporovi","Vanparnični postupak","Ostalo"],caseElement:["Bračni spor","Izdržavanje","Kolektivni ugovori  spor","Materinstvo i očinstvo","Naknada štete","Nasledni spor","Obligacioni spor","Platni nalog","Poništaj usvojenja","Privredni spor","Radni spor","Roditeljsko pravo","Smetanje državine","Spor  povreda žiga ili firme","Spor authorskih prava","Spor male vrednosti","Stambeni spor","Svojinski spor","Zaštita od nasilja u porodici","Zaštita prava deteta","Ostalo"]}}}function casesSidenav(){return{controller:casesCtrl,link:function(scope,elem,attr,ctrl){}}}function casesTemplate(){return{link:function(scope,elem,attr,ctrl){}}}function clientsCtrl($scope,api,$uibModal){function clientDialogCtrl($uibModalInstance){$scope.save=function(client){$scope.editMode?api("clients").update(client).then(function(){$scope.editMode=!1,$uibModalInstance.close()}):api("clients").add(client).then(function(){$scope.clients.push(client),$uibModalInstance.close()})},$scope.cancel=function(){$uibModalInstance.dismiss()}}api("clients").fetch({client_delete:0}).then(function(clients){$scope.clients=clients,$scope.sClient=clients[0],api("cases").fetch({client_id:clients[0].client_id}).then(function(cases){$scope.cases=cases})}),$scope.selectClient=function(client){$scope.sClient=client,api("cases").fetch({client_id:client.client_id}).then(function(cases){$scope.cases=cases})},$scope.removeClient=function(client){api("clients")["delete"](client).then(function(){$scope.clients=_.without($scope.clients,client),$scope.sClient=$scope.clients[0]})},$scope.showDialog=function(client){client?($scope.client=client,$scope.editMode=!0):(delete $scope.client,$scope.editMode=!1),$uibModal.open({animation:!0,scope:$scope,templateUrl:"scripts/mojrokovnik-clients/clients-dialog.html",controller:clientDialogCtrl})}}function clientsSidenav(){return{controller:clientsCtrl,link:function(scope,elem,attr,ctrl){}}}function clientsTemplate(){return{link:function(scope,elem,attr,ctrl){}}}function apiService($q,$http,notify){function isOK(response){function isErrData(data){return data&&data._status&&"ERR"===data._status}return response.status>=200&&response.status<300&&!isErrData(response.data)}function http(config){return $q.when(config.url).then(function(url){return config.url=url,$http(config)}).then(function(response){return isOK(response)?response.data:$q.reject(response)})}var api=function(table){return{fetch:function(params){return http({url:"../server/api.php?table="+table,method:"GET",params:params}).then(function(response){return response})},add:function(params){return http({url:"../server/api.php?table="+table,method:"POST",params:params}).then(function(response){return notify.success(response.msg),response})},update:function(params){return http({url:"../server/api.php?table="+table,method:"PUT",params:params}).then(function(response){return notify.success(response.msg),response})},"delete":function(params){return http({url:"../server/api.php?table="+table,method:"DELETE",params:params}).then(function(response){return notify.success(response.msg),response})}}};return api}function mrLoginCtrl($location,$http,$cookies,$scope,notify,api){$scope.login=function(login){$http({url:"../server/mr-login.php",method:"POST",params:login}).then(function(response){response.data.login?api("users").fetch().then(function(user){user&&($cookies.putObject("user",user),$location.url("/clients"))}):notify.error(response.data.msg)})}}function mrMainNavitagion($location,authentification){return{templateUrl:"scripts/mojrokovnik/navigation/navigation.html",link:function(scope){scope.visible=authentification.isLoggedIn(),scope.isCurrentPath=function(value){return $location.$$path===value}}}}function notifyService($mdToast){function showToast(type,text){$mdToast.show({template:'<md-toast class="md-toast '+type+'">'+text+"</md-toast>",position:"top right"})}this.success=function(text){showToast("success",text)},this.warn=function(text){showToast("warn",text)},this.error=function(text){showToast("error",text)}}function datetimePicker(){return{scope:{model:"="},link:function(scope,elem,attr,ctrl){elem.datetimepicker({format:"MMMM Do YYYY, HH:mm",inline:!0,sideBySide:!0,defaultDate:scope.model}),elem.on("dp.change",function(e){scope.model=e.date._d,scope.$apply()})}}}function mojrokovnikAuth(api,$cookies){var self=this;api("users").fetch().then(function(user){user&&(self.user=user)}),this.getUser=function(){return self.user},this.isLoggedIn=function(){return!!$cookies.getObject("user")}}function mojrokovnikConf($routeProvider){$routeProvider.otherwise({redirectTo:"/clients"}),$routeProvider.when("/login",{templateUrl:"scripts/mojrokovnik/login/login.html"}),$routeProvider.when("/clients",{templateUrl:"scripts/mojrokovnik-clients/clients.html"}),$routeProvider.when("/cases",{templateUrl:"scripts/mojrokovnik-cases/cases.html"}),$routeProvider.when("/calendar",{templateUrl:"scripts/mojrokovnik-calendar/calendar.html"})}function calendarTemplate(api){return{controller:calendarCtrl,link:function(scope,element,attr,ctrl){function initializeCalendar(events){element.fullCalendar({header:{left:"prev,next today",center:"title",right:"month,agendaWeek,agendaDay"},height:angular.element("body").height(),firstDay:1,lang:"sr",scrollTime:"08:00:00",defaultView:"agendaWeek",slotDuration:"00:15:00",timezone:"UTC",selectable:!0,editable:!0,eventLimit:!0,events:events,select:function(startDate,endDate){scope.showDialog(startDate,endDate)},eventClick:function(event){scope.showDialog(event.start,event.end,event.data),console.log(event.data)},eventDrop:function(event){scope.showDialog(event.start,event.end,event.data)},eventResize:function(event){scope.showDialog(event.start,event.end,event.data)}})}api("calendars").fetch().then(function(events){var filterEvents=[];return angular.forEach(events,function(item){filterEvents.push({title:item.calendar_name+" - "+item.calendar_comment,start:item.calendar_startDate,end:item.calendar_endDate,data:item})}),initializeCalendar(filterEvents)}),scope.createEvent=function(event){var eventData={title:event.calendar_name+" - "+event.calendar_comment,start:event.calendar_startDate,end:event.calendar_endDate,data:event};element.fullCalendar("renderEvent",eventData,!0),element.fullCalendar("unselect")}}}}function calendarCtrl($scope,$q,$uibModal,api){function calendarDialogCtrl($uibModalInstance){$scope.save=function(calendar){calendar.calendar_startDate=calendar.calendar_startDate._d,calendar.calendar_endDate=moment(calendar.calendar_startDate).add(calendar.calendar_duration,"m")._d,calendar=_.omit(calendar,"calendar_duration"),calendar.calendar_id?api("calendars").update(calendar).then(function(){$uibModalInstance.close()}):api("calendars").add(calendar).then(function(data){calendar.calendar_id=data.id,$scope.createEvent(calendar),$uibModalInstance.close()})},$scope.cancel=function(){$uibModalInstance.dismiss()}}$scope.showDialog=function(startDate,endDate,data){data?($scope.calendar=data,$scope.calendar.calendar_startDate=startDate,$scope.calendar.calendar_endDate=endDate,$scope.calendar.calendar_duration=(moment(endDate)-moment(startDate))/6e4):$scope.calendar={calendar_startDate:startDate,calendar_endDate:endDate,calendar_duration:(moment(endDate)-moment(startDate))/6e4},$uibModal.open({animation:!0,scope:$scope,templateUrl:"scripts/mojrokovnik-calendar/calendar-dialog.html",controller:calendarDialogCtrl}),$scope.types=[{value:1,name:"Ročište"},{value:2,name:"Obaveza"}];var clients=api("clients").fetch(),cases=api("cases").fetch();$q.all([clients,cases]).then(function(values){$scope.clients=values[0],$scope.cases=values[1]})}}function casesCtrl($scope,api,$uibModal){function casesDialogCtrl($uibModalInstance){$scope.save=function(cases){$scope.editMode?api("cases").update(cases).then(function(){$scope.editMode=!1,$uibModalInstance.close()}):api("cases").add(cases).then(function(){$scope.cases.push(cases),$uibModalInstance.close()})},$scope.cancel=function(){$uibModalInstance.dismiss()}}api("clients").fetch({client_delete:0}).then(function(clients){$scope.clients=clients}),api("cases").fetch({case_delete:0}).then(function(cases){$scope.cases=cases,$scope.sCase=cases[0],$scope.client=$scope.getClient(cases[0].client_id)}),$scope.selectCase=function(ucase){$scope.sCase=ucase,$scope.client=$scope.getClient(ucase.client_id)},$scope.removeCase=function(cases){api("cases")["delete"](cases).then(function(){$scope.cases=_.without($scope.cases,cases),$scope.selCase=$scope.cases[0]})},$scope.getClient=function(client_id){return _.find($scope.clients,function(client){return client.client_id==client_id})},$scope.initCaseName=function(){$scope.newCase.case_name=$scope.getClient($scope.newCase.client_id).client_surname+" / "+$scope.newCase.case_rivalSurname+" / "+$scope.newCase.case_type},$scope.showDialog=function(cases){cases?($scope.newCase=cases,$scope.editMode=!0):(delete $scope.newCase,$scope.editMode=!1),$uibModal.open({animation:!0,scope:$scope,size:"lg",templateUrl:"scripts/mojrokovnik-cases/cases-dialog.html",controller:casesDialogCtrl}),$scope.data={rivalType:["Tužilac","Tuženi","Poverilac","Dužnik","Usvojilac","Usvojenik","Izvršni poverilac","Izvršni dužnik","Predlagač","Protivnik predlagača","Privatni tužilac","Okrivljeni","Treće lice","Oštećeni"],caseType:["Izvršni postupak","Krivični postupak","Parnični postupak","Prekršajni postupak","Privredno pravo","Upravni postupak i sporovi","Vanparnični postupak","Ostalo"],caseElement:["Bračni spor","Izdržavanje","Kolektivni ugovori  spor","Materinstvo i očinstvo","Naknada štete","Nasledni spor","Obligacioni spor","Platni nalog","Poništaj usvojenja","Privredni spor","Radni spor","Roditeljsko pravo","Smetanje državine","Spor  povreda žiga ili firme","Spor authorskih prava","Spor male vrednosti","Stambeni spor","Svojinski spor","Zaštita od nasilja u porodici","Zaštita prava deteta","Ostalo"]}}}function casesSidenav(){return{controller:casesCtrl,link:function(scope,elem,attr,ctrl){}}}function casesTemplate(){return{link:function(scope,elem,attr,ctrl){}}}function clientsCtrl($scope,api,$uibModal){function clientDialogCtrl($uibModalInstance){$scope.save=function(client){$scope.editMode?api("clients").update(client).then(function(){$scope.editMode=!1,$uibModalInstance.close()}):api("clients").add(client).then(function(){$scope.clients.push(client),$uibModalInstance.close()})},$scope.cancel=function(){$uibModalInstance.dismiss()}}api("clients").fetch({client_delete:0}).then(function(clients){$scope.clients=clients,$scope.sClient=clients[0],api("cases").fetch({client_id:clients[0].client_id}).then(function(cases){$scope.cases=cases})}),$scope.selectClient=function(client){$scope.sClient=client,api("cases").fetch({client_id:client.client_id}).then(function(cases){$scope.cases=cases})},$scope.removeClient=function(client){api("clients")["delete"](client).then(function(){$scope.clients=_.without($scope.clients,client),$scope.sClient=$scope.clients[0]})},$scope.showDialog=function(client){client?($scope.client=client,$scope.editMode=!0):(delete $scope.client,$scope.editMode=!1),$uibModal.open({animation:!0,scope:$scope,templateUrl:"scripts/mojrokovnik-clients/clients-dialog.html",controller:clientDialogCtrl})}}function clientsSidenav(){return{controller:clientsCtrl,link:function(scope,elem,attr,ctrl){}}}function clientsTemplate(){return{link:function(scope,elem,attr,ctrl){}}}function apiService($q,$http,notify){function isOK(response){function isErrData(data){return data&&data._status&&"ERR"===data._status}return response.status>=200&&response.status<300&&!isErrData(response.data)}function http(config){return $q.when(config.url).then(function(url){return config.url=url,$http(config)}).then(function(response){return isOK(response)?response.data:$q.reject(response)})}var api=function(table){return{fetch:function(params){return http({url:"../server/api.php?table="+table,method:"GET",params:params}).then(function(response){return response})},add:function(params){return http({url:"../server/api.php?table="+table,method:"POST",params:params}).then(function(response){return notify.success(response.msg),response})},update:function(params){return http({url:"../server/api.php?table="+table,method:"PUT",params:params}).then(function(response){return notify.success(response.msg),response})},"delete":function(params){return http({url:"../server/api.php?table="+table,method:"DELETE",params:params}).then(function(response){return notify.success(response.msg),response})}}};return api}function mrLoginCtrl($location,$http,$cookies,$scope,notify,api){$scope.login=function(login){$http({url:"../server/mr-login.php",method:"POST",params:login}).then(function(response){response.data.login?api("users").fetch().then(function(user){user&&($cookies.putObject("user",user),$location.url("/clients"))}):notify.error(response.data.msg)})}}function mrMainNavitagion($location,authentification){return{templateUrl:"scripts/mojrokovnik/navigation/navigation.html",link:function(scope){scope.visible=authentification.isLoggedIn(),scope.isCurrentPath=function(value){return $location.$$path===value}}}}function notifyService($mdToast){function showToast(type,text){$mdToast.show({template:'<md-toast class="md-toast '+type+'">'+text+"</md-toast>",position:"top right"})}this.success=function(text){showToast("success",text)},this.warn=function(text){showToast("warn",text)},this.error=function(text){showToast("error",text)}}function datetimePicker(){return{scope:{model:"="},link:function(scope,elem,attr,ctrl){elem.datetimepicker({format:"MMMM Do YYYY, HH:mm",inline:!0,sideBySide:!0,defaultDate:scope.model}),elem.on("dp.change",function(e){scope.model=e.date._d,scope.$apply()})}}}function mojrokovnikAuth(api,$cookies){var self=this;api("users").fetch().then(function(user){user&&(self.user=user)}),this.getUser=function(){return self.user},this.isLoggedIn=function(){return!!$cookies.getObject("user")}}function mojrokovnikConf($routeProvider){$routeProvider.otherwise({redirectTo:"/clients"}),$routeProvider.when("/login",{templateUrl:"scripts/mojrokovnik/login/login.html"}),$routeProvider.when("/clients",{templateUrl:"scripts/mojrokovnik-clients/clients.html"}),$routeProvider.when("/cases",{templateUrl:"scripts/mojrokovnik-cases/cases.html"}),$routeProvider.when("/calendar",{templateUrl:"scripts/mojrokovnik-calendar/calendar.html"})}function calendarTemplate(api){return{controller:calendarCtrl,link:function(scope,element,attr,ctrl){function initializeCalendar(events){element.fullCalendar({header:{left:"prev,next today",center:"title",right:"month,agendaWeek,agendaDay"},height:angular.element("body").height(),firstDay:1,lang:"sr",scrollTime:"08:00:00",defaultView:"agendaWeek",slotDuration:"00:15:00",timezone:"UTC",selectable:!0,editable:!0,eventLimit:!0,events:events,select:function(startDate,endDate){scope.showDialog(startDate,endDate)},eventClick:function(event){scope.showDialog(event.start,event.end,event.data),console.log(event.data)},eventDrop:function(event){
scope.showDialog(event.start,event.end,event.data)},eventResize:function(event){scope.showDialog(event.start,event.end,event.data)}})}api("calendars").fetch().then(function(events){var filterEvents=[];return angular.forEach(events,function(item){filterEvents.push({title:item.calendar_name+" - "+item.calendar_comment,start:item.calendar_startDate,end:item.calendar_endDate,data:item})}),initializeCalendar(filterEvents)}),scope.createEvent=function(event){var eventData={title:event.calendar_name+" - "+event.calendar_comment,start:event.calendar_startDate,end:event.calendar_endDate,data:event};element.fullCalendar("renderEvent",eventData,!0),element.fullCalendar("unselect")}}}}function calendarCtrl($scope,$q,$uibModal,api){function calendarDialogCtrl($uibModalInstance){$scope.save=function(calendar){calendar.calendar_startDate=calendar.calendar_startDate._d,calendar.calendar_endDate=moment(calendar.calendar_startDate).add(calendar.calendar_duration,"m")._d,calendar=_.omit(calendar,"calendar_duration"),calendar.calendar_id?api("calendars").update(calendar).then(function(){$uibModalInstance.close()}):api("calendars").add(calendar).then(function(data){calendar.calendar_id=data.id,$scope.createEvent(calendar),$uibModalInstance.close()})},$scope.cancel=function(){$uibModalInstance.dismiss()}}$scope.showDialog=function(startDate,endDate,data){data?($scope.calendar=data,$scope.calendar.calendar_startDate=startDate,$scope.calendar.calendar_endDate=endDate,$scope.calendar.calendar_duration=(moment(endDate)-moment(startDate))/6e4):$scope.calendar={calendar_startDate:startDate,calendar_endDate:endDate,calendar_duration:(moment(endDate)-moment(startDate))/6e4},$uibModal.open({animation:!0,scope:$scope,templateUrl:"scripts/mojrokovnik-calendar/calendar-dialog.html",controller:calendarDialogCtrl}),$scope.types=[{value:1,name:"Ročište"},{value:2,name:"Obaveza"}];var clients=api("clients").fetch(),cases=api("cases").fetch();$q.all([clients,cases]).then(function(values){$scope.clients=values[0],$scope.cases=values[1]})}}function casesCtrl($scope,api,$uibModal){function casesDialogCtrl($uibModalInstance){$scope.save=function(cases){$scope.editMode?api("cases").update(cases).then(function(){$scope.editMode=!1,$uibModalInstance.close()}):api("cases").add(cases).then(function(){$scope.cases.push(cases),$uibModalInstance.close()})},$scope.cancel=function(){$uibModalInstance.dismiss()}}api("clients").fetch({client_delete:0}).then(function(clients){$scope.clients=clients}),api("cases").fetch({case_delete:0}).then(function(cases){$scope.cases=cases,$scope.sCase=cases[0],$scope.client=$scope.getClient(cases[0].client_id)}),$scope.selectCase=function(ucase){$scope.sCase=ucase,$scope.client=$scope.getClient(ucase.client_id)},$scope.removeCase=function(cases){api("cases")["delete"](cases).then(function(){$scope.cases=_.without($scope.cases,cases),$scope.selCase=$scope.cases[0]})},$scope.getClient=function(client_id){return _.find($scope.clients,function(client){return client.client_id==client_id})},$scope.initCaseName=function(newCase){newCase.case_name=$scope.getClient(newCase.client_id).client_surname+" / "+newCase.case_rivalSurname+" / "+newCase.case_type},$scope.showDialog=function(cases){cases?($scope.newCase=cases,$scope.editMode=!0):(delete $scope.newCase,$scope.editMode=!1),$uibModal.open({animation:!0,scope:$scope,size:"lg",templateUrl:"scripts/mojrokovnik-cases/cases-dialog.html",controller:casesDialogCtrl}),$scope.data={rivalType:["Tužilac","Tuženi","Poverilac","Dužnik","Usvojilac","Usvojenik","Izvršni poverilac","Izvršni dužnik","Predlagač","Protivnik predlagača","Privatni tužilac","Okrivljeni","Treće lice","Oštećeni"],caseType:["Izvršni postupak","Krivični postupak","Parnični postupak","Prekršajni postupak","Privredno pravo","Upravni postupak i sporovi","Vanparnični postupak","Ostalo"],caseElement:["Bračni spor","Izdržavanje","Kolektivni ugovori  spor","Materinstvo i očinstvo","Naknada štete","Nasledni spor","Obligacioni spor","Platni nalog","Poništaj usvojenja","Privredni spor","Radni spor","Roditeljsko pravo","Smetanje državine","Spor  povreda žiga ili firme","Spor authorskih prava","Spor male vrednosti","Stambeni spor","Svojinski spor","Zaštita od nasilja u porodici","Zaštita prava deteta","Ostalo"]}}}function casesSidenav(){return{controller:casesCtrl,link:function(scope,elem,attr,ctrl){}}}function casesTemplate(){return{link:function(scope,elem,attr,ctrl){}}}function clientsCtrl($scope,api,$uibModal){function clientDialogCtrl($uibModalInstance){$scope.save=function(client){$scope.editMode?api("clients").update(client).then(function(){$scope.editMode=!1,$uibModalInstance.close()}):api("clients").add(client).then(function(){$scope.clients.push(client),$uibModalInstance.close()})},$scope.cancel=function(){$uibModalInstance.dismiss()}}api("clients").fetch({client_delete:0}).then(function(clients){$scope.clients=clients,$scope.sClient=clients[0],api("cases").fetch({client_id:clients[0].client_id}).then(function(cases){$scope.cases=cases})}),$scope.selectClient=function(client){$scope.sClient=client,api("cases").fetch({client_id:client.client_id}).then(function(cases){$scope.cases=cases})},$scope.removeClient=function(client){api("clients")["delete"](client).then(function(){$scope.clients=_.without($scope.clients,client),$scope.sClient=$scope.clients[0]})},$scope.showDialog=function(client){client?($scope.client=client,$scope.editMode=!0):(delete $scope.client,$scope.editMode=!1),$uibModal.open({animation:!0,scope:$scope,templateUrl:"scripts/mojrokovnik-clients/clients-dialog.html",controller:clientDialogCtrl})}}function clientsSidenav(){return{controller:clientsCtrl,link:function(scope,elem,attr,ctrl){}}}function clientsTemplate(){return{link:function(scope,elem,attr,ctrl){}}}function apiService($q,$http,notify){function isOK(response){function isErrData(data){return data&&data._status&&"ERR"===data._status}return response.status>=200&&response.status<300&&!isErrData(response.data)}function http(config){return $q.when(config.url).then(function(url){return config.url=url,$http(config)}).then(function(response){return isOK(response)?response.data:$q.reject(response)})}var api=function(table){return{fetch:function(params){return http({url:"../server/api.php?table="+table,method:"GET",params:params}).then(function(response){return response})},add:function(params){return http({url:"../server/api.php?table="+table,method:"POST",params:params}).then(function(response){return notify.success(response.msg),response})},update:function(params){return http({url:"../server/api.php?table="+table,method:"PUT",params:params}).then(function(response){return notify.success(response.msg),response})},"delete":function(params){return http({url:"../server/api.php?table="+table,method:"DELETE",params:params}).then(function(response){return notify.success(response.msg),response})}}};return api}function mrLoginCtrl($location,$http,$cookies,$scope,notify,api){$scope.login=function(login){$http({url:"../server/mr-login.php",method:"POST",params:login}).then(function(response){response.data.login?api("users").fetch().then(function(user){user&&($cookies.putObject("user",user),$location.url("/clients"))}):notify.error(response.data.msg)})}}function mrMainNavitagion($location,authentification){return{templateUrl:"scripts/mojrokovnik/navigation/navigation.html",link:function(scope){scope.visible=authentification.isLoggedIn(),scope.isCurrentPath=function(value){return $location.$$path===value}}}}function notifyService($mdToast){function showToast(type,text){$mdToast.show({template:'<md-toast class="md-toast '+type+'">'+text+"</md-toast>",position:"top right"})}this.success=function(text){showToast("success",text)},this.warn=function(text){showToast("warn",text)},this.error=function(text){showToast("error",text)}}function datetimePicker(){return{scope:{model:"="},link:function(scope,elem,attr,ctrl){elem.datetimepicker({format:"MMMM Do YYYY, HH:mm",inline:!0,sideBySide:!0,defaultDate:scope.model}),elem.on("dp.change",function(e){scope.model=e.date._d,scope.$apply()})}}}mojrokovnikAuth.$inject=["api","$cookies"],mojrokovnikConf.$inject=["$routeProvider"],angular.module("mojrokovnik",["ngRoute","ngCookies","pascalprecht.translate","mojrokovnik.api","mojrokovnik.login","mojrokovnik.navigation","mojrokovnik.notify","mojrokovnik.translate","mojrokovnik.ui","mojrokovnik.clients","mojrokovnik.calendar","mojrokovnik.cases"]).service("authentification",mojrokovnikAuth).config(["$routeProvider",mojrokovnikConf]).run(function($rootScope,$location,authentification){$rootScope.$on("$routeChangeStart",function(event,next){authentification.isLoggedIn()||$location.url("/login")})}),calendarTemplate.$inject=["api"],calendarCtrl.$inject=["$scope","$q","$uibModal","api"],angular.module("mojrokovnik.calendar",["ngMaterial","ui.bootstrap"]).controller("calendarCtrl",calendarCtrl).directive("calendarTemplate",calendarTemplate),casesCtrl.$inject=["$scope","api","$uibModal"],casesSidenav.$inject=[],casesTemplate.$inject=[],angular.module("mojrokovnik.cases",["ngMaterial"]).controller("casesCtrl",casesCtrl).directive("casesSidenav",casesSidenav).directive("casesTemplate",casesTemplate),clientsCtrl.$inject=["$scope","api","$uibModal"],clientsSidenav.$inject=[],clientsTemplate.$inject=[],angular.module("mojrokovnik.clients",["ngMaterial"]).controller("clientsCtrl",clientsCtrl).directive("clientsSidenav",clientsSidenav).directive("clientsTemplate",clientsTemplate),apiService.$inject=["$q","$http","notify"],angular.module("mojrokovnik.api",[]).service("api",apiService),mrLoginCtrl.$inject=["$location","$http","$cookies","$scope","notify","api"],angular.module("mojrokovnik.login",[]).controller("mrLoginCtrl",mrLoginCtrl),mrMainNavitagion.$inject=["$location","authentification"],angular.module("mojrokovnik.navigation",[]).directive("mrMainNavigation",mrMainNavitagion),notifyService.$inject=["$mdToast"],angular.module("mojrokovnik.notify",["ngMaterial"]).service("notify",notifyService),angular.module("mojrokovnik.translate",["pascalprecht.translate"]).config(function($translateProvider){$translateProvider.useSanitizeValueStrategy("escape")}),datetimePicker.$inject=[],angular.module("mojrokovnik.ui",[]).directive("mrDatetimePicker",datetimePicker),mojrokovnikAuth.$inject=["api","$cookies"],mojrokovnikConf.$inject=["$routeProvider"],angular.module("mojrokovnik",["ngRoute","ngCookies","pascalprecht.translate","mojrokovnik.api","mojrokovnik.login","mojrokovnik.navigation","mojrokovnik.notify","mojrokovnik.translate","mojrokovnik.ui","mojrokovnik.clients","mojrokovnik.calendar","mojrokovnik.cases"]).service("authentification",mojrokovnikAuth).config(["$routeProvider",mojrokovnikConf]).run(function($rootScope,$location,authentification){$rootScope.$on("$routeChangeStart",function(event,next){authentification.isLoggedIn()||$location.url("/login")})}),calendarTemplate.$inject=["api"],calendarCtrl.$inject=["$scope","$q","$uibModal","api"],angular.module("mojrokovnik.calendar",["ngMaterial","ui.bootstrap"]).controller("calendarCtrl",calendarCtrl).directive("calendarTemplate",calendarTemplate),casesCtrl.$inject=["$scope","api","$uibModal"],casesSidenav.$inject=[],casesTemplate.$inject=[],angular.module("mojrokovnik.cases",["ngMaterial"]).controller("casesCtrl",casesCtrl).directive("casesSidenav",casesSidenav).directive("casesTemplate",casesTemplate),clientsCtrl.$inject=["$scope","api","$uibModal"],clientsSidenav.$inject=[],clientsTemplate.$inject=[],angular.module("mojrokovnik.clients",["ngMaterial"]).controller("clientsCtrl",clientsCtrl).directive("clientsSidenav",clientsSidenav).directive("clientsTemplate",clientsTemplate),apiService.$inject=["$q","$http","notify"],angular.module("mojrokovnik.api",[]).service("api",apiService),mrLoginCtrl.$inject=["$location","$http","$cookies","$scope","notify","api"],angular.module("mojrokovnik.login",[]).controller("mrLoginCtrl",mrLoginCtrl),mrMainNavitagion.$inject=["$location","authentification"],angular.module("mojrokovnik.navigation",[]).directive("mrMainNavigation",mrMainNavitagion),notifyService.$inject=["$mdToast"],angular.module("mojrokovnik.notify",["ngMaterial"]).service("notify",notifyService),angular.module("mojrokovnik.translate",["pascalprecht.translate"]).config(function($translateProvider){$translateProvider.useSanitizeValueStrategy("escape")}),datetimePicker.$inject=[],angular.module("mojrokovnik.ui",[]).directive("mrDatetimePicker",datetimePicker),mojrokovnikAuth.$inject=["api","$cookies"],mojrokovnikConf.$inject=["$routeProvider"],angular.module("mojrokovnik",["ngRoute","ngCookies","pascalprecht.translate","mojrokovnik.api","mojrokovnik.login","mojrokovnik.navigation","mojrokovnik.notify","mojrokovnik.translate","mojrokovnik.ui","mojrokovnik.clients","mojrokovnik.calendar","mojrokovnik.cases"]).service("authentification",mojrokovnikAuth).config(["$routeProvider",mojrokovnikConf]).run(function($rootScope,$location,authentification){$rootScope.$on("$routeChangeStart",function(event,next){authentification.isLoggedIn()||$location.url("/login")})}),calendarTemplate.$inject=["api"],calendarCtrl.$inject=["$scope","$q","$uibModal","api"],angular.module("mojrokovnik.calendar",["ngMaterial","ui.bootstrap"]).controller("calendarCtrl",calendarCtrl).directive("calendarTemplate",calendarTemplate),casesCtrl.$inject=["$scope","api","$uibModal"],casesSidenav.$inject=[],casesTemplate.$inject=[],angular.module("mojrokovnik.cases",["ngMaterial"]).controller("casesCtrl",casesCtrl).directive("casesSidenav",casesSidenav).directive("casesTemplate",casesTemplate),clientsCtrl.$inject=["$scope","api","$uibModal"],clientsSidenav.$inject=[],clientsTemplate.$inject=[],angular.module("mojrokovnik.clients",["ngMaterial"]).controller("clientsCtrl",clientsCtrl).directive("clientsSidenav",clientsSidenav).directive("clientsTemplate",clientsTemplate),apiService.$inject=["$q","$http","notify"],angular.module("mojrokovnik.api",[]).service("api",apiService),mrLoginCtrl.$inject=["$location","$http","$cookies","$scope","notify","api"],angular.module("mojrokovnik.login",[]).controller("mrLoginCtrl",mrLoginCtrl),mrMainNavitagion.$inject=["$location","authentification"],angular.module("mojrokovnik.navigation",[]).directive("mrMainNavigation",mrMainNavitagion),notifyService.$inject=["$mdToast"],angular.module("mojrokovnik.notify",["ngMaterial"]).service("notify",notifyService),angular.module("mojrokovnik.translate",["pascalprecht.translate"]).config(function($translateProvider){$translateProvider.useSanitizeValueStrategy("escape")}),datetimePicker.$inject=[],angular.module("mojrokovnik.ui",[]).directive("mrDatetimePicker",datetimePicker),mojrokovnikAuth.$inject=["api","$cookies"],mojrokovnikConf.$inject=["$routeProvider"],angular.module("mojrokovnik",["ngRoute","ngCookies","pascalprecht.translate","mojrokovnik.api","mojrokovnik.login","mojrokovnik.navigation","mojrokovnik.notify","mojrokovnik.translate","mojrokovnik.ui","mojrokovnik.clients","mojrokovnik.calendar","mojrokovnik.cases"]).service("authentification",mojrokovnikAuth).config(["$routeProvider",mojrokovnikConf]).run(function($rootScope,$location,authentification){$rootScope.$on("$routeChangeStart",function(event,next){authentification.isLoggedIn()||$location.url("/login")})}),calendarTemplate.$inject=["api"],calendarCtrl.$inject=["$scope","$q","$uibModal","api"],angular.module("mojrokovnik.calendar",["ngMaterial","ui.bootstrap"]).controller("calendarCtrl",calendarCtrl).directive("calendarTemplate",calendarTemplate),casesCtrl.$inject=["$scope","api","$uibModal"],casesSidenav.$inject=[],casesTemplate.$inject=[],angular.module("mojrokovnik.cases",["ngMaterial"]).controller("casesCtrl",casesCtrl).directive("casesSidenav",casesSidenav).directive("casesTemplate",casesTemplate),clientsCtrl.$inject=["$scope","api","$uibModal"],clientsSidenav.$inject=[],clientsTemplate.$inject=[],angular.module("mojrokovnik.clients",["ngMaterial"]).controller("clientsCtrl",clientsCtrl).directive("clientsSidenav",clientsSidenav).directive("clientsTemplate",clientsTemplate),apiService.$inject=["$q","$http","notify"],angular.module("mojrokovnik.api",[]).service("api",apiService),mrLoginCtrl.$inject=["$location","$http","$cookies","$scope","notify","api"],angular.module("mojrokovnik.login",[]).controller("mrLoginCtrl",mrLoginCtrl),mrMainNavitagion.$inject=["$location","authentification"],angular.module("mojrokovnik.navigation",[]).directive("mrMainNavigation",mrMainNavitagion),notifyService.$inject=["$mdToast"],angular.module("mojrokovnik.notify",["ngMaterial"]).service("notify",notifyService),angular.module("mojrokovnik.translate",["pascalprecht.translate"]).config(function($translateProvider){$translateProvider.useSanitizeValueStrategy("escape")}),datetimePicker.$inject=[],angular.module("mojrokovnik.ui",[]).directive("mrDatetimePicker",datetimePicker),mojrokovnikAuth.$inject=["api","$cookies"],mojrokovnikConf.$inject=["$routeProvider"],angular.module("mojrokovnik",["ngRoute","ngCookies","pascalprecht.translate","mojrokovnik.api","mojrokovnik.login","mojrokovnik.navigation","mojrokovnik.notify","mojrokovnik.translate","mojrokovnik.ui","mojrokovnik.clients","mojrokovnik.calendar","mojrokovnik.cases"]).service("authentification",mojrokovnikAuth).config(["$routeProvider",mojrokovnikConf]).run(function($rootScope,$location,authentification){$rootScope.$on("$routeChangeStart",function(event,next){authentification.isLoggedIn()||$location.url("/login")})}),calendarTemplate.$inject=["api"],calendarCtrl.$inject=["$scope","$q","$uibModal","api"],angular.module("mojrokovnik.calendar",["ngMaterial","ui.bootstrap"]).controller("calendarCtrl",calendarCtrl).directive("calendarTemplate",calendarTemplate),casesCtrl.$inject=["$scope","api","$uibModal"],casesSidenav.$inject=[],casesTemplate.$inject=[],angular.module("mojrokovnik.cases",["ngMaterial"]).controller("casesCtrl",casesCtrl).directive("casesSidenav",casesSidenav).directive("casesTemplate",casesTemplate),clientsCtrl.$inject=["$scope","api","$uibModal"],clientsSidenav.$inject=[],clientsTemplate.$inject=[],angular.module("mojrokovnik.clients",["ngMaterial"]).controller("clientsCtrl",clientsCtrl).directive("clientsSidenav",clientsSidenav).directive("clientsTemplate",clientsTemplate),apiService.$inject=["$q","$http","notify"],angular.module("mojrokovnik.api",[]).service("api",apiService),mrLoginCtrl.$inject=["$location","$http","$cookies","$scope","notify","api"],angular.module("mojrokovnik.login",[]).controller("mrLoginCtrl",mrLoginCtrl),mrMainNavitagion.$inject=["$location","authentification"],angular.module("mojrokovnik.navigation",[]).directive("mrMainNavigation",mrMainNavitagion),notifyService.$inject=["$mdToast"],angular.module("mojrokovnik.notify",["ngMaterial"]).service("notify",notifyService),angular.module("mojrokovnik.translate",["pascalprecht.translate"]).config(function($translateProvider){$translateProvider.useSanitizeValueStrategy("escape")}),datetimePicker.$inject=[],angular.module("mojrokovnik.ui",[]).directive("mrDatetimePicker",datetimePicker),mojrokovnikAuth.$inject=["api","$cookies"],mojrokovnikConf.$inject=["$routeProvider"],angular.module("mojrokovnik",["ngRoute","ngCookies","pascalprecht.translate","mojrokovnik.api","mojrokovnik.login","mojrokovnik.navigation","mojrokovnik.notify","mojrokovnik.translate","mojrokovnik.ui","mojrokovnik.clients","mojrokovnik.calendar","mojrokovnik.cases"]).service("authentification",mojrokovnikAuth).config(["$routeProvider",mojrokovnikConf]).run(function($rootScope,$location,authentification){$rootScope.$on("$routeChangeStart",function(event,next){authentification.isLoggedIn()||$location.url("/login")})}),calendarTemplate.$inject=["api"],calendarCtrl.$inject=["$scope","$q","$uibModal","api"],angular.module("mojrokovnik.calendar",["ngMaterial","ui.bootstrap"]).controller("calendarCtrl",calendarCtrl).directive("calendarTemplate",calendarTemplate),casesCtrl.$inject=["$scope","api","$uibModal"],casesSidenav.$inject=[],casesTemplate.$inject=[],angular.module("mojrokovnik.cases",["ngMaterial"]).controller("casesCtrl",casesCtrl).directive("casesSidenav",casesSidenav).directive("casesTemplate",casesTemplate),clientsCtrl.$inject=["$scope","api","$uibModal"],clientsSidenav.$inject=[],clientsTemplate.$inject=[],angular.module("mojrokovnik.clients",["ngMaterial"]).controller("clientsCtrl",clientsCtrl).directive("clientsSidenav",clientsSidenav).directive("clientsTemplate",clientsTemplate),apiService.$inject=["$q","$http","notify"],angular.module("mojrokovnik.api",[]).service("api",apiService),mrLoginCtrl.$inject=["$location","$http","$cookies","$scope","notify","api"],angular.module("mojrokovnik.login",[]).controller("mrLoginCtrl",mrLoginCtrl),mrMainNavitagion.$inject=["$location","authentification"],angular.module("mojrokovnik.navigation",[]).directive("mrMainNavigation",mrMainNavitagion),notifyService.$inject=["$mdToast"],angular.module("mojrokovnik.notify",["ngMaterial"]).service("notify",notifyService),angular.module("mojrokovnik.translate",["pascalprecht.translate"]).config(function($translateProvider){$translateProvider.useSanitizeValueStrategy("escape")}),datetimePicker.$inject=[],angular.module("mojrokovnik.ui",[]).directive("mrDatetimePicker",datetimePicker),mojrokovnikAuth.$inject=["api","$cookies"],mojrokovnikConf.$inject=["$routeProvider"],angular.module("mojrokovnik",["ngRoute","ngCookies","pascalprecht.translate","mojrokovnik.api","mojrokovnik.login","mojrokovnik.navigation","mojrokovnik.notify","mojrokovnik.translate","mojrokovnik.ui","mojrokovnik.clients","mojrokovnik.calendar","mojrokovnik.cases"]).service("authentification",mojrokovnikAuth).config(["$routeProvider",mojrokovnikConf]).run(function($rootScope,$location,authentification){$rootScope.$on("$routeChangeStart",function(event,next){authentification.isLoggedIn()||$location.url("/login")})}),calendarTemplate.$inject=["api"],calendarCtrl.$inject=["$scope","$q","$uibModal","api"],angular.module("mojrokovnik.calendar",["ngMaterial","ui.bootstrap"]).controller("calendarCtrl",calendarCtrl).directive("calendarTemplate",calendarTemplate),casesCtrl.$inject=["$scope","api","$uibModal"],casesSidenav.$inject=[],casesTemplate.$inject=[],angular.module("mojrokovnik.cases",["ngMaterial"]).controller("casesCtrl",casesCtrl).directive("casesSidenav",casesSidenav).directive("casesTemplate",casesTemplate),clientsCtrl.$inject=["$scope","api","$uibModal"],clientsSidenav.$inject=[],clientsTemplate.$inject=[],angular.module("mojrokovnik.clients",["ngMaterial"]).controller("clientsCtrl",clientsCtrl).directive("clientsSidenav",clientsSidenav).directive("clientsTemplate",clientsTemplate),apiService.$inject=["$q","$http","notify"],angular.module("mojrokovnik.api",[]).service("api",apiService),mrLoginCtrl.$inject=["$location","$http","$cookies","$scope","notify","api"],angular.module("mojrokovnik.login",[]).controller("mrLoginCtrl",mrLoginCtrl),mrMainNavitagion.$inject=["$location","authentification"],angular.module("mojrokovnik.navigation",[]).directive("mrMainNavigation",mrMainNavitagion),notifyService.$inject=["$mdToast"],angular.module("mojrokovnik.notify",["ngMaterial"]).service("notify",notifyService),angular.module("mojrokovnik.translate",["pascalprecht.translate"]).config(function($translateProvider){$translateProvider.useSanitizeValueStrategy("escape")}),datetimePicker.$inject=[],angular.module("mojrokovnik.ui",[]).directive("mrDatetimePicker",datetimePicker),mojrokovnikAuth.$inject=["api","$cookies"],mojrokovnikConf.$inject=["$routeProvider"],angular.module("mojrokovnik",["ngRoute","ngCookies","pascalprecht.translate","mojrokovnik.api","mojrokovnik.login","mojrokovnik.navigation","mojrokovnik.notify","mojrokovnik.translate","mojrokovnik.ui","mojrokovnik.clients","mojrokovnik.calendar","mojrokovnik.cases"]).service("authentification",mojrokovnikAuth).config(["$routeProvider",mojrokovnikConf]).run(function($rootScope,$location,authentification){$rootScope.$on("$routeChangeStart",function(event,next){authentification.isLoggedIn()||$location.url("/login")})}),calendarTemplate.$inject=["api"],calendarCtrl.$inject=["$scope","$q","$uibModal","api"],angular.module("mojrokovnik.calendar",["ngMaterial","ui.bootstrap"]).controller("calendarCtrl",calendarCtrl).directive("calendarTemplate",calendarTemplate),casesCtrl.$inject=["$scope","api","$uibModal"],casesSidenav.$inject=[],casesTemplate.$inject=[],angular.module("mojrokovnik.cases",["ngMaterial"]).controller("casesCtrl",casesCtrl).directive("casesSidenav",casesSidenav).directive("casesTemplate",casesTemplate),clientsCtrl.$inject=["$scope","api","$uibModal"],clientsSidenav.$inject=[],clientsTemplate.$inject=[],angular.module("mojrokovnik.clients",["ngMaterial"]).controller("clientsCtrl",clientsCtrl).directive("clientsSidenav",clientsSidenav).directive("clientsTemplate",clientsTemplate),apiService.$inject=["$q","$http","notify"],angular.module("mojrokovnik.api",[]).service("api",apiService),mrLoginCtrl.$inject=["$location","$http","$cookies","$scope","notify","api"],angular.module("mojrokovnik.login",[]).controller("mrLoginCtrl",mrLoginCtrl),mrMainNavitagion.$inject=["$location","authentification"],angular.module("mojrokovnik.navigation",[]).directive("mrMainNavigation",mrMainNavitagion),notifyService.$inject=["$mdToast"],angular.module("mojrokovnik.notify",["ngMaterial"]).service("notify",notifyService),angular.module("mojrokovnik.translate",["pascalprecht.translate"]).config(function($translateProvider){$translateProvider.useSanitizeValueStrategy("escape")}),datetimePicker.$inject=[],angular.module("mojrokovnik.ui",[]).directive("mrDatetimePicker",datetimePicker),mojrokovnikAuth.$inject=["api","$cookies"],mojrokovnikConf.$inject=["$routeProvider"],angular.module("mojrokovnik",["ngRoute","ngCookies","pascalprecht.translate","mojrokovnik.api","mojrokovnik.login","mojrokovnik.navigation","mojrokovnik.notify","mojrokovnik.translate","mojrokovnik.ui","mojrokovnik.clients","mojrokovnik.calendar","mojrokovnik.cases"]).service("authentification",mojrokovnikAuth).config(["$routeProvider",mojrokovnikConf]).run(function($rootScope,$location,authentification){$rootScope.$on("$routeChangeStart",function(event,next){authentification.isLoggedIn()||$location.url("/login")})}),calendarTemplate.$inject=["api"],calendarCtrl.$inject=["$scope","$q","$uibModal","api"],angular.module("mojrokovnik.calendar",["ngMaterial","ui.bootstrap"]).controller("calendarCtrl",calendarCtrl).directive("calendarTemplate",calendarTemplate),casesCtrl.$inject=["$scope","api","$uibModal"],casesSidenav.$inject=[],casesTemplate.$inject=[],angular.module("mojrokovnik.cases",["ngMaterial"]).controller("casesCtrl",casesCtrl).directive("casesSidenav",casesSidenav).directive("casesTemplate",casesTemplate),clientsCtrl.$inject=["$scope","api","$uibModal"],clientsSidenav.$inject=[],clientsTemplate.$inject=[],angular.module("mojrokovnik.clients",["ngMaterial"]).controller("clientsCtrl",clientsCtrl).directive("clientsSidenav",clientsSidenav).directive("clientsTemplate",clientsTemplate),apiService.$inject=["$q","$http","notify"],angular.module("mojrokovnik.api",[]).service("api",apiService),mrLoginCtrl.$inject=["$location","$http","$cookies","$scope","notify","api"],angular.module("mojrokovnik.login",[]).controller("mrLoginCtrl",mrLoginCtrl),mrMainNavitagion.$inject=["$location","authentification"],angular.module("mojrokovnik.navigation",[]).directive("mrMainNavigation",mrMainNavitagion),notifyService.$inject=["$mdToast"],angular.module("mojrokovnik.notify",["ngMaterial"]).service("notify",notifyService),angular.module("mojrokovnik.translate",["pascalprecht.translate"]).config(function($translateProvider){$translateProvider.useSanitizeValueStrategy("escape")}),datetimePicker.$inject=[],angular.module("mojrokovnik.ui",[]).directive("mrDatetimePicker",datetimePicker),mojrokovnikAuth.$inject=["api","$cookies"],mojrokovnikConf.$inject=["$routeProvider"],angular.module("mojrokovnik",["ngRoute","ngCookies","pascalprecht.translate","mojrokovnik.api","mojrokovnik.login","mojrokovnik.navigation","mojrokovnik.notify","mojrokovnik.translate","mojrokovnik.ui","mojrokovnik.clients","mojrokovnik.calendar","mojrokovnik.cases"]).service("authentification",mojrokovnikAuth).config(["$routeProvider",mojrokovnikConf]).run(function($rootScope,$location,authentification){$rootScope.$on("$routeChangeStart",function(event,next){authentification.isLoggedIn()||$location.url("/login")})}),calendarTemplate.$inject=["api"],calendarCtrl.$inject=["$scope","$q","$uibModal","api"],angular.module("mojrokovnik.calendar",["ngMaterial","ui.bootstrap"]).controller("calendarCtrl",calendarCtrl).directive("calendarTemplate",calendarTemplate),casesCtrl.$inject=["$scope","api","$uibModal"],casesSidenav.$inject=[],casesTemplate.$inject=[],angular.module("mojrokovnik.cases",["ngMaterial"]).controller("casesCtrl",casesCtrl).directive("casesSidenav",casesSidenav).directive("casesTemplate",casesTemplate),clientsCtrl.$inject=["$scope","api","$uibModal"],clientsSidenav.$inject=[],clientsTemplate.$inject=[],angular.module("mojrokovnik.clients",["ngMaterial"]).controller("clientsCtrl",clientsCtrl).directive("clientsSidenav",clientsSidenav).directive("clientsTemplate",clientsTemplate),apiService.$inject=["$q","$http","notify"],angular.module("mojrokovnik.api",[]).service("api",apiService),mrLoginCtrl.$inject=["$location","$http","$cookies","$scope","notify","api"],angular.module("mojrokovnik.login",[]).controller("mrLoginCtrl",mrLoginCtrl),mrMainNavitagion.$inject=["$location","authentification"],angular.module("mojrokovnik.navigation",[]).directive("mrMainNavigation",mrMainNavitagion),notifyService.$inject=["$mdToast"],angular.module("mojrokovnik.notify",["ngMaterial"]).service("notify",notifyService),angular.module("mojrokovnik.translate",["pascalprecht.translate"]).config(function($translateProvider){$translateProvider.useSanitizeValueStrategy("escape")}),datetimePicker.$inject=[],angular.module("mojrokovnik.ui",[]).directive("mrDatetimePicker",datetimePicker),mojrokovnikAuth.$inject=["api","$cookies"],mojrokovnikConf.$inject=["$routeProvider"],angular.module("mojrokovnik",["ngRoute","ngCookies","pascalprecht.translate","mojrokovnik.api","mojrokovnik.login","mojrokovnik.navigation","mojrokovnik.notify","mojrokovnik.translate","mojrokovnik.ui","mojrokovnik.clients","mojrokovnik.calendar","mojrokovnik.cases"]).service("authentification",mojrokovnikAuth).config(["$routeProvider",mojrokovnikConf]).run(function($rootScope,$location,authentification){$rootScope.$on("$routeChangeStart",function(event,next){authentification.isLoggedIn()||$location.url("/login")})}),calendarTemplate.$inject=["api"],calendarCtrl.$inject=["$scope","$q","$uibModal","api"],angular.module("mojrokovnik.calendar",["ngMaterial","ui.bootstrap"]).controller("calendarCtrl",calendarCtrl).directive("calendarTemplate",calendarTemplate),casesCtrl.$inject=["$scope","api","$uibModal"],casesSidenav.$inject=[],casesTemplate.$inject=[],angular.module("mojrokovnik.cases",["ngMaterial"]).controller("casesCtrl",casesCtrl).directive("casesSidenav",casesSidenav).directive("casesTemplate",casesTemplate),clientsCtrl.$inject=["$scope","api","$uibModal"],clientsSidenav.$inject=[],clientsTemplate.$inject=[],angular.module("mojrokovnik.clients",["ngMaterial"]).controller("clientsCtrl",clientsCtrl).directive("clientsSidenav",clientsSidenav).directive("clientsTemplate",clientsTemplate),apiService.$inject=["$q","$http","notify"],angular.module("mojrokovnik.api",[]).service("api",apiService),mrLoginCtrl.$inject=["$location","$http","$cookies","$scope","notify","api"],angular.module("mojrokovnik.login",[]).controller("mrLoginCtrl",mrLoginCtrl),mrMainNavitagion.$inject=["$location","authentification"],angular.module("mojrokovnik.navigation",[]).directive("mrMainNavigation",mrMainNavitagion),notifyService.$inject=["$mdToast"],angular.module("mojrokovnik.notify",["ngMaterial"]).service("notify",notifyService),angular.module("mojrokovnik.translate",["pascalprecht.translate"]).config(function($translateProvider){$translateProvider.useSanitizeValueStrategy("escape");
}),datetimePicker.$inject=[],angular.module("mojrokovnik.ui",[]).directive("mrDatetimePicker",datetimePicker),mojrokovnikAuth.$inject=["api","$cookies"],mojrokovnikConf.$inject=["$routeProvider"],angular.module("mojrokovnik",["ngRoute","ngCookies","pascalprecht.translate","mojrokovnik.api","mojrokovnik.login","mojrokovnik.navigation","mojrokovnik.notify","mojrokovnik.translate","mojrokovnik.ui","mojrokovnik.clients","mojrokovnik.calendar","mojrokovnik.cases"]).service("authentification",mojrokovnikAuth).config(["$routeProvider",mojrokovnikConf]).run(function($rootScope,$location,authentification){$rootScope.$on("$routeChangeStart",function(event,next){authentification.isLoggedIn()||$location.url("/login")})}),calendarTemplate.$inject=["api"],calendarCtrl.$inject=["$scope","$q","$uibModal","api"],angular.module("mojrokovnik.calendar",["ngMaterial","ui.bootstrap"]).controller("calendarCtrl",calendarCtrl).directive("calendarTemplate",calendarTemplate),casesCtrl.$inject=["$scope","api","$uibModal"],casesSidenav.$inject=[],casesTemplate.$inject=[],angular.module("mojrokovnik.cases",["ngMaterial"]).controller("casesCtrl",casesCtrl).directive("casesSidenav",casesSidenav).directive("casesTemplate",casesTemplate),clientsCtrl.$inject=["$scope","api","$uibModal"],clientsSidenav.$inject=[],clientsTemplate.$inject=[],angular.module("mojrokovnik.clients",["ngMaterial"]).controller("clientsCtrl",clientsCtrl).directive("clientsSidenav",clientsSidenav).directive("clientsTemplate",clientsTemplate),apiService.$inject=["$q","$http","notify"],angular.module("mojrokovnik.api",[]).service("api",apiService),mrLoginCtrl.$inject=["$location","$http","$cookies","$scope","notify","api"],angular.module("mojrokovnik.login",[]).controller("mrLoginCtrl",mrLoginCtrl),mrMainNavitagion.$inject=["$location","authentification"],angular.module("mojrokovnik.navigation",[]).directive("mrMainNavigation",mrMainNavitagion),notifyService.$inject=["$mdToast"],angular.module("mojrokovnik.notify",["ngMaterial"]).service("notify",notifyService),angular.module("mojrokovnik.translate",["pascalprecht.translate"]).config(function($translateProvider){$translateProvider.useSanitizeValueStrategy("escape")}),datetimePicker.$inject=[],angular.module("mojrokovnik.ui",[]).directive("mrDatetimePicker",datetimePicker),mojrokovnikAuth.$inject=["api","$cookies"],mojrokovnikConf.$inject=["$routeProvider"],angular.module("mojrokovnik",["ngRoute","ngCookies","pascalprecht.translate","mojrokovnik.api","mojrokovnik.login","mojrokovnik.navigation","mojrokovnik.notify","mojrokovnik.translate","mojrokovnik.ui","mojrokovnik.clients","mojrokovnik.calendar","mojrokovnik.cases"]).service("authentification",mojrokovnikAuth).config(["$routeProvider",mojrokovnikConf]).run(function($rootScope,$location,authentification){$rootScope.$on("$routeChangeStart",function(event,next){authentification.isLoggedIn()||$location.url("/login")})}),calendarTemplate.$inject=["api"],calendarCtrl.$inject=["$scope","$q","$uibModal","api"],angular.module("mojrokovnik.calendar",["ngMaterial","ui.bootstrap"]).controller("calendarCtrl",calendarCtrl).directive("calendarTemplate",calendarTemplate),casesCtrl.$inject=["$scope","api","$uibModal"],casesSidenav.$inject=[],casesTemplate.$inject=[],angular.module("mojrokovnik.cases",["ngMaterial"]).controller("casesCtrl",casesCtrl).directive("casesSidenav",casesSidenav).directive("casesTemplate",casesTemplate),clientsCtrl.$inject=["$scope","api","$uibModal"],clientsSidenav.$inject=[],clientsTemplate.$inject=[],angular.module("mojrokovnik.clients",["ngMaterial"]).controller("clientsCtrl",clientsCtrl).directive("clientsSidenav",clientsSidenav).directive("clientsTemplate",clientsTemplate),apiService.$inject=["$q","$http","notify"],angular.module("mojrokovnik.api",[]).service("api",apiService),mrLoginCtrl.$inject=["$location","$http","$cookies","$scope","notify","api"],angular.module("mojrokovnik.login",[]).controller("mrLoginCtrl",mrLoginCtrl),mrMainNavitagion.$inject=["$location","authentification"],angular.module("mojrokovnik.navigation",[]).directive("mrMainNavigation",mrMainNavitagion),notifyService.$inject=["$mdToast"],angular.module("mojrokovnik.notify",["ngMaterial"]).service("notify",notifyService),angular.module("mojrokovnik.translate",["pascalprecht.translate"]).config(function($translateProvider){$translateProvider.useSanitizeValueStrategy("escape")}),datetimePicker.$inject=[],angular.module("mojrokovnik.ui",[]).directive("mrDatetimePicker",datetimePicker),mojrokovnikAuth.$inject=["api","$cookies"],mojrokovnikConf.$inject=["$routeProvider"],angular.module("mojrokovnik",["ngRoute","ngCookies","pascalprecht.translate","mojrokovnik.api","mojrokovnik.login","mojrokovnik.navigation","mojrokovnik.notify","mojrokovnik.translate","mojrokovnik.ui","mojrokovnik.clients","mojrokovnik.calendar","mojrokovnik.cases"]).service("authentification",mojrokovnikAuth).config(["$routeProvider",mojrokovnikConf]).run(function($rootScope,$location,authentification){$rootScope.$on("$routeChangeStart",function(event,next){authentification.isLoggedIn()||$location.url("/login")})}),calendarTemplate.$inject=["api"],calendarCtrl.$inject=["$scope","$q","$uibModal","api"],angular.module("mojrokovnik.calendar",["ngMaterial","ui.bootstrap"]).controller("calendarCtrl",calendarCtrl).directive("calendarTemplate",calendarTemplate),casesCtrl.$inject=["$scope","api","$uibModal"],casesSidenav.$inject=[],casesTemplate.$inject=[],angular.module("mojrokovnik.cases",["ngMaterial"]).controller("casesCtrl",casesCtrl).directive("casesSidenav",casesSidenav).directive("casesTemplate",casesTemplate),clientsCtrl.$inject=["$scope","api","$uibModal"],clientsSidenav.$inject=[],clientsTemplate.$inject=[],angular.module("mojrokovnik.clients",["ngMaterial"]).controller("clientsCtrl",clientsCtrl).directive("clientsSidenav",clientsSidenav).directive("clientsTemplate",clientsTemplate),apiService.$inject=["$q","$http","notify"],angular.module("mojrokovnik.api",[]).service("api",apiService),mrLoginCtrl.$inject=["$location","$http","$cookies","$scope","notify","api"],angular.module("mojrokovnik.login",[]).controller("mrLoginCtrl",mrLoginCtrl),mrMainNavitagion.$inject=["$location","authentification"],angular.module("mojrokovnik.navigation",[]).directive("mrMainNavigation",mrMainNavitagion),notifyService.$inject=["$mdToast"],angular.module("mojrokovnik.notify",["ngMaterial"]).service("notify",notifyService),angular.module("mojrokovnik.translate",["pascalprecht.translate"]).config(function($translateProvider){$translateProvider.useSanitizeValueStrategy("escape")}),datetimePicker.$inject=[],angular.module("mojrokovnik.ui",[]).directive("mrDatetimePicker",datetimePicker),mojrokovnikAuth.$inject=["api","$cookies"],mojrokovnikConf.$inject=["$routeProvider"],angular.module("mojrokovnik",["ngRoute","ngCookies","pascalprecht.translate","mojrokovnik.api","mojrokovnik.login","mojrokovnik.navigation","mojrokovnik.notify","mojrokovnik.translate","mojrokovnik.ui","mojrokovnik.clients","mojrokovnik.calendar","mojrokovnik.cases"]).service("authentification",mojrokovnikAuth).config(["$routeProvider",mojrokovnikConf]).run(function($rootScope,$location,authentification){$rootScope.$on("$routeChangeStart",function(event,next){authentification.isLoggedIn()||$location.url("/login")})}),calendarTemplate.$inject=["api"],calendarCtrl.$inject=["$scope","$q","$uibModal","api"],angular.module("mojrokovnik.calendar",["ngMaterial","ui.bootstrap"]).controller("calendarCtrl",calendarCtrl).directive("calendarTemplate",calendarTemplate),casesCtrl.$inject=["$scope","api","$uibModal"],casesSidenav.$inject=[],casesTemplate.$inject=[],angular.module("mojrokovnik.cases",["ngMaterial"]).controller("casesCtrl",casesCtrl).directive("casesSidenav",casesSidenav).directive("casesTemplate",casesTemplate),clientsCtrl.$inject=["$scope","api","$uibModal"],clientsSidenav.$inject=[],clientsTemplate.$inject=[],angular.module("mojrokovnik.clients",["ngMaterial"]).controller("clientsCtrl",clientsCtrl).directive("clientsSidenav",clientsSidenav).directive("clientsTemplate",clientsTemplate),apiService.$inject=["$q","$http","notify"],angular.module("mojrokovnik.api",[]).service("api",apiService),mrLoginCtrl.$inject=["$location","$http","$cookies","$scope","notify","api"],angular.module("mojrokovnik.login",[]).controller("mrLoginCtrl",mrLoginCtrl),mrMainNavitagion.$inject=["$location","authentification"],angular.module("mojrokovnik.navigation",[]).directive("mrMainNavigation",mrMainNavitagion),notifyService.$inject=["$mdToast"],angular.module("mojrokovnik.notify",["ngMaterial"]).service("notify",notifyService),angular.module("mojrokovnik.translate",["pascalprecht.translate"]).config(function($translateProvider){$translateProvider.useSanitizeValueStrategy("escape")}),datetimePicker.$inject=[],angular.module("mojrokovnik.ui",[]).directive("mrDatetimePicker",datetimePicker),mojrokovnikAuth.$inject=["api","$cookies"],mojrokovnikConf.$inject=["$routeProvider"],angular.module("mojrokovnik",["ngRoute","ngCookies","pascalprecht.translate","mojrokovnik.api","mojrokovnik.login","mojrokovnik.navigation","mojrokovnik.notify","mojrokovnik.translate","mojrokovnik.ui","mojrokovnik.clients","mojrokovnik.calendar","mojrokovnik.cases"]).service("authentification",mojrokovnikAuth).config(["$routeProvider",mojrokovnikConf]).run(function($rootScope,$location,authentification){$rootScope.$on("$routeChangeStart",function(event,next){authentification.isLoggedIn()||$location.url("/login")})}),calendarTemplate.$inject=["api"],calendarCtrl.$inject=["$scope","$q","$uibModal","api"],angular.module("mojrokovnik.calendar",["ngMaterial","ui.bootstrap"]).controller("calendarCtrl",calendarCtrl).directive("calendarTemplate",calendarTemplate),casesCtrl.$inject=["$scope","api","$uibModal"],casesSidenav.$inject=[],casesTemplate.$inject=[],angular.module("mojrokovnik.cases",["ngMaterial"]).controller("casesCtrl",casesCtrl).directive("casesSidenav",casesSidenav).directive("casesTemplate",casesTemplate),clientsCtrl.$inject=["$scope","api","$uibModal"],clientsSidenav.$inject=[],clientsTemplate.$inject=[],angular.module("mojrokovnik.clients",["ngMaterial"]).controller("clientsCtrl",clientsCtrl).directive("clientsSidenav",clientsSidenav).directive("clientsTemplate",clientsTemplate),apiService.$inject=["$q","$http","notify"],angular.module("mojrokovnik.api",[]).service("api",apiService),mrLoginCtrl.$inject=["$location","$http","$cookies","$scope","notify","api"],angular.module("mojrokovnik.login",[]).controller("mrLoginCtrl",mrLoginCtrl),mrMainNavitagion.$inject=["$location","authentification"],angular.module("mojrokovnik.navigation",[]).directive("mrMainNavigation",mrMainNavitagion),notifyService.$inject=["$mdToast"],angular.module("mojrokovnik.notify",["ngMaterial"]).service("notify",notifyService),angular.module("mojrokovnik.translate",["pascalprecht.translate"]).config(function($translateProvider){$translateProvider.useSanitizeValueStrategy("escape")}),datetimePicker.$inject=[],angular.module("mojrokovnik.ui",[]).directive("mrDatetimePicker",datetimePicker),mojrokovnikAuth.$inject=["api","$cookies"],mojrokovnikConf.$inject=["$routeProvider"],angular.module("mojrokovnik",["ngRoute","ngCookies","pascalprecht.translate","mojrokovnik.api","mojrokovnik.login","mojrokovnik.navigation","mojrokovnik.notify","mojrokovnik.translate","mojrokovnik.ui","mojrokovnik.clients","mojrokovnik.calendar","mojrokovnik.cases"]).service("authentification",mojrokovnikAuth).config(["$routeProvider",mojrokovnikConf]).run(function($rootScope,$location,authentification){$rootScope.$on("$routeChangeStart",function(event,next){authentification.isLoggedIn()||$location.url("/login")})}),calendarTemplate.$inject=["api"],calendarCtrl.$inject=["$scope","$q","$uibModal","api"],angular.module("mojrokovnik.calendar",["ngMaterial","ui.bootstrap"]).controller("calendarCtrl",calendarCtrl).directive("calendarTemplate",calendarTemplate),casesCtrl.$inject=["$scope","api","$uibModal"],casesSidenav.$inject=[],casesTemplate.$inject=[],angular.module("mojrokovnik.cases",["ngMaterial"]).controller("casesCtrl",casesCtrl).directive("casesSidenav",casesSidenav).directive("casesTemplate",casesTemplate),clientsCtrl.$inject=["$scope","api","$uibModal"],clientsSidenav.$inject=[],clientsTemplate.$inject=[],angular.module("mojrokovnik.clients",["ngMaterial"]).controller("clientsCtrl",clientsCtrl).directive("clientsSidenav",clientsSidenav).directive("clientsTemplate",clientsTemplate),apiService.$inject=["$q","$http","notify"],angular.module("mojrokovnik.api",[]).service("api",apiService),mrLoginCtrl.$inject=["$location","$http","$cookies","$scope","notify","api"],angular.module("mojrokovnik.login",[]).controller("mrLoginCtrl",mrLoginCtrl),mrMainNavitagion.$inject=["$location","authentification"],angular.module("mojrokovnik.navigation",[]).directive("mrMainNavigation",mrMainNavitagion),notifyService.$inject=["$mdToast"],angular.module("mojrokovnik.notify",["ngMaterial"]).service("notify",notifyService),angular.module("mojrokovnik.translate",["pascalprecht.translate"]).config(function($translateProvider){$translateProvider.useSanitizeValueStrategy("escape")}),datetimePicker.$inject=[],angular.module("mojrokovnik.ui",[]).directive("mrDatetimePicker",datetimePicker),mojrokovnikAuth.$inject=["api","$cookies"],mojrokovnikConf.$inject=["$routeProvider"],angular.module("mojrokovnik",["ngRoute","ngCookies","pascalprecht.translate","mojrokovnik.api","mojrokovnik.login","mojrokovnik.navigation","mojrokovnik.notify","mojrokovnik.translate","mojrokovnik.ui","mojrokovnik.clients","mojrokovnik.calendar","mojrokovnik.cases"]).service("authentification",mojrokovnikAuth).config(["$routeProvider",mojrokovnikConf]).run(function($rootScope,$location,authentification){$rootScope.$on("$routeChangeStart",function(event,next){authentification.isLoggedIn()||$location.url("/login")})}),calendarTemplate.$inject=["api"],calendarCtrl.$inject=["$scope","$q","$uibModal","api"],angular.module("mojrokovnik.calendar",["ngMaterial","ui.bootstrap"]).controller("calendarCtrl",calendarCtrl).directive("calendarTemplate",calendarTemplate),casesCtrl.$inject=["$scope","api","$uibModal"],casesSidenav.$inject=[],casesTemplate.$inject=[],angular.module("mojrokovnik.cases",["ngMaterial"]).controller("casesCtrl",casesCtrl).directive("casesSidenav",casesSidenav).directive("casesTemplate",casesTemplate),clientsCtrl.$inject=["$scope","api","$uibModal"],clientsSidenav.$inject=[],clientsTemplate.$inject=[],angular.module("mojrokovnik.clients",["ngMaterial"]).controller("clientsCtrl",clientsCtrl).directive("clientsSidenav",clientsSidenav).directive("clientsTemplate",clientsTemplate),apiService.$inject=["$q","$http","notify"],angular.module("mojrokovnik.api",[]).service("api",apiService),mrLoginCtrl.$inject=["$location","$http","$cookies","$scope","notify","api"],angular.module("mojrokovnik.login",[]).controller("mrLoginCtrl",mrLoginCtrl),mrMainNavitagion.$inject=["$location","authentification"],angular.module("mojrokovnik.navigation",[]).directive("mrMainNavigation",mrMainNavitagion),notifyService.$inject=["$mdToast"],angular.module("mojrokovnik.notify",["ngMaterial"]).service("notify",notifyService),angular.module("mojrokovnik.translate",["pascalprecht.translate"]).config(function($translateProvider){$translateProvider.useSanitizeValueStrategy("escape")}),datetimePicker.$inject=[],angular.module("mojrokovnik.ui",[]).directive("mrDatetimePicker",datetimePicker),mojrokovnikAuth.$inject=["api","$cookies"],mojrokovnikConf.$inject=["$routeProvider"],angular.module("mojrokovnik",["ngRoute","ngCookies","pascalprecht.translate","mojrokovnik.api","mojrokovnik.login","mojrokovnik.navigation","mojrokovnik.notify","mojrokovnik.translate","mojrokovnik.ui","mojrokovnik.clients","mojrokovnik.calendar","mojrokovnik.cases"]).service("authentification",mojrokovnikAuth).config(["$routeProvider",mojrokovnikConf]).run(function($rootScope,$location,authentification){$rootScope.$on("$routeChangeStart",function(event,next){authentification.isLoggedIn()||$location.url("/login")})}),calendarTemplate.$inject=["api"],calendarCtrl.$inject=["$scope","$q","$uibModal","api"],angular.module("mojrokovnik.calendar",["ngMaterial","ui.bootstrap"]).controller("calendarCtrl",calendarCtrl).directive("calendarTemplate",calendarTemplate),casesCtrl.$inject=["$scope","api","$uibModal"],casesSidenav.$inject=[],casesTemplate.$inject=[],angular.module("mojrokovnik.cases",["ngMaterial"]).controller("casesCtrl",casesCtrl).directive("casesSidenav",casesSidenav).directive("casesTemplate",casesTemplate),clientsCtrl.$inject=["$scope","api","$uibModal"],clientsSidenav.$inject=[],clientsTemplate.$inject=[],angular.module("mojrokovnik.clients",["ngMaterial"]).controller("clientsCtrl",clientsCtrl).directive("clientsSidenav",clientsSidenav).directive("clientsTemplate",clientsTemplate),apiService.$inject=["$q","$http","notify"],angular.module("mojrokovnik.api",[]).service("api",apiService),mrLoginCtrl.$inject=["$location","$http","$cookies","$scope","notify","api"],angular.module("mojrokovnik.login",[]).controller("mrLoginCtrl",mrLoginCtrl),mrMainNavitagion.$inject=["$location","authentification"],angular.module("mojrokovnik.navigation",[]).directive("mrMainNavigation",mrMainNavitagion),notifyService.$inject=["$mdToast"],angular.module("mojrokovnik.notify",["ngMaterial"]).service("notify",notifyService),angular.module("mojrokovnik.translate",["pascalprecht.translate"]).config(function($translateProvider){$translateProvider.useSanitizeValueStrategy("escape")}),datetimePicker.$inject=[],angular.module("mojrokovnik.ui",[]).directive("mrDatetimePicker",datetimePicker),mojrokovnikAuth.$inject=["api","$cookies"],mojrokovnikConf.$inject=["$routeProvider"],angular.module("mojrokovnik",["ngRoute","ngCookies","pascalprecht.translate","mojrokovnik.api","mojrokovnik.login","mojrokovnik.navigation","mojrokovnik.notify","mojrokovnik.translate","mojrokovnik.ui","mojrokovnik.clients","mojrokovnik.calendar","mojrokovnik.cases"]).service("authentification",mojrokovnikAuth).config(["$routeProvider",mojrokovnikConf]).run(function($rootScope,$location,authentification){$rootScope.$on("$routeChangeStart",function(event,next){authentification.isLoggedIn()||$location.url("/login")})}),calendarTemplate.$inject=["api"],calendarCtrl.$inject=["$scope","$q","$uibModal","api"],angular.module("mojrokovnik.calendar",["ngMaterial","ui.bootstrap"]).controller("calendarCtrl",calendarCtrl).directive("calendarTemplate",calendarTemplate),casesCtrl.$inject=["$scope","api","$uibModal"],casesSidenav.$inject=[],casesTemplate.$inject=[],angular.module("mojrokovnik.cases",["ngMaterial"]).controller("casesCtrl",casesCtrl).directive("casesSidenav",casesSidenav).directive("casesTemplate",casesTemplate),clientsCtrl.$inject=["$scope","api","$uibModal"],clientsSidenav.$inject=[],clientsTemplate.$inject=[],angular.module("mojrokovnik.clients",["ngMaterial"]).controller("clientsCtrl",clientsCtrl).directive("clientsSidenav",clientsSidenav).directive("clientsTemplate",clientsTemplate),apiService.$inject=["$q","$http","notify"],angular.module("mojrokovnik.api",[]).service("api",apiService),mrLoginCtrl.$inject=["$location","$http","$cookies","$scope","notify","api"],angular.module("mojrokovnik.login",[]).controller("mrLoginCtrl",mrLoginCtrl),mrMainNavitagion.$inject=["$location","authentification"],angular.module("mojrokovnik.navigation",[]).directive("mrMainNavigation",mrMainNavitagion),notifyService.$inject=["$mdToast"],angular.module("mojrokovnik.notify",["ngMaterial"]).service("notify",notifyService),angular.module("mojrokovnik.translate",["pascalprecht.translate"]).config(function($translateProvider){$translateProvider.useSanitizeValueStrategy("escape")}),datetimePicker.$inject=[],angular.module("mojrokovnik.ui",[]).directive("mrDatetimePicker",datetimePicker),mojrokovnikAuth.$inject=["api","$cookies"],mojrokovnikConf.$inject=["$routeProvider"],angular.module("mojrokovnik",["ngRoute","ngCookies","pascalprecht.translate","mojrokovnik.api","mojrokovnik.login","mojrokovnik.navigation","mojrokovnik.notify","mojrokovnik.translate","mojrokovnik.ui","mojrokovnik.clients","mojrokovnik.calendar","mojrokovnik.cases"]).service("authentification",mojrokovnikAuth).config(["$routeProvider",mojrokovnikConf]).run(function($rootScope,$location,authentification){$rootScope.$on("$routeChangeStart",function(event,next){authentification.isLoggedIn()||$location.url("/login")})}),calendarTemplate.$inject=["api"],calendarCtrl.$inject=["$scope","$q","$uibModal","api"],angular.module("mojrokovnik.calendar",["ngMaterial","ui.bootstrap"]).controller("calendarCtrl",calendarCtrl).directive("calendarTemplate",calendarTemplate),casesCtrl.$inject=["$scope","api","$uibModal"],casesSidenav.$inject=[],casesTemplate.$inject=[],angular.module("mojrokovnik.cases",["ngMaterial"]).controller("casesCtrl",casesCtrl).directive("casesSidenav",casesSidenav).directive("casesTemplate",casesTemplate),clientsCtrl.$inject=["$scope","api","$uibModal"],clientsSidenav.$inject=[],clientsTemplate.$inject=[],angular.module("mojrokovnik.clients",["ngMaterial"]).controller("clientsCtrl",clientsCtrl).directive("clientsSidenav",clientsSidenav).directive("clientsTemplate",clientsTemplate),apiService.$inject=["$q","$http","notify"],angular.module("mojrokovnik.api",[]).service("api",apiService),mrLoginCtrl.$inject=["$location","$http","$cookies","$scope","notify","api"],angular.module("mojrokovnik.login",[]).controller("mrLoginCtrl",mrLoginCtrl),mrMainNavitagion.$inject=["$location","authentification"],angular.module("mojrokovnik.navigation",[]).directive("mrMainNavigation",mrMainNavitagion),notifyService.$inject=["$mdToast"],angular.module("mojrokovnik.notify",["ngMaterial"]).service("notify",notifyService),angular.module("mojrokovnik.translate",["pascalprecht.translate"]).config(function($translateProvider){$translateProvider.useSanitizeValueStrategy("escape")}),datetimePicker.$inject=[],angular.module("mojrokovnik.ui",[]).directive("mrDatetimePicker",datetimePicker),mojrokovnikAuth.$inject=["api","$cookies"],mojrokovnikConf.$inject=["$routeProvider"],angular.module("mojrokovnik",["ngRoute","ngCookies","pascalprecht.translate","mojrokovnik.api","mojrokovnik.login","mojrokovnik.navigation","mojrokovnik.notify","mojrokovnik.translate","mojrokovnik.ui","mojrokovnik.clients","mojrokovnik.calendar","mojrokovnik.cases"]).service("authentification",mojrokovnikAuth).config(["$routeProvider",mojrokovnikConf]).run(function($rootScope,$location,authentification){$rootScope.$on("$routeChangeStart",function(event,next){authentification.isLoggedIn()||$location.url("/login")})}),calendarTemplate.$inject=["api"],calendarCtrl.$inject=["$scope","$q","$uibModal","api"],angular.module("mojrokovnik.calendar",["ngMaterial","ui.bootstrap"]).controller("calendarCtrl",calendarCtrl).directive("calendarTemplate",calendarTemplate),casesCtrl.$inject=["$scope","api","$uibModal"],casesSidenav.$inject=[],casesTemplate.$inject=[],angular.module("mojrokovnik.cases",["ngMaterial"]).controller("casesCtrl",casesCtrl).directive("casesSidenav",casesSidenav).directive("casesTemplate",casesTemplate),clientsCtrl.$inject=["$scope","api","$uibModal"],clientsSidenav.$inject=[],clientsTemplate.$inject=[],angular.module("mojrokovnik.clients",["ngMaterial"]).controller("clientsCtrl",clientsCtrl).directive("clientsSidenav",clientsSidenav).directive("clientsTemplate",clientsTemplate),apiService.$inject=["$q","$http","notify"],angular.module("mojrokovnik.api",[]).service("api",apiService),mrLoginCtrl.$inject=["$location","$http","$cookies","$scope","notify","api"],angular.module("mojrokovnik.login",[]).controller("mrLoginCtrl",mrLoginCtrl),mrMainNavitagion.$inject=["$location","authentification"],angular.module("mojrokovnik.navigation",[]).directive("mrMainNavigation",mrMainNavitagion),notifyService.$inject=["$mdToast"],angular.module("mojrokovnik.notify",["ngMaterial"]).service("notify",notifyService),angular.module("mojrokovnik.translate",["pascalprecht.translate"]).config(function($translateProvider){$translateProvider.useSanitizeValueStrategy("escape")}),datetimePicker.$inject=[],angular.module("mojrokovnik.ui",[]).directive("mrDatetimePicker",datetimePicker),mojrokovnikAuth.$inject=["api","$cookies"],mojrokovnikConf.$inject=["$routeProvider"],angular.module("mojrokovnik",["ngRoute","ngCookies","pascalprecht.translate","mojrokovnik.api","mojrokovnik.login","mojrokovnik.navigation","mojrokovnik.notify","mojrokovnik.translate","mojrokovnik.ui","mojrokovnik.clients","mojrokovnik.calendar","mojrokovnik.cases"]).service("authentification",mojrokovnikAuth).config(["$routeProvider",mojrokovnikConf]).run(function($rootScope,$location,authentification){$rootScope.$on("$routeChangeStart",function(event,next){authentification.isLoggedIn()||$location.url("/login")})}),calendarTemplate.$inject=["api"],calendarCtrl.$inject=["$scope","$q","$uibModal","api"],angular.module("mojrokovnik.calendar",["ngMaterial","ui.bootstrap"]).controller("calendarCtrl",calendarCtrl).directive("calendarTemplate",calendarTemplate),casesCtrl.$inject=["$scope","api","$uibModal"],casesSidenav.$inject=[],casesTemplate.$inject=[],angular.module("mojrokovnik.cases",["ngMaterial"]).controller("casesCtrl",casesCtrl).directive("casesSidenav",casesSidenav).directive("casesTemplate",casesTemplate),clientsCtrl.$inject=["$scope","api","$uibModal"],clientsSidenav.$inject=[],clientsTemplate.$inject=[],angular.module("mojrokovnik.clients",["ngMaterial"]).controller("clientsCtrl",clientsCtrl).directive("clientsSidenav",clientsSidenav).directive("clientsTemplate",clientsTemplate),apiService.$inject=["$q","$http","notify"],angular.module("mojrokovnik.api",[]).service("api",apiService),mrLoginCtrl.$inject=["$location","$http","$cookies","$scope","notify","api"],angular.module("mojrokovnik.login",[]).controller("mrLoginCtrl",mrLoginCtrl),mrMainNavitagion.$inject=["$location","authentification"],angular.module("mojrokovnik.navigation",[]).directive("mrMainNavigation",mrMainNavitagion),notifyService.$inject=["$mdToast"],angular.module("mojrokovnik.notify",["ngMaterial"]).service("notify",notifyService),angular.module("mojrokovnik.translate",["pascalprecht.translate"]).config(function($translateProvider){$translateProvider.useSanitizeValueStrategy("escape")}),datetimePicker.$inject=[],angular.module("mojrokovnik.ui",[]).directive("mrDatetimePicker",datetimePicker),mojrokovnikAuth.$inject=["api","$cookies"],mojrokovnikConf.$inject=["$routeProvider"],angular.module("mojrokovnik",["ngRoute","ngCookies","pascalprecht.translate","mojrokovnik.api","mojrokovnik.login","mojrokovnik.navigation","mojrokovnik.notify","mojrokovnik.translate","mojrokovnik.ui","mojrokovnik.clients","mojrokovnik.calendar","mojrokovnik.cases"]).service("authentification",mojrokovnikAuth).config(["$routeProvider",mojrokovnikConf]).run(function($rootScope,$location,authentification){$rootScope.$on("$routeChangeStart",function(event,next){authentification.isLoggedIn()||$location.url("/login")})}),calendarTemplate.$inject=["api"],calendarCtrl.$inject=["$scope","$q","$uibModal","api"],angular.module("mojrokovnik.calendar",["ngMaterial","ui.bootstrap"]).controller("calendarCtrl",calendarCtrl).directive("calendarTemplate",calendarTemplate),casesCtrl.$inject=["$scope","api","$uibModal"],casesSidenav.$inject=[],casesTemplate.$inject=[],angular.module("mojrokovnik.cases",["ngMaterial"]).controller("casesCtrl",casesCtrl).directive("casesSidenav",casesSidenav).directive("casesTemplate",casesTemplate),clientsCtrl.$inject=["$scope","api","$uibModal"],clientsSidenav.$inject=[],clientsTemplate.$inject=[],angular.module("mojrokovnik.clients",["ngMaterial"]).controller("clientsCtrl",clientsCtrl).directive("clientsSidenav",clientsSidenav).directive("clientsTemplate",clientsTemplate),apiService.$inject=["$q","$http","notify"],angular.module("mojrokovnik.api",[]).service("api",apiService),mrLoginCtrl.$inject=["$location","$http","$cookies","$scope","notify","api"],angular.module("mojrokovnik.login",[]).controller("mrLoginCtrl",mrLoginCtrl),mrMainNavitagion.$inject=["$location","authentification"],angular.module("mojrokovnik.navigation",[]).directive("mrMainNavigation",mrMainNavitagion),notifyService.$inject=["$mdToast"],angular.module("mojrokovnik.notify",["ngMaterial"]).service("notify",notifyService),angular.module("mojrokovnik.translate",["pascalprecht.translate"]).config(function($translateProvider){$translateProvider.useSanitizeValueStrategy("escape")}),datetimePicker.$inject=[],angular.module("mojrokovnik.ui",[]).directive("mrDatetimePicker",datetimePicker),mojrokovnikAuth.$inject=["api","$cookies"],mojrokovnikConf.$inject=["$routeProvider"],angular.module("mojrokovnik",["ngRoute","ngCookies","pascalprecht.translate","mojrokovnik.api","mojrokovnik.login","mojrokovnik.navigation","mojrokovnik.notify","mojrokovnik.translate","mojrokovnik.ui","mojrokovnik.clients","mojrokovnik.calendar","mojrokovnik.cases"]).service("authentification",mojrokovnikAuth).config(["$routeProvider",mojrokovnikConf]).run(function($rootScope,$location,authentification){$rootScope.$on("$routeChangeStart",function(event,next){authentification.isLoggedIn()||$location.url("/login")})}),calendarTemplate.$inject=["api"],calendarCtrl.$inject=["$scope","$q","$uibModal","api"],angular.module("mojrokovnik.calendar",["ngMaterial","ui.bootstrap"]).controller("calendarCtrl",calendarCtrl).directive("calendarTemplate",calendarTemplate),casesCtrl.$inject=["$scope","api","$uibModal"],casesSidenav.$inject=[],casesTemplate.$inject=[],angular.module("mojrokovnik.cases",["ngMaterial"]).controller("casesCtrl",casesCtrl).directive("casesSidenav",casesSidenav).directive("casesTemplate",casesTemplate),clientsCtrl.$inject=["$scope","api","$uibModal"],clientsSidenav.$inject=[],clientsTemplate.$inject=[],angular.module("mojrokovnik.clients",["ngMaterial"]).controller("clientsCtrl",clientsCtrl).directive("clientsSidenav",clientsSidenav).directive("clientsTemplate",clientsTemplate),apiService.$inject=["$q","$http","notify"],angular.module("mojrokovnik.api",[]).service("api",apiService),mrLoginCtrl.$inject=["$location","$http","$cookies","$scope","notify","api"],angular.module("mojrokovnik.login",[]).controller("mrLoginCtrl",mrLoginCtrl),mrMainNavitagion.$inject=["$location","authentification"],angular.module("mojrokovnik.navigation",[]).directive("mrMainNavigation",mrMainNavitagion),notifyService.$inject=["$mdToast"],angular.module("mojrokovnik.notify",["ngMaterial"]).service("notify",notifyService),angular.module("mojrokovnik.translate",["pascalprecht.translate"]).config(function($translateProvider){$translateProvider.useSanitizeValueStrategy("escape")}),datetimePicker.$inject=[],angular.module("mojrokovnik.ui",[]).directive("mrDatetimePicker",datetimePicker),mojrokovnikAuth.$inject=["api","$cookies"],mojrokovnikConf.$inject=["$routeProvider"],angular.module("mojrokovnik",["ngRoute","ngCookies","pascalprecht.translate","mojrokovnik.api","mojrokovnik.login","mojrokovnik.navigation","mojrokovnik.notify","mojrokovnik.translate","mojrokovnik.ui","mojrokovnik.clients","mojrokovnik.calendar","mojrokovnik.cases"]).service("authentification",mojrokovnikAuth).config(["$routeProvider",mojrokovnikConf]).run(function($rootScope,$location,authentification){$rootScope.$on("$routeChangeStart",function(event,next){authentification.isLoggedIn()||$location.url("/login")})}),calendarTemplate.$inject=["api"],calendarCtrl.$inject=["$scope","$q","$uibModal","api"],angular.module("mojrokovnik.calendar",["ngMaterial","ui.bootstrap"]).controller("calendarCtrl",calendarCtrl).directive("calendarTemplate",calendarTemplate),casesCtrl.$inject=["$scope","api","$uibModal"],casesSidenav.$inject=[],casesTemplate.$inject=[],angular.module("mojrokovnik.cases",["ngMaterial"]).controller("casesCtrl",casesCtrl).directive("casesSidenav",casesSidenav).directive("casesTemplate",casesTemplate),clientsCtrl.$inject=["$scope","api","$uibModal"],clientsSidenav.$inject=[],clientsTemplate.$inject=[],angular.module("mojrokovnik.clients",["ngMaterial"]).controller("clientsCtrl",clientsCtrl).directive("clientsSidenav",clientsSidenav).directive("clientsTemplate",clientsTemplate),
apiService.$inject=["$q","$http","notify"],angular.module("mojrokovnik.api",[]).service("api",apiService),mrLoginCtrl.$inject=["$location","$http","$cookies","$scope","notify","api"],angular.module("mojrokovnik.login",[]).controller("mrLoginCtrl",mrLoginCtrl),mrMainNavitagion.$inject=["$location","authentification"],angular.module("mojrokovnik.navigation",[]).directive("mrMainNavigation",mrMainNavitagion),notifyService.$inject=["$mdToast"],angular.module("mojrokovnik.notify",["ngMaterial"]).service("notify",notifyService),angular.module("mojrokovnik.translate",["pascalprecht.translate"]).config(function($translateProvider){$translateProvider.useSanitizeValueStrategy("escape")}),datetimePicker.$inject=[],angular.module("mojrokovnik.ui",[]).directive("mrDatetimePicker",datetimePicker),mojrokovnikAuth.$inject=["api","$cookies"],mojrokovnikConf.$inject=["$routeProvider"],angular.module("mojrokovnik",["ngRoute","ngCookies","pascalprecht.translate","mojrokovnik.api","mojrokovnik.login","mojrokovnik.navigation","mojrokovnik.notify","mojrokovnik.translate","mojrokovnik.ui","mojrokovnik.clients","mojrokovnik.calendar","mojrokovnik.cases"]).service("authentification",mojrokovnikAuth).config(["$routeProvider",mojrokovnikConf]).run(function($rootScope,$location,authentification){$rootScope.$on("$routeChangeStart",function(event,next){authentification.isLoggedIn()||$location.url("/login")})}),calendarTemplate.$inject=["api"],calendarCtrl.$inject=["$scope","$q","$uibModal","api"],angular.module("mojrokovnik.calendar",["ngMaterial","ui.bootstrap"]).controller("calendarCtrl",calendarCtrl).directive("calendarTemplate",calendarTemplate),casesCtrl.$inject=["$scope","api","$uibModal"],casesSidenav.$inject=[],casesTemplate.$inject=[],angular.module("mojrokovnik.cases",["ngMaterial"]).controller("casesCtrl",casesCtrl).directive("casesSidenav",casesSidenav).directive("casesTemplate",casesTemplate),clientsCtrl.$inject=["$scope","api","$uibModal"],clientsSidenav.$inject=[],clientsTemplate.$inject=[],angular.module("mojrokovnik.clients",["ngMaterial"]).controller("clientsCtrl",clientsCtrl).directive("clientsSidenav",clientsSidenav).directive("clientsTemplate",clientsTemplate),apiService.$inject=["$q","$http","notify"],angular.module("mojrokovnik.api",[]).service("api",apiService),mrLoginCtrl.$inject=["$location","$http","$cookies","$scope","notify","api"],angular.module("mojrokovnik.login",[]).controller("mrLoginCtrl",mrLoginCtrl),mrMainNavitagion.$inject=["$location","authentification"],angular.module("mojrokovnik.navigation",[]).directive("mrMainNavigation",mrMainNavitagion),notifyService.$inject=["$mdToast"],angular.module("mojrokovnik.notify",["ngMaterial"]).service("notify",notifyService),angular.module("mojrokovnik.translate",["pascalprecht.translate"]).config(function($translateProvider){$translateProvider.useSanitizeValueStrategy("escape")}),datetimePicker.$inject=[],angular.module("mojrokovnik.ui",[]).directive("mrDatetimePicker",datetimePicker),mojrokovnikAuth.$inject=["api","$cookies"],mojrokovnikConf.$inject=["$routeProvider"],angular.module("mojrokovnik",["ngRoute","ngCookies","pascalprecht.translate","mojrokovnik.api","mojrokovnik.login","mojrokovnik.navigation","mojrokovnik.notify","mojrokovnik.translate","mojrokovnik.ui","mojrokovnik.clients","mojrokovnik.calendar","mojrokovnik.cases"]).service("authentification",mojrokovnikAuth).config(["$routeProvider",mojrokovnikConf]).run(function($rootScope,$location,authentification){$rootScope.$on("$routeChangeStart",function(event,next){authentification.isLoggedIn()||$location.url("/login")})}),calendarTemplate.$inject=["api"],calendarCtrl.$inject=["$scope","$q","$uibModal","api"],angular.module("mojrokovnik.calendar",["ngMaterial","ui.bootstrap"]).controller("calendarCtrl",calendarCtrl).directive("calendarTemplate",calendarTemplate),casesCtrl.$inject=["$scope","api","$uibModal"],casesSidenav.$inject=[],casesTemplate.$inject=[],angular.module("mojrokovnik.cases",["ngMaterial"]).controller("casesCtrl",casesCtrl).directive("casesSidenav",casesSidenav).directive("casesTemplate",casesTemplate),clientsCtrl.$inject=["$scope","api","$uibModal"],clientsSidenav.$inject=[],clientsTemplate.$inject=[],angular.module("mojrokovnik.clients",["ngMaterial"]).controller("clientsCtrl",clientsCtrl).directive("clientsSidenav",clientsSidenav).directive("clientsTemplate",clientsTemplate),apiService.$inject=["$q","$http","notify"],angular.module("mojrokovnik.api",[]).service("api",apiService),mrLoginCtrl.$inject=["$location","$http","$cookies","$scope","notify","api"],angular.module("mojrokovnik.login",[]).controller("mrLoginCtrl",mrLoginCtrl),mrMainNavitagion.$inject=["$location","authentification"],angular.module("mojrokovnik.navigation",[]).directive("mrMainNavigation",mrMainNavitagion),notifyService.$inject=["$mdToast"],angular.module("mojrokovnik.notify",["ngMaterial"]).service("notify",notifyService),angular.module("mojrokovnik.translate",["pascalprecht.translate"]).config(function($translateProvider){$translateProvider.useSanitizeValueStrategy("escape")}),datetimePicker.$inject=[],angular.module("mojrokovnik.ui",[]).directive("mrDatetimePicker",datetimePicker),mojrokovnikAuth.$inject=["api","$cookies"],mojrokovnikConf.$inject=["$routeProvider"],angular.module("mojrokovnik",["ngRoute","ngCookies","pascalprecht.translate","mojrokovnik.api","mojrokovnik.login","mojrokovnik.navigation","mojrokovnik.notify","mojrokovnik.translate","mojrokovnik.ui","mojrokovnik.clients","mojrokovnik.calendar","mojrokovnik.cases"]).service("authentification",mojrokovnikAuth).config(["$routeProvider",mojrokovnikConf]).run(function($rootScope,$location,authentification){$rootScope.$on("$routeChangeStart",function(event,next){authentification.isLoggedIn()||$location.url("/login")})}),calendarTemplate.$inject=["api"],calendarCtrl.$inject=["$scope","$q","$uibModal","api"],angular.module("mojrokovnik.calendar",["ngMaterial","ui.bootstrap"]).controller("calendarCtrl",calendarCtrl).directive("calendarTemplate",calendarTemplate),casesCtrl.$inject=["$scope","api","$uibModal"],casesSidenav.$inject=[],casesTemplate.$inject=[],angular.module("mojrokovnik.cases",["ngMaterial"]).controller("casesCtrl",casesCtrl).directive("casesSidenav",casesSidenav).directive("casesTemplate",casesTemplate),clientsCtrl.$inject=["$scope","api","$uibModal"],clientsSidenav.$inject=[],clientsTemplate.$inject=[],angular.module("mojrokovnik.clients",["ngMaterial"]).controller("clientsCtrl",clientsCtrl).directive("clientsSidenav",clientsSidenav).directive("clientsTemplate",clientsTemplate),apiService.$inject=["$q","$http","notify"],angular.module("mojrokovnik.api",[]).service("api",apiService),mrLoginCtrl.$inject=["$location","$http","$cookies","$scope","notify","api"],angular.module("mojrokovnik.login",[]).controller("mrLoginCtrl",mrLoginCtrl),mrMainNavitagion.$inject=["$location","authentification"],angular.module("mojrokovnik.navigation",[]).directive("mrMainNavigation",mrMainNavitagion),notifyService.$inject=["$mdToast"],angular.module("mojrokovnik.notify",["ngMaterial"]).service("notify",notifyService),angular.module("mojrokovnik.translate",["pascalprecht.translate"]).config(function($translateProvider){$translateProvider.useSanitizeValueStrategy("escape")}),datetimePicker.$inject=[],angular.module("mojrokovnik.ui",[]).directive("mrDatetimePicker",datetimePicker),mojrokovnikAuth.$inject=["api","$cookies"],mojrokovnikConf.$inject=["$routeProvider"],angular.module("mojrokovnik",["ngRoute","ngCookies","pascalprecht.translate","mojrokovnik.api","mojrokovnik.login","mojrokovnik.navigation","mojrokovnik.notify","mojrokovnik.translate","mojrokovnik.ui","mojrokovnik.clients","mojrokovnik.calendar","mojrokovnik.cases"]).service("authentification",mojrokovnikAuth).config(["$routeProvider",mojrokovnikConf]).run(function($rootScope,$location,authentification){$rootScope.$on("$routeChangeStart",function(event,next){authentification.isLoggedIn()||$location.url("/login")})}),calendarTemplate.$inject=["api"],calendarCtrl.$inject=["$scope","$q","$uibModal","api"],angular.module("mojrokovnik.calendar",["ngMaterial","ui.bootstrap"]).controller("calendarCtrl",calendarCtrl).directive("calendarTemplate",calendarTemplate),casesCtrl.$inject=["$scope","api","$uibModal"],casesSidenav.$inject=[],casesTemplate.$inject=[],angular.module("mojrokovnik.cases",["ngMaterial"]).controller("casesCtrl",casesCtrl).directive("casesSidenav",casesSidenav).directive("casesTemplate",casesTemplate),clientsCtrl.$inject=["$scope","api","$uibModal"],clientsSidenav.$inject=[],clientsTemplate.$inject=[],angular.module("mojrokovnik.clients",["ngMaterial"]).controller("clientsCtrl",clientsCtrl).directive("clientsSidenav",clientsSidenav).directive("clientsTemplate",clientsTemplate),apiService.$inject=["$q","$http","notify"],angular.module("mojrokovnik.api",[]).service("api",apiService),mrLoginCtrl.$inject=["$location","$http","$cookies","$scope","notify","api"],angular.module("mojrokovnik.login",[]).controller("mrLoginCtrl",mrLoginCtrl),mrMainNavitagion.$inject=["$location","authentification"],angular.module("mojrokovnik.navigation",[]).directive("mrMainNavigation",mrMainNavitagion),notifyService.$inject=["$mdToast"],angular.module("mojrokovnik.notify",["ngMaterial"]).service("notify",notifyService),angular.module("mojrokovnik.translate",["pascalprecht.translate"]).config(function($translateProvider){$translateProvider.useSanitizeValueStrategy("escape")}),datetimePicker.$inject=[],angular.module("mojrokovnik.ui",[]).directive("mrDatetimePicker",datetimePicker),mojrokovnikAuth.$inject=["api","$cookies"],mojrokovnikConf.$inject=["$routeProvider"],angular.module("mojrokovnik",["ngRoute","ngCookies","pascalprecht.translate","mojrokovnik.api","mojrokovnik.login","mojrokovnik.navigation","mojrokovnik.notify","mojrokovnik.translate","mojrokovnik.ui","mojrokovnik.clients","mojrokovnik.calendar","mojrokovnik.cases"]).service("authentification",mojrokovnikAuth).config(["$routeProvider",mojrokovnikConf]).run(function($rootScope,$location,authentification){$rootScope.$on("$routeChangeStart",function(event,next){authentification.isLoggedIn()||$location.url("/login")})}),calendarTemplate.$inject=["api"],calendarCtrl.$inject=["$scope","$q","$uibModal","api"],angular.module("mojrokovnik.calendar",["ngMaterial","ui.bootstrap"]).controller("calendarCtrl",calendarCtrl).directive("calendarTemplate",calendarTemplate),casesCtrl.$inject=["$scope","api","$uibModal"],casesSidenav.$inject=[],casesTemplate.$inject=[],angular.module("mojrokovnik.cases",["ngMaterial"]).controller("casesCtrl",casesCtrl).directive("casesSidenav",casesSidenav).directive("casesTemplate",casesTemplate),clientsCtrl.$inject=["$scope","api","$uibModal"],clientsSidenav.$inject=[],clientsTemplate.$inject=[],angular.module("mojrokovnik.clients",["ngMaterial"]).controller("clientsCtrl",clientsCtrl).directive("clientsSidenav",clientsSidenav).directive("clientsTemplate",clientsTemplate),apiService.$inject=["$q","$http","notify"],angular.module("mojrokovnik.api",[]).service("api",apiService),mrLoginCtrl.$inject=["$location","$http","$cookies","$scope","notify","api"],angular.module("mojrokovnik.login",[]).controller("mrLoginCtrl",mrLoginCtrl),mrMainNavitagion.$inject=["$location","authentification"],angular.module("mojrokovnik.navigation",[]).directive("mrMainNavigation",mrMainNavitagion),notifyService.$inject=["$mdToast"],angular.module("mojrokovnik.notify",["ngMaterial"]).service("notify",notifyService),angular.module("mojrokovnik.translate",["pascalprecht.translate"]).config(function($translateProvider){$translateProvider.useSanitizeValueStrategy("escape")}),datetimePicker.$inject=[],angular.module("mojrokovnik.ui",[]).directive("mrDatetimePicker",datetimePicker),mojrokovnikAuth.$inject=["api","$cookies"],mojrokovnikConf.$inject=["$routeProvider"],angular.module("mojrokovnik",["ngRoute","ngCookies","pascalprecht.translate","mojrokovnik.api","mojrokovnik.login","mojrokovnik.navigation","mojrokovnik.notify","mojrokovnik.translate","mojrokovnik.ui","mojrokovnik.clients","mojrokovnik.calendar","mojrokovnik.cases"]).service("authentification",mojrokovnikAuth).config(["$routeProvider",mojrokovnikConf]).run(function($rootScope,$location,authentification){$rootScope.$on("$routeChangeStart",function(event,next){authentification.isLoggedIn()||$location.url("/login")})}),calendarTemplate.$inject=["api"],calendarCtrl.$inject=["$scope","$q","$uibModal","api"],angular.module("mojrokovnik.calendar",["ngMaterial","ui.bootstrap"]).controller("calendarCtrl",calendarCtrl).directive("calendarTemplate",calendarTemplate),casesCtrl.$inject=["$scope","api","$uibModal"],casesSidenav.$inject=[],casesTemplate.$inject=[],angular.module("mojrokovnik.cases",["ngMaterial"]).controller("casesCtrl",casesCtrl).directive("casesSidenav",casesSidenav).directive("casesTemplate",casesTemplate),clientsCtrl.$inject=["$scope","api","$uibModal"],clientsSidenav.$inject=[],clientsTemplate.$inject=[],angular.module("mojrokovnik.clients",["ngMaterial"]).controller("clientsCtrl",clientsCtrl).directive("clientsSidenav",clientsSidenav).directive("clientsTemplate",clientsTemplate),apiService.$inject=["$q","$http","notify"],angular.module("mojrokovnik.api",[]).service("api",apiService),mrLoginCtrl.$inject=["$location","$http","$cookies","$scope","notify","api"],angular.module("mojrokovnik.login",[]).controller("mrLoginCtrl",mrLoginCtrl),mrMainNavitagion.$inject=["$location","authentification"],angular.module("mojrokovnik.navigation",[]).directive("mrMainNavigation",mrMainNavitagion),notifyService.$inject=["$mdToast"],angular.module("mojrokovnik.notify",["ngMaterial"]).service("notify",notifyService),angular.module("mojrokovnik.translate",["pascalprecht.translate"]).config(function($translateProvider){$translateProvider.useSanitizeValueStrategy("escape")}),datetimePicker.$inject=[],angular.module("mojrokovnik.ui",[]).directive("mrDatetimePicker",datetimePicker);
//# sourceMappingURL=app.min.map