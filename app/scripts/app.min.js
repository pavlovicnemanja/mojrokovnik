"use strict";function mojrokovnikAuth(userService,$cookies){var self=this;userService.fetchUser().then(function(user){user&&(self.user=user)}),this.getUser=function(){return self.user},this.isLoggedIn=function(){return!!$cookies.getObject("user")}}function mojrokovnikConf($routeProvider){$routeProvider.otherwise({redirectTo:"/clients"}),$routeProvider.when("/login",{templateUrl:"scripts/mojrokovnik/login/login.html"}),$routeProvider.when("/clients",{templateUrl:"scripts/mojrokovnik-clients/clients.html"}),$routeProvider.when("/calendar",{templateUrl:"scripts/mojrokovnik-calendar/calendar.html"})}function calendarTemplate(calendarService){return{controller:calendarCtrl,link:function(scope,element,attr,ctrl){function initializeCalendar(events){element.fullCalendar({header:{left:"prev,next today",center:"title",right:"month,agendaWeek,agendaDay"},height:angular.element("body").height(),firstDay:1,defaultView:"agendaWeek",timezone:"local",selectable:!0,editable:!0,eventLimit:!0,events:events,select:function(startDate,endDate){scope.showDialog(startDate,endDate)}})}calendarService.fetchCalendar().then(function(events){var filterEvents=[];return angular.forEach(events,function(item){filterEvents.push({title:item.calendar_name+" - "+item.calendar_comment,start:item.calendar_startDate,end:item.calendar_endDate})}),initializeCalendar(filterEvents)}),scope.createEvent=function(event){var eventData={title:event.calendar_name+" - "+event.calendar_comment,start:event.calendar_startDate,end:event.calendar_endDate};element.fullCalendar("renderEvent",eventData,!0),element.fullCalendar("unselect")}}}}function calendarCtrl($scope,$uibModal,calendarService){function calendarDialogCtrl($uibModalInstance){$scope.save=function(calendar,timetable){var startTime=timetable?moment(timetable.timetable_startTime).format("HH:mm:ss"):moment().format("HH:mm:ss"),startDate=moment(calendar.calendar_startDate).format("YYYY-MM-DD"),endTime=timetable?moment(timetable.timetable_duration).format("HH:mm:ss"):moment().format("HH:mm:ss"),endDate=moment(calendar.calendar_endDate).format("YYYY-MM-DD");calendar.calendar_startDate=new Date(startTime+" "+startDate),calendar.calendar_endDate=new Date(endTime+" "+endDate),calendarService.addCalendar(calendar).then(function(){$scope.createEvent(calendar),$uibModalInstance.close()})},$scope.cancel=function(){$uibModalInstance.dismiss()}}$scope.showDialog=function(startDate,endDate){$scope.calendar={calendar_startDate:startDate._d,calendar_endDate:endDate._d},$scope.timetable={timetable_startTime:startDate._d,timetabe_duration:moment(endDate).subtract(moment(startDate))},$uibModal.open({animation:!0,scope:$scope,templateUrl:"scripts/mojrokovnik-calendar/calendar-dialog.html",controller:calendarDialogCtrl})},$scope.types=["Ročište","Obaveza"]}function clientsCtrl($scope,clientsService,$mdDialog){$scope.getClients=function(){clientsService.fetchClients().then(function(clients){$scope.clients=clients,$scope.selClient=clients[0]})},$scope.showDialog=function(event,client){$mdDialog.show({scope:$scope,preserveScope:!0,locals:client,controller:clientDialogCtrl,templateUrl:"scripts/mojrokovnik-clients/clients-dialog.html",parent:angular.element(document.body),targetEvent:event,clickOutsideToClose:!0})},$scope.selectClient=function(client){$scope.selClient=client},$scope.removeClient=function(client){clientsService.deleteClient(client).then(function(){$scope.clients=_.without($scope.clients,client),$scope.selClient=$scope.clients[0]})},$scope.getClients()}function clientDialogCtrl($scope,$mdDialog,clientsService,locals){$scope.client=locals,$scope.save=function(client){locals?clientsService.updateClient(client).then(function(){$mdDialog.hide()}):clientsService.addClient(client).then(function(){$scope.clients.push(client),$mdDialog.hide()})},$scope.cancel=function(){$mdDialog.cancel()}}function clientsSidenav(){return{controller:clientsCtrl,link:function(scope,elem,attr,ctrl){}}}function clientsTemplate(){return{link:function(scope,elem,attr,ctrl){}}}function userService($http){this.fetchUser=function(){return $http({url:"../server/mr-user.php",method:"GET"}).then(function(response){return response.data})}}function clientsService($http,notify){this.fetchClients=function(params){return $http({url:"../server/mr-client.php",method:"GET",params:params}).then(function(response){return response.data})},this.addClient=function(params){return $http({url:"../server/mr-client.php",method:"POST",params:params}).then(function(response){return notify.show(response.data.msg),response.data})},this.updateClient=function(params){return $http({url:"../server/mr-client.php",method:"PUT",params:params}).then(function(response){return notify.show(response.data.msg),response.data})},this.deleteClient=function(params){return $http({url:"../server/mr-client.php",method:"DELETE",params:params}).then(function(response){return notify.show(response.data.msg),response.data})}}function calendarService($http,notify){this.fetchCalendar=function(params){return $http({url:"../server/mr-calendar.php",method:"GET",params:params}).then(function(response){return response.data})},this.addCalendar=function(params){return $http({url:"../server/mr-calendar.php",method:"POST",params:params}).then(function(response){return notify.show(response.data.msg),response.data})},this.updateCalendar=function(params){return $http({url:"../server/mr-calendar.php",method:"PUT",params:params}).then(function(response){return notify.show(response.data.msg),response.data})},this.deleteCalendar=function(params){return $http({url:"../server/mr-calendar.php",method:"DELETE",params:params}).then(function(response){return notify.show(response.data.msg),response.data})}}function mrLoginCtrl($location,$http,$cookies,$scope,notify,userService){$scope.login=function(login){$http({url:"../server/mr-login.php",method:"POST",params:login}).then(function(response){response.data.login?userService.fetchUser().then(function(user){user&&($cookies.putObject("user",user),$location.url("/clients"))}):notify.show(response.data.msg)})}}function notifyService($mdToast){this.show=function(text){$mdToast.show($mdToast.simple().content(text).position("top right"))}}function mojrokovnikAuth(userService,$cookies){var self=this;userService.fetchUser().then(function(user){user&&(self.user=user)}),this.getUser=function(){return self.user},this.isLoggedIn=function(){return!!$cookies.getObject("user")}}function mojrokovnikConf($routeProvider){$routeProvider.otherwise({redirectTo:"/clients"}),$routeProvider.when("/login",{templateUrl:"scripts/mojrokovnik/login/login.html"}),$routeProvider.when("/clients",{templateUrl:"scripts/mojrokovnik-clients/clients.html"}),$routeProvider.when("/calendar",{templateUrl:"scripts/mojrokovnik-calendar/calendar.html"})}function calendarTemplate(calendarService){return{controller:calendarCtrl,link:function(scope,element,attr,ctrl){function initializeCalendar(events){element.fullCalendar({header:{left:"prev,next today",center:"title",right:"month,agendaWeek,agendaDay"},height:angular.element("body").height(),firstDay:1,defaultView:"agendaWeek",timezone:"local",selectable:!0,editable:!0,eventLimit:!0,events:events,select:function(startDate,endDate){scope.showDialog(startDate,endDate)}})}calendarService.fetchCalendar().then(function(events){var filterEvents=[];return angular.forEach(events,function(item){filterEvents.push({title:item.calendar_name+" - "+item.calendar_comment,start:item.calendar_startDate,end:item.calendar_endDate})}),initializeCalendar(filterEvents)}),scope.createEvent=function(event){var eventData={title:event.calendar_name+" - "+event.calendar_comment,start:event.calendar_startDate,end:event.calendar_endDate};element.fullCalendar("renderEvent",eventData,!0),element.fullCalendar("unselect")}}}}function calendarCtrl($scope,$uibModal,calendarService,clientsService){function calendarDialogCtrl($uibModalInstance){$scope.save=function(calendar,timetable){var startTime=timetable?moment(timetable.timetable_startTime).format("HH:mm:ss"):moment().format("HH:mm:ss"),startDate=moment(calendar.calendar_startDate).format("YYYY-MM-DD"),endTime=timetable?moment(timetable.timetable_duration).format("HH:mm:ss"):moment().format("HH:mm:ss"),endDate=moment(calendar.calendar_endDate).format("YYYY-MM-DD");calendar.calendar_startDate=new Date(startTime+" "+startDate),calendar.calendar_endDate=new Date(endTime+" "+endDate),calendarService.addCalendar(calendar).then(function(){$scope.createEvent(calendar),$uibModalInstance.close()})},$scope.cancel=function(){$uibModalInstance.dismiss()}}$scope.showDialog=function(startDate,endDate){$scope.calendar={calendar_startDate:startDate._d,calendar_endDate:endDate._d},$scope.timetable={timetable_startTime:startDate._d,timetabe_duration:moment(endDate).subtract(moment(startDate))},$uibModal.open({animation:!0,scope:$scope,templateUrl:"scripts/mojrokovnik-calendar/calendar-dialog.html",controller:calendarDialogCtrl})},$scope.types=["Ročište","Obaveza"],clientsService.fetchClients().then(function(clients){$scope.clients=clients})}function clientsCtrl($scope,clientsService,$mdDialog){$scope.getClients=function(){clientsService.fetchClients().then(function(clients){$scope.clients=clients,$scope.selClient=clients[0]})},$scope.showDialog=function(event,client){$mdDialog.show({scope:$scope,preserveScope:!0,locals:client,controller:clientDialogCtrl,templateUrl:"scripts/mojrokovnik-clients/clients-dialog.html",parent:angular.element(document.body),targetEvent:event,clickOutsideToClose:!0})},$scope.selectClient=function(client){$scope.selClient=client},$scope.removeClient=function(client){clientsService.deleteClient(client).then(function(){$scope.clients=_.without($scope.clients,client),$scope.selClient=$scope.clients[0]})},$scope.getClients()}function clientDialogCtrl($scope,$mdDialog,clientsService,locals){$scope.client=locals,$scope.save=function(client){locals?clientsService.updateClient(client).then(function(){$mdDialog.hide()}):clientsService.addClient(client).then(function(){$scope.clients.push(client),$mdDialog.hide()})},$scope.cancel=function(){$mdDialog.cancel()}}function clientsSidenav(){return{controller:clientsCtrl,link:function(scope,elem,attr,ctrl){}}}function clientsTemplate(){return{link:function(scope,elem,attr,ctrl){}}}function userService($http){this.fetchUser=function(){return $http({url:"../server/mr-user.php",method:"GET"}).then(function(response){return response.data})}}function clientsService($http,notify){this.fetchClients=function(params){return $http({url:"../server/mr-client.php",method:"GET",params:params}).then(function(response){return response.data})},this.addClient=function(params){return $http({url:"../server/mr-client.php",method:"POST",params:params}).then(function(response){return notify.show(response.data.msg),response.data})},this.updateClient=function(params){return $http({url:"../server/mr-client.php",method:"PUT",params:params}).then(function(response){return notify.show(response.data.msg),response.data})},this.deleteClient=function(params){return $http({url:"../server/mr-client.php",method:"DELETE",params:params}).then(function(response){return notify.show(response.data.msg),response.data})}}function calendarService($http,notify){this.fetchCalendar=function(params){return $http({url:"../server/mr-calendar.php",method:"GET",params:params}).then(function(response){return response.data})},this.addCalendar=function(params){return $http({url:"../server/mr-calendar.php",method:"POST",params:params}).then(function(response){return notify.show(response.data.msg),response.data})},this.updateCalendar=function(params){return $http({url:"../server/mr-calendar.php",method:"PUT",params:params}).then(function(response){return notify.show(response.data.msg),response.data})},this.deleteCalendar=function(params){return $http({url:"../server/mr-calendar.php",method:"DELETE",params:params}).then(function(response){return notify.show(response.data.msg),response.data})}}function mrLoginCtrl($location,$http,$cookies,$scope,notify,userService){$scope.login=function(login){$http({url:"../server/mr-login.php",method:"POST",params:login}).then(function(response){response.data.login?userService.fetchUser().then(function(user){user&&($cookies.putObject("user",user),$location.url("/clients"))}):notify.show(response.data.msg)})}}function notifyService($mdToast){this.show=function(text){$mdToast.show($mdToast.simple().content(text).position("top right"))}}function mojrokovnikAuth(userService,$cookies){var self=this;userService.fetchUser().then(function(user){user&&(self.user=user)}),this.getUser=function(){return self.user},this.isLoggedIn=function(){return!!$cookies.getObject("user")}}function mojrokovnikConf($routeProvider){$routeProvider.otherwise({redirectTo:"/clients"}),$routeProvider.when("/login",{templateUrl:"scripts/mojrokovnik/login/login.html"}),$routeProvider.when("/clients",{templateUrl:"scripts/mojrokovnik-clients/clients.html"}),$routeProvider.when("/calendar",{templateUrl:"scripts/mojrokovnik-calendar/calendar.html"})}function calendarTemplate(calendarService){return{controller:calendarCtrl,link:function(scope,element,attr,ctrl){function initializeCalendar(events){element.fullCalendar({header:{left:"prev,next today",center:"title",right:"month,agendaWeek,agendaDay"},height:angular.element("body").height(),firstDay:1,defaultView:"agendaWeek",timezone:"local",selectable:!0,editable:!0,eventLimit:!0,events:events,select:function(startDate,endDate){scope.showDialog(startDate,endDate)}})}calendarService.fetchCalendar().then(function(events){var filterEvents=[];return angular.forEach(events,function(item){filterEvents.push({title:item.calendar_name+" - "+item.calendar_comment,start:item.calendar_startDate,end:item.calendar_endDate})}),initializeCalendar(filterEvents)}),scope.createEvent=function(event){var eventData={title:event.calendar_name+" - "+event.calendar_comment,start:event.calendar_startDate,end:event.calendar_endDate};element.fullCalendar("renderEvent",eventData,!0),element.fullCalendar("unselect")}}}}function calendarCtrl($scope,$uibModal,calendarService,clientsService){function calendarDialogCtrl($uibModalInstance){$scope.save=function(calendar,timetable){var startTime=timetable?moment(timetable.timetable_startTime).format("HH:mm:ss"):moment().format("HH:mm:ss"),startDate=moment(calendar.calendar_startDate).format("YYYY-MM-DD"),endTime=timetable?moment(timetable.timetable_duration).format("HH:mm:ss"):moment().format("HH:mm:ss"),endDate=moment(calendar.calendar_endDate).format("YYYY-MM-DD");calendar.calendar_startDate=new Date(startTime+" "+startDate),calendar.calendar_endDate=new Date(endTime+" "+endDate),calendarService.addCalendar(calendar).then(function(){$scope.createEvent(calendar),$uibModalInstance.close()})},$scope.cancel=function(){$uibModalInstance.dismiss()}}$scope.showDialog=function(startDate,endDate){$scope.calendar={calendar_startDate:startDate._d,calendar_endDate:endDate._d},$scope.timetable={timetable_startTime:startDate._d,timetabe_duration:moment(endDate).subtract(moment(startDate))},$uibModal.open({animation:!0,scope:$scope,templateUrl:"scripts/mojrokovnik-calendar/calendar-dialog.html",controller:calendarDialogCtrl})},$scope.types=["Ročište","Obaveza"]}function clientsCtrl($scope,clientsService,$mdDialog){$scope.getClients=function(){clientsService.fetchClients().then(function(clients){$scope.clients=clients,$scope.selClient=clients[0]})},$scope.showDialog=function(event,client){$mdDialog.show({scope:$scope,preserveScope:!0,locals:client,controller:clientDialogCtrl,templateUrl:"scripts/mojrokovnik-clients/clients-dialog.html",parent:angular.element(document.body),targetEvent:event,clickOutsideToClose:!0})},$scope.selectClient=function(client){$scope.selClient=client},$scope.removeClient=function(client){clientsService.deleteClient(client).then(function(){$scope.clients=_.without($scope.clients,client),$scope.selClient=$scope.clients[0]})},$scope.getClients()}function clientDialogCtrl($scope,$mdDialog,clientsService,locals){$scope.client=locals,$scope.save=function(client){locals?clientsService.updateClient(client).then(function(){$mdDialog.hide()}):clientsService.addClient(client).then(function(){$scope.clients.push(client),$mdDialog.hide()})},$scope.cancel=function(){$mdDialog.cancel()}}function clientsSidenav(){return{controller:clientsCtrl,link:function(scope,elem,attr,ctrl){}}}function clientsTemplate(){return{link:function(scope,elem,attr,ctrl){}}}function userService($http){this.fetchUser=function(){return $http({url:"../server/mr-user.php",method:"GET"}).then(function(response){return response.data})}}function clientsService($http,notify){this.fetchClients=function(params){return $http({url:"../server/mr-client.php",method:"GET",params:params}).then(function(response){return response.data})},this.addClient=function(params){return $http({url:"../server/mr-client.php",method:"POST",params:params}).then(function(response){return notify.show(response.data.msg),response.data})},this.updateClient=function(params){return $http({url:"../server/mr-client.php",method:"PUT",params:params}).then(function(response){return notify.show(response.data.msg),response.data})},this.deleteClient=function(params){return $http({url:"../server/mr-client.php",method:"DELETE",params:params}).then(function(response){return notify.show(response.data.msg),response.data})}}function calendarService($http,notify){this.fetchCalendar=function(params){return $http({url:"../server/mr-calendar.php",method:"GET",params:params}).then(function(response){return response.data})},this.addCalendar=function(params){return $http({url:"../server/mr-calendar.php",method:"POST",params:params}).then(function(response){return notify.show(response.data.msg),response.data})},this.updateCalendar=function(params){return $http({url:"../server/mr-calendar.php",method:"PUT",params:params}).then(function(response){return notify.show(response.data.msg),response.data})},this.deleteCalendar=function(params){return $http({url:"../server/mr-calendar.php",method:"DELETE",params:params}).then(function(response){return notify.show(response.data.msg),response.data})}}function mrLoginCtrl($location,$http,$cookies,$scope,notify,userService){$scope.login=function(login){$http({url:"../server/mr-login.php",method:"POST",params:login}).then(function(response){response.data.login?userService.fetchUser().then(function(user){user&&($cookies.putObject("user",user),$location.url("/clients"))}):notify.show(response.data.msg)})}}function notifyService($mdToast){this.show=function(text){$mdToast.show($mdToast.simple().content(text).position("top right"))}}function mojrokovnikAuth(userService,$cookies){var self=this;userService.fetchUser().then(function(user){user&&(self.user=user)}),this.getUser=function(){return self.user},this.isLoggedIn=function(){return!!$cookies.getObject("user")}}function mojrokovnikConf($routeProvider){$routeProvider.otherwise({redirectTo:"/clients"}),$routeProvider.when("/login",{templateUrl:"scripts/mojrokovnik/login/login.html"}),$routeProvider.when("/clients",{templateUrl:"scripts/mojrokovnik-clients/clients.html"}),$routeProvider.when("/calendar",{templateUrl:"scripts/mojrokovnik-calendar/calendar.html"})}function calendarTemplate(calendarService){return{controller:calendarCtrl,link:function(scope,element,attr,ctrl){function initializeCalendar(events){element.fullCalendar({header:{left:"prev,next today",center:"title",right:"month,agendaWeek,agendaDay"},height:angular.element("body").height(),firstDay:1,defaultView:"agendaWeek",timezone:"local",selectable:!0,editable:!0,eventLimit:!0,events:events,select:function(startDate,endDate){scope.showDialog(startDate,endDate)}})}calendarService.fetchCalendar().then(function(events){var filterEvents=[];return angular.forEach(events,function(item){filterEvents.push({title:item.calendar_name+" - "+item.calendar_comment,start:item.calendar_startDate,end:item.calendar_endDate})}),initializeCalendar(filterEvents)}),scope.createEvent=function(event){var eventData={title:event.calendar_name+" - "+event.calendar_comment,start:event.calendar_startDate,end:event.calendar_endDate};element.fullCalendar("renderEvent",eventData,!0),element.fullCalendar("unselect")}}}}function calendarCtrl($scope,$uibModal,calendarService,clientsService){function calendarDialogCtrl($uibModalInstance){$scope.save=function(calendar,timetable){var startTime=timetable?moment(timetable.timetable_startTime).format("HH:mm:ss"):moment().format("HH:mm:ss"),startDate=moment(calendar.calendar_startDate).format("YYYY-MM-DD"),endTime=timetable?moment(timetable.timetable_duration).format("HH:mm:ss"):moment().format("HH:mm:ss"),endDate=moment(calendar.calendar_endDate).format("YYYY-MM-DD");calendar.calendar_startDate=new Date(startTime+" "+startDate),calendar.calendar_endDate=new Date(endTime+" "+endDate),calendarService.addCalendar(calendar).then(function(){$scope.createEvent(calendar),$uibModalInstance.close()})},$scope.cancel=function(){$uibModalInstance.dismiss()}}$scope.showDialog=function(startDate,endDate){$scope.calendar={calendar_startDate:startDate._d,calendar_endDate:endDate._d},$scope.timetable={timetable_startTime:startDate._d,timetabe_duration:moment(endDate).subtract(moment(startDate))},$uibModal.open({animation:!0,scope:$scope,templateUrl:"scripts/mojrokovnik-calendar/calendar-dialog.html",controller:calendarDialogCtrl})},$scope.types=["Ročište","Obaveza"],clientsService.fetchClients().then(function(clients){$scope.clients=clients})}function clientsCtrl($scope,clientsService,$mdDialog){$scope.getClients=function(){clientsService.fetchClients().then(function(clients){$scope.clients=clients,$scope.selClient=clients[0]})},$scope.showDialog=function(event,client){$mdDialog.show({scope:$scope,preserveScope:!0,locals:client,controller:clientDialogCtrl,templateUrl:"scripts/mojrokovnik-clients/clients-dialog.html",parent:angular.element(document.body),targetEvent:event,clickOutsideToClose:!0})},$scope.selectClient=function(client){$scope.selClient=client},$scope.removeClient=function(client){clientsService.deleteClient(client).then(function(){$scope.clients=_.without($scope.clients,client),$scope.selClient=$scope.clients[0]})},$scope.getClients()}function clientDialogCtrl($scope,$mdDialog,clientsService,locals){$scope.client=locals,$scope.save=function(client){locals?clientsService.updateClient(client).then(function(){$mdDialog.hide()}):clientsService.addClient(client).then(function(){$scope.clients.push(client),$mdDialog.hide()})},$scope.cancel=function(){$mdDialog.cancel()}}function clientsSidenav(){return{controller:clientsCtrl,link:function(scope,elem,attr,ctrl){}}}function clientsTemplate(){return{link:function(scope,elem,attr,ctrl){}}}function userService($http){this.fetchUser=function(){return $http({url:"../server/mr-user.php",method:"GET"}).then(function(response){return response.data})}}function clientsService($http,notify){this.fetchClients=function(params){return $http({url:"../server/mr-client.php",method:"GET",params:params}).then(function(response){return response.data})},this.addClient=function(params){return $http({url:"../server/mr-client.php",method:"POST",params:params}).then(function(response){return notify.show(response.data.msg),response.data})},this.updateClient=function(params){return $http({url:"../server/mr-client.php",method:"PUT",params:params}).then(function(response){return notify.show(response.data.msg),response.data})},this.deleteClient=function(params){return $http({url:"../server/mr-client.php",method:"DELETE",params:params}).then(function(response){return notify.show(response.data.msg),response.data})}}function calendarService($http,notify){this.fetchCalendar=function(params){return $http({url:"../server/mr-calendar.php",method:"GET",params:params}).then(function(response){return response.data})},this.addCalendar=function(params){return $http({url:"../server/mr-calendar.php",method:"POST",params:params}).then(function(response){return notify.show(response.data.msg),response.data})},this.updateCalendar=function(params){return $http({url:"../server/mr-calendar.php",method:"PUT",params:params}).then(function(response){return notify.show(response.data.msg),response.data})},this.deleteCalendar=function(params){return $http({url:"../server/mr-calendar.php",method:"DELETE",params:params}).then(function(response){return notify.show(response.data.msg),response.data})}}function mrLoginCtrl($location,$http,$cookies,$scope,notify,userService){$scope.login=function(login){$http({url:"../server/mr-login.php",method:"POST",params:login}).then(function(response){response.data.login?userService.fetchUser().then(function(user){user&&($cookies.putObject("user",user),$location.url("/clients"))}):notify.show(response.data.msg)})}}function notifyService($mdToast){this.show=function(text){$mdToast.show($mdToast.simple().content(text).position("top right"))}}function mojrokovnikAuth(userService,$cookies){var self=this;userService.fetchUser().then(function(user){user&&(self.user=user)}),this.getUser=function(){return self.user},this.isLoggedIn=function(){return!!$cookies.getObject("user")}}function mojrokovnikConf($routeProvider){$routeProvider.otherwise({redirectTo:"/clients"}),$routeProvider.when("/login",{templateUrl:"scripts/mojrokovnik/login/login.html"}),$routeProvider.when("/clients",{templateUrl:"scripts/mojrokovnik-clients/clients.html"}),$routeProvider.when("/calendar",{templateUrl:"scripts/mojrokovnik-calendar/calendar.html"})}function calendarTemplate(calendarService){return{controller:calendarCtrl,link:function(scope,element,attr,ctrl){function initializeCalendar(events){element.fullCalendar({header:{left:"prev,next today",center:"title",right:"month,agendaWeek,agendaDay"},height:angular.element("body").height(),firstDay:1,defaultView:"agendaWeek",timezone:"local",selectable:!0,editable:!0,eventLimit:!0,events:events,select:function(startDate,endDate){scope.showDialog(startDate,endDate)}})}calendarService.fetchCalendar().then(function(events){var filterEvents=[];return angular.forEach(events,function(item){filterEvents.push({title:item.calendar_name+" - "+item.calendar_comment,start:item.calendar_startDate,end:item.calendar_endDate})}),initializeCalendar(filterEvents)}),scope.createEvent=function(event){var eventData={title:event.calendar_name+" - "+event.calendar_comment,start:event.calendar_startDate,end:event.calendar_endDate};element.fullCalendar("renderEvent",eventData,!0),element.fullCalendar("unselect")}}}}function calendarCtrl($scope,$uibModal,calendarService){function calendarDialogCtrl($uibModalInstance){$scope.save=function(calendar,timetable){var startTime=timetable?moment(timetable.timetable_startTime).format("HH:mm:ss"):moment().format("HH:mm:ss"),startDate=moment(calendar.calendar_startDate).format("YYYY-MM-DD"),endTime=timetable?moment(timetable.timetable_duration).format("HH:mm:ss"):moment().format("HH:mm:ss"),endDate=moment(calendar.calendar_endDate).format("YYYY-MM-DD");calendar.calendar_startDate=new Date(startTime+" "+startDate),calendar.calendar_endDate=new Date(endTime+" "+endDate),calendarService.addCalendar(calendar).then(function(){$scope.createEvent(calendar),$uibModalInstance.close()})},$scope.cancel=function(){$uibModalInstance.dismiss()}}$scope.showDialog=function(startDate,endDate){$scope.calendar={calendar_startDate:startDate._d,calendar_endDate:endDate._d},$scope.timetable={timetable_startTime:startDate._d,timetabe_duration:moment(endDate).subtract(moment(startDate))},$uibModal.open({animation:!0,scope:$scope,templateUrl:"scripts/mojrokovnik-calendar/calendar-dialog.html",controller:calendarDialogCtrl})},$scope.types=["Ročište","Obaveza"]}function clientsCtrl($scope,clientsService,$mdDialog){$scope.getClients=function(){clientsService.fetchClients().then(function(clients){$scope.clients=clients,$scope.selClient=clients[0]})},$scope.showDialog=function(event,client){$mdDialog.show({scope:$scope,preserveScope:!0,locals:client,controller:clientDialogCtrl,templateUrl:"scripts/mojrokovnik-clients/clients-dialog.html",parent:angular.element(document.body),targetEvent:event,clickOutsideToClose:!0})},$scope.selectClient=function(client){$scope.selClient=client},$scope.removeClient=function(client){clientsService.deleteClient(client).then(function(){$scope.clients=_.without($scope.clients,client),$scope.selClient=$scope.clients[0]})},$scope.getClients()}function clientDialogCtrl($scope,$mdDialog,clientsService,locals){$scope.client=locals,$scope.save=function(client){locals?clientsService.updateClient(client).then(function(){$mdDialog.hide()}):clientsService.addClient(client).then(function(){$scope.clients.push(client),$mdDialog.hide()})},$scope.cancel=function(){$mdDialog.cancel()}}function clientsSidenav(){return{controller:clientsCtrl,link:function(scope,elem,attr,ctrl){}}}function clientsTemplate(){return{link:function(scope,elem,attr,ctrl){}}}function userService($http){this.fetchUser=function(){return $http({url:"../server/mr-user.php",method:"GET"}).then(function(response){return response.data})}}function clientsService($http,notify){this.fetchClients=function(params){return $http({url:"../server/mr-client.php",method:"GET",params:params}).then(function(response){return response.data})},this.addClient=function(params){return $http({url:"../server/mr-client.php",method:"POST",params:params}).then(function(response){return notify.show(response.data.msg),response.data})},this.updateClient=function(params){return $http({url:"../server/mr-client.php",method:"PUT",params:params}).then(function(response){return notify.show(response.data.msg),response.data})},this.deleteClient=function(params){return $http({url:"../server/mr-client.php",method:"DELETE",params:params}).then(function(response){return notify.show(response.data.msg),response.data})}}function calendarService($http,notify){this.fetchCalendar=function(params){return $http({url:"../server/mr-calendar.php",method:"GET",params:params}).then(function(response){return response.data})},this.addCalendar=function(params){return $http({url:"../server/mr-calendar.php",method:"POST",params:params}).then(function(response){return notify.show(response.data.msg),response.data})},this.updateCalendar=function(params){return $http({url:"../server/mr-calendar.php",method:"PUT",params:params}).then(function(response){return notify.show(response.data.msg),response.data})},this.deleteCalendar=function(params){return $http({url:"../server/mr-calendar.php",method:"DELETE",params:params}).then(function(response){return notify.show(response.data.msg),response.data})}}function mrLoginCtrl($location,$http,$cookies,$scope,notify,userService){$scope.login=function(login){$http({url:"../server/mr-login.php",method:"POST",params:login}).then(function(response){response.data.login?userService.fetchUser().then(function(user){user&&($cookies.putObject("user",user),$location.url("/clients"))}):notify.show(response.data.msg)})}}function notifyService($mdToast){this.show=function(text){$mdToast.show($mdToast.simple().content(text).position("top right"))}}function mojrokovnikAuth(userService,$cookies){var self=this;userService.fetchUser().then(function(user){user&&(self.user=user)}),this.getUser=function(){return self.user},this.isLoggedIn=function(){return!!$cookies.getObject("user")}}function mojrokovnikConf($routeProvider){$routeProvider.otherwise({redirectTo:"/clients"}),$routeProvider.when("/login",{templateUrl:"scripts/mojrokovnik/login/login.html"}),$routeProvider.when("/clients",{templateUrl:"scripts/mojrokovnik-clients/clients.html"}),$routeProvider.when("/calendar",{templateUrl:"scripts/mojrokovnik-calendar/calendar.html"})}function calendarTemplate(calendarService){return{controller:calendarCtrl,link:function(scope,element,attr,ctrl){function initializeCalendar(events){element.fullCalendar({header:{left:"prev,next today",center:"title",right:"month,agendaWeek,agendaDay"},height:angular.element("body").height(),firstDay:1,defaultView:"agendaWeek",
timezone:"local",selectable:!0,editable:!0,eventLimit:!0,events:events,select:function(startDate,endDate){scope.showDialog(startDate,endDate)}})}calendarService.fetchCalendar().then(function(events){var filterEvents=[];return angular.forEach(events,function(item){filterEvents.push({title:item.calendar_name+" - "+item.calendar_comment,start:item.calendar_startDate,end:item.calendar_endDate})}),initializeCalendar(filterEvents)}),scope.createEvent=function(event){var eventData={title:event.calendar_name+" - "+event.calendar_comment,start:event.calendar_startDate,end:event.calendar_endDate};element.fullCalendar("renderEvent",eventData,!0),element.fullCalendar("unselect")}}}}function calendarCtrl($scope,$uibModal,calendarService){function calendarDialogCtrl($uibModalInstance){$scope.save=function(calendar,timetable){var startTime=timetable?moment(timetable.timetable_startTime).format("HH:mm:ss"):moment().format("HH:mm:ss"),startDate=moment(calendar.calendar_startDate).format("YYYY-MM-DD"),endTime=timetable?moment(timetable.timetable_duration).format("HH:mm:ss"):moment().format("HH:mm:ss"),endDate=moment(calendar.calendar_endDate).format("YYYY-MM-DD");calendar.calendar_startDate=new Date(startTime+" "+startDate),calendar.calendar_endDate=new Date(endTime+" "+endDate),calendarService.addCalendar(calendar).then(function(){$scope.createEvent(calendar),$uibModalInstance.close()})},$scope.cancel=function(){$uibModalInstance.dismiss()}}$scope.showDialog=function(startDate,endDate){$scope.calendar={calendar_startDate:startDate._d,calendar_endDate:endDate._d},$scope.timetable={timetable_startTime:startDate._d,timetabe_duration:moment(endDate).subtract(moment(startDate))},$uibModal.open({animation:!0,scope:$scope,templateUrl:"scripts/mojrokovnik-calendar/calendar-dialog.html",controller:calendarDialogCtrl})},$scope.types=["Ročište","Obaveza"]}function clientsCtrl($scope,clientsService,$mdDialog){$scope.getClients=function(){clientsService.fetchClients().then(function(clients){$scope.clients=clients,$scope.selClient=clients[0]})},$scope.showDialog=function(event,client){$mdDialog.show({scope:$scope,preserveScope:!0,locals:client,controller:clientDialogCtrl,templateUrl:"scripts/mojrokovnik-clients/clients-dialog.html",parent:angular.element(document.body),targetEvent:event,clickOutsideToClose:!0})},$scope.selectClient=function(client){$scope.selClient=client},$scope.removeClient=function(client){clientsService.deleteClient(client).then(function(){$scope.clients=_.without($scope.clients,client),$scope.selClient=$scope.clients[0]})},$scope.getClients()}function clientDialogCtrl($scope,$mdDialog,clientsService,locals){$scope.client=locals,$scope.save=function(client){locals?clientsService.updateClient(client).then(function(){$mdDialog.hide()}):clientsService.addClient(client).then(function(){$scope.clients.push(client),$mdDialog.hide()})},$scope.cancel=function(){$mdDialog.cancel()}}function clientsSidenav(){return{controller:clientsCtrl,link:function(scope,elem,attr,ctrl){}}}function clientsTemplate(){return{link:function(scope,elem,attr,ctrl){}}}function userService($http){this.fetchUser=function(){return $http({url:"../server/mr-user.php",method:"GET"}).then(function(response){return response.data})}}function clientsService($http,notify){this.fetchClients=function(params){return $http({url:"../server/mr-client.php",method:"GET",params:params}).then(function(response){return response.data})},this.addClient=function(params){return $http({url:"../server/mr-client.php",method:"POST",params:params}).then(function(response){return notify.show(response.data.msg),response.data})},this.updateClient=function(params){return $http({url:"../server/mr-client.php",method:"PUT",params:params}).then(function(response){return notify.show(response.data.msg),response.data})},this.deleteClient=function(params){return $http({url:"../server/mr-client.php",method:"DELETE",params:params}).then(function(response){return notify.show(response.data.msg),response.data})}}function calendarService($http,notify){this.fetchCalendar=function(params){return $http({url:"../server/mr-calendar.php",method:"GET",params:params}).then(function(response){return response.data})},this.addCalendar=function(params){return $http({url:"../server/mr-calendar.php",method:"POST",params:params}).then(function(response){return notify.show(response.data.msg),response.data})},this.updateCalendar=function(params){return $http({url:"../server/mr-calendar.php",method:"PUT",params:params}).then(function(response){return notify.show(response.data.msg),response.data})},this.deleteCalendar=function(params){return $http({url:"../server/mr-calendar.php",method:"DELETE",params:params}).then(function(response){return notify.show(response.data.msg),response.data})}}function mrLoginCtrl($location,$http,$cookies,$scope,notify,userService){$scope.login=function(login){$http({url:"../server/mr-login.php",method:"POST",params:login}).then(function(response){response.data.login?userService.fetchUser().then(function(user){user&&($cookies.putObject("user",user),$location.url("/clients"))}):notify.show(response.data.msg)})}}function notifyService($mdToast){this.show=function(text){$mdToast.show($mdToast.simple().content(text).position("top right"))}}function mojrokovnikAuth(userService,$cookies){var self=this;userService.fetchUser().then(function(user){user&&(self.user=user)}),this.getUser=function(){return self.user},this.isLoggedIn=function(){return!!$cookies.getObject("user")}}function mojrokovnikConf($routeProvider){$routeProvider.otherwise({redirectTo:"/clients"}),$routeProvider.when("/login",{templateUrl:"scripts/mojrokovnik/login/login.html"}),$routeProvider.when("/clients",{templateUrl:"scripts/mojrokovnik-clients/clients.html"}),$routeProvider.when("/calendar",{templateUrl:"scripts/mojrokovnik-calendar/calendar.html"})}function calendarTemplate(calendarService){return{controller:calendarCtrl,link:function(scope,element,attr,ctrl){function initializeCalendar(events){element.fullCalendar({header:{left:"prev,next today",center:"title",right:"month,agendaWeek,agendaDay"},height:angular.element("body").height(),firstDay:1,defaultView:"agendaWeek",timezone:"local",selectable:!0,editable:!0,eventLimit:!0,events:events,select:function(startDate,endDate){scope.showDialog(startDate,endDate)}})}calendarService.fetchCalendar().then(function(events){var filterEvents=[];return angular.forEach(events,function(item){filterEvents.push({title:item.calendar_name+" - "+item.calendar_comment,start:item.calendar_startDate,end:item.calendar_endDate})}),initializeCalendar(filterEvents)}),scope.createEvent=function(event){var eventData={title:event.calendar_name+" - "+event.calendar_comment,start:event.calendar_startDate,end:event.calendar_endDate};element.fullCalendar("renderEvent",eventData,!0),element.fullCalendar("unselect")}}}}function calendarCtrl($scope,$uibModal,calendarService,clientsService){function calendarDialogCtrl($uibModalInstance){$scope.save=function(calendar,timetable){var startTime=timetable?moment(timetable.timetable_startTime).format("HH:mm:ss"):moment().format("HH:mm:ss"),startDate=moment(calendar.calendar_startDate).format("YYYY-MM-DD"),endTime=timetable?moment(timetable.timetable_duration).format("HH:mm:ss"):moment().format("HH:mm:ss"),endDate=moment(calendar.calendar_endDate).format("YYYY-MM-DD");calendar.calendar_startDate=new Date(startTime+" "+startDate),calendar.calendar_endDate=new Date(endTime+" "+endDate),calendarService.addCalendar(calendar).then(function(){$scope.createEvent(calendar),$uibModalInstance.close()})},$scope.cancel=function(){$uibModalInstance.dismiss()}}$scope.showDialog=function(startDate,endDate){$scope.calendar={calendar_startDate:startDate._d,calendar_endDate:endDate._d},$scope.timetable={timetable_startTime:startDate._d,timetabe_duration:moment(endDate).subtract(moment(startDate))},$uibModal.open({animation:!0,scope:$scope,templateUrl:"scripts/mojrokovnik-calendar/calendar-dialog.html",controller:calendarDialogCtrl})},$scope.types=["Ročište","Obaveza"],clientsService.fetchClients().then(function(clients){$scope.clients=clients})}function clientsCtrl($scope,clientsService,$mdDialog){$scope.getClients=function(){clientsService.fetchClients().then(function(clients){$scope.clients=clients,$scope.selClient=clients[0]})},$scope.showDialog=function(event,client){$mdDialog.show({scope:$scope,preserveScope:!0,locals:client,controller:clientDialogCtrl,templateUrl:"scripts/mojrokovnik-clients/clients-dialog.html",parent:angular.element(document.body),targetEvent:event,clickOutsideToClose:!0})},$scope.selectClient=function(client){$scope.selClient=client},$scope.removeClient=function(client){clientsService.deleteClient(client).then(function(){$scope.clients=_.without($scope.clients,client),$scope.selClient=$scope.clients[0]})},$scope.getClients()}function clientDialogCtrl($scope,$mdDialog,clientsService,locals){$scope.client=locals,$scope.save=function(client){locals?clientsService.updateClient(client).then(function(){$mdDialog.hide()}):clientsService.addClient(client).then(function(){$scope.clients.push(client),$mdDialog.hide()})},$scope.cancel=function(){$mdDialog.cancel()}}function clientsSidenav(){return{controller:clientsCtrl,link:function(scope,elem,attr,ctrl){}}}function clientsTemplate(){return{link:function(scope,elem,attr,ctrl){}}}function userService($http){this.fetchUser=function(){return $http({url:"../server/mr-user.php",method:"GET"}).then(function(response){return response.data})}}function clientsService($http,notify){this.fetchClients=function(params){return $http({url:"../server/mr-client.php",method:"GET",params:params}).then(function(response){return response.data})},this.addClient=function(params){return $http({url:"../server/mr-client.php",method:"POST",params:params}).then(function(response){return notify.show(response.data.msg),response.data})},this.updateClient=function(params){return $http({url:"../server/mr-client.php",method:"PUT",params:params}).then(function(response){return notify.show(response.data.msg),response.data})},this.deleteClient=function(params){return $http({url:"../server/mr-client.php",method:"DELETE",params:params}).then(function(response){return notify.show(response.data.msg),response.data})}}function calendarService($http,notify){this.fetchCalendar=function(params){return $http({url:"../server/mr-calendar.php",method:"GET",params:params}).then(function(response){return response.data})},this.addCalendar=function(params){return $http({url:"../server/mr-calendar.php",method:"POST",params:params}).then(function(response){return notify.show(response.data.msg),response.data})},this.updateCalendar=function(params){return $http({url:"../server/mr-calendar.php",method:"PUT",params:params}).then(function(response){return notify.show(response.data.msg),response.data})},this.deleteCalendar=function(params){return $http({url:"../server/mr-calendar.php",method:"DELETE",params:params}).then(function(response){return notify.show(response.data.msg),response.data})}}function mrLoginCtrl($location,$http,$cookies,$scope,notify,userService){$scope.login=function(login){$http({url:"../server/mr-login.php",method:"POST",params:login}).then(function(response){response.data.login?userService.fetchUser().then(function(user){user&&($cookies.putObject("user",user),$location.url("/clients"))}):notify.show(response.data.msg)})}}function notifyService($mdToast){this.show=function(text){$mdToast.show($mdToast.simple().content(text).position("top right"))}}function mojrokovnikAuth(userService,$cookies){var self=this;userService.fetchUser().then(function(user){user&&(self.user=user)}),this.getUser=function(){return self.user},this.isLoggedIn=function(){return!!$cookies.getObject("user")}}function mojrokovnikConf($routeProvider){$routeProvider.otherwise({redirectTo:"/clients"}),$routeProvider.when("/login",{templateUrl:"scripts/mojrokovnik/login/login.html"}),$routeProvider.when("/clients",{templateUrl:"scripts/mojrokovnik-clients/clients.html"}),$routeProvider.when("/calendar",{templateUrl:"scripts/mojrokovnik-calendar/calendar.html"})}function calendarTemplate(calendarService){return{controller:calendarCtrl,link:function(scope,element,attr,ctrl){function initializeCalendar(events){element.fullCalendar({header:{left:"prev,next today",center:"title",right:"month,agendaWeek,agendaDay"},height:angular.element("body").height(),firstDay:1,defaultView:"agendaWeek",timezone:"local",selectable:!0,editable:!0,eventLimit:!0,events:events,select:function(startDate,endDate){scope.showDialog(startDate,endDate)}})}calendarService.fetchCalendar().then(function(events){var filterEvents=[];return angular.forEach(events,function(item){filterEvents.push({title:item.calendar_name+" - "+item.calendar_comment,start:item.calendar_startDate,end:item.calendar_endDate})}),initializeCalendar(filterEvents)}),scope.createEvent=function(event){var eventData={title:event.calendar_name+" - "+event.calendar_comment,start:event.calendar_startDate,end:event.calendar_endDate};element.fullCalendar("renderEvent",eventData,!0),element.fullCalendar("unselect")}}}}function calendarCtrl($scope,$uibModal,calendarService,clientsService){function calendarDialogCtrl($uibModalInstance){$scope.save=function(calendar,timetable){var startTime=timetable?moment(timetable.timetable_startTime).format("HH:mm:ss"):moment().format("HH:mm:ss"),startDate=moment(calendar.calendar_startDate).format("YYYY-MM-DD"),endTime=timetable?moment(timetable.timetable_duration).format("HH:mm:ss"):moment().format("HH:mm:ss"),endDate=moment(calendar.calendar_endDate).format("YYYY-MM-DD");calendar.calendar_startDate=new Date(startTime+" "+startDate),calendar.calendar_endDate=new Date(endTime+" "+endDate),calendarService.addCalendar(calendar).then(function(){$scope.createEvent(calendar),$uibModalInstance.close()})},$scope.cancel=function(){$uibModalInstance.dismiss()}}$scope.showDialog=function(startDate,endDate){$scope.calendar={calendar_startDate:startDate._d,calendar_endDate:endDate._d},$scope.timetable={timetable_startTime:startDate._d,timetabe_duration:moment(endDate).subtract(moment(startDate))},$uibModal.open({animation:!0,scope:$scope,templateUrl:"scripts/mojrokovnik-calendar/calendar-dialog.html",controller:calendarDialogCtrl}),clientsService.fetchClients().then(function(clients){$scope.clients=clients}),$scope.types=["Ročište","Obaveza"]}}function clientsCtrl($scope,clientsService,$mdDialog){$scope.getClients=function(){clientsService.fetchClients().then(function(clients){$scope.clients=clients,$scope.selClient=clients[0]})},$scope.showDialog=function(event,client){$mdDialog.show({scope:$scope,preserveScope:!0,locals:client,controller:clientDialogCtrl,templateUrl:"scripts/mojrokovnik-clients/clients-dialog.html",parent:angular.element(document.body),targetEvent:event,clickOutsideToClose:!0})},$scope.selectClient=function(client){$scope.selClient=client},$scope.removeClient=function(client){clientsService.deleteClient(client).then(function(){$scope.clients=_.without($scope.clients,client),$scope.selClient=$scope.clients[0]})},$scope.getClients()}function clientDialogCtrl($scope,$mdDialog,clientsService,locals){$scope.client=locals,$scope.save=function(client){locals?clientsService.updateClient(client).then(function(){$mdDialog.hide()}):clientsService.addClient(client).then(function(){$scope.clients.push(client),$mdDialog.hide()})},$scope.cancel=function(){$mdDialog.cancel()}}function clientsSidenav(){return{controller:clientsCtrl,link:function(scope,elem,attr,ctrl){}}}function clientsTemplate(){return{link:function(scope,elem,attr,ctrl){}}}function userService($http){this.fetchUser=function(){return $http({url:"../server/mr-user.php",method:"GET"}).then(function(response){return response.data})}}function clientsService($http,notify){this.fetchClients=function(params){return $http({url:"../server/mr-client.php",method:"GET",params:params}).then(function(response){return response.data})},this.addClient=function(params){return $http({url:"../server/mr-client.php",method:"POST",params:params}).then(function(response){return notify.show(response.data.msg),response.data})},this.updateClient=function(params){return $http({url:"../server/mr-client.php",method:"PUT",params:params}).then(function(response){return notify.show(response.data.msg),response.data})},this.deleteClient=function(params){return $http({url:"../server/mr-client.php",method:"DELETE",params:params}).then(function(response){return notify.show(response.data.msg),response.data})}}function calendarService($http,notify){this.fetchCalendar=function(params){return $http({url:"../server/mr-calendar.php",method:"GET",params:params}).then(function(response){return response.data})},this.addCalendar=function(params){return $http({url:"../server/mr-calendar.php",method:"POST",params:params}).then(function(response){return notify.show(response.data.msg),response.data})},this.updateCalendar=function(params){return $http({url:"../server/mr-calendar.php",method:"PUT",params:params}).then(function(response){return notify.show(response.data.msg),response.data})},this.deleteCalendar=function(params){return $http({url:"../server/mr-calendar.php",method:"DELETE",params:params}).then(function(response){return notify.show(response.data.msg),response.data})}}function mrLoginCtrl($location,$http,$cookies,$scope,notify,userService){$scope.login=function(login){$http({url:"../server/mr-login.php",method:"POST",params:login}).then(function(response){response.data.login?userService.fetchUser().then(function(user){user&&($cookies.putObject("user",user),$location.url("/clients"))}):notify.show(response.data.msg)})}}function notifyService($mdToast){this.show=function(text){$mdToast.show($mdToast.simple().content(text).position("top right"))}}function mojrokovnikAuth(userService,$cookies){var self=this;userService.fetchUser().then(function(user){user&&(self.user=user)}),this.getUser=function(){return self.user},this.isLoggedIn=function(){return!!$cookies.getObject("user")}}function mojrokovnikConf($routeProvider){$routeProvider.otherwise({redirectTo:"/clients"}),$routeProvider.when("/login",{templateUrl:"scripts/mojrokovnik/login/login.html"}),$routeProvider.when("/clients",{templateUrl:"scripts/mojrokovnik-clients/clients.html"}),$routeProvider.when("/calendar",{templateUrl:"scripts/mojrokovnik-calendar/calendar.html"})}function calendarTemplate(calendarService){return{controller:calendarCtrl,link:function(scope,element,attr,ctrl){function initializeCalendar(events){element.fullCalendar({header:{left:"prev,next today",center:"title",right:"month,agendaWeek,agendaDay"},height:angular.element("body").height(),firstDay:1,defaultView:"agendaWeek",timezone:"local",selectable:!0,editable:!0,eventLimit:!0,events:events,select:function(startDate,endDate){scope.showDialog(startDate,endDate)}})}calendarService.fetchCalendar().then(function(events){var filterEvents=[];return angular.forEach(events,function(item){filterEvents.push({title:item.calendar_name+" - "+item.calendar_comment,start:item.calendar_startDate,end:item.calendar_endDate})}),initializeCalendar(filterEvents)}),scope.createEvent=function(event){var eventData={title:event.calendar_name+" - "+event.calendar_comment,start:event.calendar_startDate,end:event.calendar_endDate};element.fullCalendar("renderEvent",eventData,!0),element.fullCalendar("unselect")}}}}function calendarCtrl($scope,$uibModal,calendarService,clientsService){function calendarDialogCtrl($uibModalInstance){$scope.save=function(calendar,timetable){var startTime=timetable?moment(timetable.timetable_startTime).format("HH:mm:ss"):moment().format("HH:mm:ss"),startDate=moment(calendar.calendar_startDate).format("YYYY-MM-DD"),endTime=timetable?moment(timetable.timetable_duration).format("HH:mm:ss"):moment().format("HH:mm:ss"),endDate=moment(calendar.calendar_endDate).format("YYYY-MM-DD");calendar.calendar_startDate=new Date(startTime+" "+startDate),calendar.calendar_endDate=new Date(endTime+" "+endDate),calendarService.addCalendar(calendar).then(function(){$scope.createEvent(calendar),$uibModalInstance.close()})},$scope.cancel=function(){$uibModalInstance.dismiss()}}$scope.showDialog=function(startDate,endDate){$scope.calendar={calendar_startDate:startDate._d,calendar_endDate:endDate._d},$scope.timetable={timetable_startTime:startDate._d,timetabe_duration:moment(endDate).subtract(moment(startDate))},$uibModal.open({animation:!0,scope:$scope,templateUrl:"scripts/mojrokovnik-calendar/calendar-dialog.html",controller:calendarDialogCtrl}),clientsService.fetchClients().then(function(clients){console.log("clients initialization called"),$scope.clients=clients}),$scope.types=["Ročište","Obaveza"]}}function clientsCtrl($scope,clientsService,$mdDialog){$scope.getClients=function(){clientsService.fetchClients().then(function(clients){$scope.clients=clients,$scope.selClient=clients[0]})},$scope.showDialog=function(event,client){$mdDialog.show({scope:$scope,preserveScope:!0,locals:client,controller:clientDialogCtrl,templateUrl:"scripts/mojrokovnik-clients/clients-dialog.html",parent:angular.element(document.body),targetEvent:event,clickOutsideToClose:!0})},$scope.selectClient=function(client){$scope.selClient=client},$scope.removeClient=function(client){clientsService.deleteClient(client).then(function(){$scope.clients=_.without($scope.clients,client),$scope.selClient=$scope.clients[0]})},$scope.getClients()}function clientDialogCtrl($scope,$mdDialog,clientsService,locals){$scope.client=locals,$scope.save=function(client){locals?clientsService.updateClient(client).then(function(){$mdDialog.hide()}):clientsService.addClient(client).then(function(){$scope.clients.push(client),$mdDialog.hide()})},$scope.cancel=function(){$mdDialog.cancel()}}function clientsSidenav(){return{controller:clientsCtrl,link:function(scope,elem,attr,ctrl){}}}function clientsTemplate(){return{link:function(scope,elem,attr,ctrl){}}}function userService($http){this.fetchUser=function(){return $http({url:"../server/mr-user.php",method:"GET"}).then(function(response){return response.data})}}function clientsService($http,notify){this.fetchClients=function(params){return $http({url:"../server/mr-client.php",method:"GET",params:params}).then(function(response){return response.data})},this.addClient=function(params){return $http({url:"../server/mr-client.php",method:"POST",params:params}).then(function(response){return notify.show(response.data.msg),response.data})},this.updateClient=function(params){return $http({url:"../server/mr-client.php",method:"PUT",params:params}).then(function(response){return notify.show(response.data.msg),response.data})},this.deleteClient=function(params){return $http({url:"../server/mr-client.php",method:"DELETE",params:params}).then(function(response){return notify.show(response.data.msg),response.data})}}function calendarService($http,notify){this.fetchCalendar=function(params){return $http({url:"../server/mr-calendar.php",method:"GET",params:params}).then(function(response){return response.data})},this.addCalendar=function(params){return $http({url:"../server/mr-calendar.php",method:"POST",params:params}).then(function(response){return notify.show(response.data.msg),response.data})},this.updateCalendar=function(params){return $http({url:"../server/mr-calendar.php",method:"PUT",params:params}).then(function(response){return notify.show(response.data.msg),response.data})},this.deleteCalendar=function(params){return $http({url:"../server/mr-calendar.php",method:"DELETE",params:params}).then(function(response){return notify.show(response.data.msg),response.data})}}function mrLoginCtrl($location,$http,$cookies,$scope,notify,userService){$scope.login=function(login){$http({url:"../server/mr-login.php",method:"POST",params:login}).then(function(response){response.data.login?userService.fetchUser().then(function(user){user&&($cookies.putObject("user",user),$location.url("/clients"))}):notify.show(response.data.msg)})}}function notifyService($mdToast){this.show=function(text){$mdToast.show($mdToast.simple().content(text).position("top right"))}}function mojrokovnikAuth(userService,$cookies){var self=this;userService.fetchUser().then(function(user){user&&(self.user=user)}),this.getUser=function(){return self.user},this.isLoggedIn=function(){return!!$cookies.getObject("user")}}function mojrokovnikConf($routeProvider){$routeProvider.otherwise({redirectTo:"/clients"}),$routeProvider.when("/login",{templateUrl:"scripts/mojrokovnik/login/login.html"}),$routeProvider.when("/clients",{templateUrl:"scripts/mojrokovnik-clients/clients.html"}),$routeProvider.when("/calendar",{templateUrl:"scripts/mojrokovnik-calendar/calendar.html"})}function calendarTemplate(calendarService){return{controller:calendarCtrl,link:function(scope,element,attr,ctrl){function initializeCalendar(events){element.fullCalendar({header:{left:"prev,next today",center:"title",right:"month,agendaWeek,agendaDay"},height:angular.element("body").height(),firstDay:1,defaultView:"agendaWeek",timezone:"local",selectable:!0,editable:!0,eventLimit:!0,events:events,select:function(startDate,endDate){scope.showDialog(startDate,endDate)}})}calendarService.fetchCalendar().then(function(events){var filterEvents=[];return angular.forEach(events,function(item){filterEvents.push({title:item.calendar_name+" - "+item.calendar_comment,start:item.calendar_startDate,end:item.calendar_endDate})}),initializeCalendar(filterEvents)}),scope.createEvent=function(event){var eventData={title:event.calendar_name+" - "+event.calendar_comment,start:event.calendar_startDate,end:event.calendar_endDate};element.fullCalendar("renderEvent",eventData,!0),element.fullCalendar("unselect")}}}}function calendarCtrl($scope,$uibModal,calendarService,clientsService){function calendarDialogCtrl($uibModalInstance){$scope.save=function(calendar,timetable){var startTime=timetable?moment(timetable.timetable_startTime).format("HH:mm:ss"):moment().format("HH:mm:ss"),startDate=moment(calendar.calendar_startDate).format("YYYY-MM-DD"),endTime=timetable?moment(timetable.timetable_duration).format("HH:mm:ss"):moment().format("HH:mm:ss"),endDate=moment(calendar.calendar_endDate).format("YYYY-MM-DD");calendar.calendar_startDate=new Date(startTime+" "+startDate),calendar.calendar_endDate=new Date(endTime+" "+endDate),calendarService.addCalendar(calendar).then(function(){$scope.createEvent(calendar),$uibModalInstance.close()})},$scope.cancel=function(){$uibModalInstance.dismiss()}}$scope.showDialog=function(startDate,endDate){$scope.calendar={calendar_startDate:startDate._d,calendar_endDate:endDate._d},$scope.timetable={timetable_startTime:startDate._d,timetabe_duration:moment(endDate).subtract(moment(startDate))},$uibModal.open({animation:!0,scope:$scope,templateUrl:"scripts/mojrokovnik-calendar/calendar-dialog.html",controller:calendarDialogCtrl}),$scope.types=["Ročište","Obaveza"]}}function clientsCtrl($scope,clientsService,$mdDialog){$scope.getClients=function(){clientsService.fetchClients().then(function(clients){$scope.clients=clients,$scope.selClient=clients[0]})},$scope.showDialog=function(event,client){$mdDialog.show({scope:$scope,preserveScope:!0,locals:client,controller:clientDialogCtrl,templateUrl:"scripts/mojrokovnik-clients/clients-dialog.html",parent:angular.element(document.body),targetEvent:event,clickOutsideToClose:!0})},$scope.selectClient=function(client){$scope.selClient=client},$scope.removeClient=function(client){clientsService.deleteClient(client).then(function(){$scope.clients=_.without($scope.clients,client),$scope.selClient=$scope.clients[0]})},$scope.getClients()}function clientDialogCtrl($scope,$mdDialog,clientsService,locals){$scope.client=locals,$scope.save=function(client){locals?clientsService.updateClient(client).then(function(){$mdDialog.hide()}):clientsService.addClient(client).then(function(){$scope.clients.push(client),$mdDialog.hide()})},$scope.cancel=function(){$mdDialog.cancel()}}function clientsSidenav(){return{controller:clientsCtrl,link:function(scope,elem,attr,ctrl){}}}function clientsTemplate(){return{link:function(scope,elem,attr,ctrl){}}}function userService($http){this.fetchUser=function(){return $http({url:"../server/mr-user.php",method:"GET"}).then(function(response){return response.data})}}function clientsService($http,notify){this.fetchClients=function(params){return $http({url:"../server/mr-client.php",method:"GET",params:params}).then(function(response){return response.data})},this.addClient=function(params){return $http({url:"../server/mr-client.php",method:"POST",params:params}).then(function(response){return notify.show(response.data.msg),response.data})},this.updateClient=function(params){return $http({url:"../server/mr-client.php",method:"PUT",params:params}).then(function(response){return notify.show(response.data.msg),response.data})},this.deleteClient=function(params){return $http({url:"../server/mr-client.php",method:"DELETE",params:params}).then(function(response){return notify.show(response.data.msg),response.data})}}function calendarService($http,notify){this.fetchCalendar=function(params){return $http({url:"../server/mr-calendar.php",method:"GET",params:params}).then(function(response){return response.data})},this.addCalendar=function(params){return $http({url:"../server/mr-calendar.php",method:"POST",params:params}).then(function(response){return notify.show(response.data.msg),response.data})},this.updateCalendar=function(params){return $http({url:"../server/mr-calendar.php",method:"PUT",params:params}).then(function(response){return notify.show(response.data.msg),response.data})},this.deleteCalendar=function(params){return $http({url:"../server/mr-calendar.php",method:"DELETE",params:params}).then(function(response){return notify.show(response.data.msg),response.data})}}function mrLoginCtrl($location,$http,$cookies,$scope,notify,userService){$scope.login=function(login){$http({url:"../server/mr-login.php",method:"POST",params:login}).then(function(response){response.data.login?userService.fetchUser().then(function(user){user&&($cookies.putObject("user",user),$location.url("/clients"))}):notify.show(response.data.msg)})}}function notifyService($mdToast){this.show=function(text){$mdToast.show($mdToast.simple().content(text).position("top right"))}}function mojrokovnikAuth(userService,$cookies){var self=this;userService.fetchUser().then(function(user){user&&(self.user=user)}),this.getUser=function(){return self.user},this.isLoggedIn=function(){return!!$cookies.getObject("user")}}function mojrokovnikConf($routeProvider){$routeProvider.otherwise({redirectTo:"/clients"}),$routeProvider.when("/login",{templateUrl:"scripts/mojrokovnik/login/login.html"}),$routeProvider.when("/clients",{templateUrl:"scripts/mojrokovnik-clients/clients.html"}),$routeProvider.when("/calendar",{templateUrl:"scripts/mojrokovnik-calendar/calendar.html"})}function calendarTemplate(calendarService){return{controller:calendarCtrl,link:function(scope,element,attr,ctrl){function initializeCalendar(events){element.fullCalendar({header:{left:"prev,next today",center:"title",right:"month,agendaWeek,agendaDay"},height:angular.element("body").height(),firstDay:1,defaultView:"agendaWeek",timezone:"local",selectable:!0,editable:!0,eventLimit:!0,events:events,select:function(startDate,endDate){scope.showDialog(startDate,endDate)}})}calendarService.fetchCalendar().then(function(events){var filterEvents=[];return angular.forEach(events,function(item){filterEvents.push({title:item.calendar_name+" - "+item.calendar_comment,start:item.calendar_startDate,end:item.calendar_endDate})}),initializeCalendar(filterEvents)}),scope.createEvent=function(event){var eventData={title:event.calendar_name+" - "+event.calendar_comment,start:event.calendar_startDate,end:event.calendar_endDate};element.fullCalendar("renderEvent",eventData,!0),element.fullCalendar("unselect")}}}}function calendarCtrl($scope,$uibModal,calendarService,clientsService){function calendarDialogCtrl($uibModalInstance){
$scope.save=function(calendar,timetable){var startTime=timetable?moment(timetable.timetable_startTime).format("HH:mm:ss"):moment().format("HH:mm:ss"),startDate=moment(calendar.calendar_startDate).format("YYYY-MM-DD"),endTime=timetable?moment(timetable.timetable_duration).format("HH:mm:ss"):moment().format("HH:mm:ss"),endDate=moment(calendar.calendar_endDate).format("YYYY-MM-DD");calendar.calendar_startDate=new Date(startTime+" "+startDate),calendar.calendar_endDate=new Date(endTime+" "+endDate),calendarService.addCalendar(calendar).then(function(){$scope.createEvent(calendar),$uibModalInstance.close()})},$scope.cancel=function(){$uibModalInstance.dismiss()}}$scope.showDialog=function(startDate,endDate){$scope.calendar={calendar_startDate:startDate._d,calendar_endDate:endDate._d},$scope.timetable={timetable_startTime:startDate._d,timetabe_duration:moment(endDate).subtract(moment(startDate))},$uibModal.open({animation:!0,scope:$scope,templateUrl:"scripts/mojrokovnik-calendar/calendar-dialog.html",controller:calendarDialogCtrl}),console.log("clients initialization called"),clientsService.fetchClients().then(function(clients){$scope.clients=clients}),$scope.types=["Ročište","Obaveza"]}}function clientsCtrl($scope,clientsService,$mdDialog){$scope.getClients=function(){clientsService.fetchClients().then(function(clients){$scope.clients=clients,$scope.selClient=clients[0]})},$scope.showDialog=function(event,client){$mdDialog.show({scope:$scope,preserveScope:!0,locals:client,controller:clientDialogCtrl,templateUrl:"scripts/mojrokovnik-clients/clients-dialog.html",parent:angular.element(document.body),targetEvent:event,clickOutsideToClose:!0})},$scope.selectClient=function(client){$scope.selClient=client},$scope.removeClient=function(client){clientsService.deleteClient(client).then(function(){$scope.clients=_.without($scope.clients,client),$scope.selClient=$scope.clients[0]})},$scope.getClients()}function clientDialogCtrl($scope,$mdDialog,clientsService,locals){$scope.client=locals,$scope.save=function(client){locals?clientsService.updateClient(client).then(function(){$mdDialog.hide()}):clientsService.addClient(client).then(function(){$scope.clients.push(client),$mdDialog.hide()})},$scope.cancel=function(){$mdDialog.cancel()}}function clientsSidenav(){return{controller:clientsCtrl,link:function(scope,elem,attr,ctrl){}}}function clientsTemplate(){return{link:function(scope,elem,attr,ctrl){}}}function userService($http){this.fetchUser=function(){return $http({url:"../server/mr-user.php",method:"GET"}).then(function(response){return response.data})}}function clientsService($http,notify){this.fetchClients=function(params){return $http({url:"../server/mr-client.php",method:"GET",params:params}).then(function(response){return response.data})},this.addClient=function(params){return $http({url:"../server/mr-client.php",method:"POST",params:params}).then(function(response){return notify.show(response.data.msg),response.data})},this.updateClient=function(params){return $http({url:"../server/mr-client.php",method:"PUT",params:params}).then(function(response){return notify.show(response.data.msg),response.data})},this.deleteClient=function(params){return $http({url:"../server/mr-client.php",method:"DELETE",params:params}).then(function(response){return notify.show(response.data.msg),response.data})}}function calendarService($http,notify){this.fetchCalendar=function(params){return $http({url:"../server/mr-calendar.php",method:"GET",params:params}).then(function(response){return response.data})},this.addCalendar=function(params){return $http({url:"../server/mr-calendar.php",method:"POST",params:params}).then(function(response){return notify.show(response.data.msg),response.data})},this.updateCalendar=function(params){return $http({url:"../server/mr-calendar.php",method:"PUT",params:params}).then(function(response){return notify.show(response.data.msg),response.data})},this.deleteCalendar=function(params){return $http({url:"../server/mr-calendar.php",method:"DELETE",params:params}).then(function(response){return notify.show(response.data.msg),response.data})}}function mrLoginCtrl($location,$http,$cookies,$scope,notify,userService){$scope.login=function(login){$http({url:"../server/mr-login.php",method:"POST",params:login}).then(function(response){response.data.login?userService.fetchUser().then(function(user){user&&($cookies.putObject("user",user),$location.url("/clients"))}):notify.show(response.data.msg)})}}function notifyService($mdToast){this.show=function(text){$mdToast.show($mdToast.simple().content(text).position("top right"))}}function mojrokovnikAuth(userService,$cookies){var self=this;userService.fetchUser().then(function(user){user&&(self.user=user)}),this.getUser=function(){return self.user},this.isLoggedIn=function(){return!!$cookies.getObject("user")}}function mojrokovnikConf($routeProvider){$routeProvider.otherwise({redirectTo:"/clients"}),$routeProvider.when("/login",{templateUrl:"scripts/mojrokovnik/login/login.html"}),$routeProvider.when("/clients",{templateUrl:"scripts/mojrokovnik-clients/clients.html"}),$routeProvider.when("/calendar",{templateUrl:"scripts/mojrokovnik-calendar/calendar.html"})}function calendarTemplate(calendarService){return{controller:calendarCtrl,link:function(scope,element,attr,ctrl){function initializeCalendar(events){element.fullCalendar({header:{left:"prev,next today",center:"title",right:"month,agendaWeek,agendaDay"},height:angular.element("body").height(),firstDay:1,defaultView:"agendaWeek",timezone:"local",selectable:!0,editable:!0,eventLimit:!0,events:events,select:function(startDate,endDate){scope.showDialog(startDate,endDate)}})}calendarService.fetchCalendar().then(function(events){var filterEvents=[];return angular.forEach(events,function(item){filterEvents.push({title:item.calendar_name+" - "+item.calendar_comment,start:item.calendar_startDate,end:item.calendar_endDate})}),initializeCalendar(filterEvents)}),scope.createEvent=function(event){var eventData={title:event.calendar_name+" - "+event.calendar_comment,start:event.calendar_startDate,end:event.calendar_endDate};element.fullCalendar("renderEvent",eventData,!0),element.fullCalendar("unselect")}}}}function calendarCtrl($scope,$uibModal,calendarService,clientsService){function calendarDialogCtrl($uibModalInstance){$scope.save=function(calendar,timetable){var startTime=timetable?moment(timetable.timetable_startTime).format("HH:mm:ss"):moment().format("HH:mm:ss"),startDate=moment(calendar.calendar_startDate).format("YYYY-MM-DD"),endTime=timetable?moment(timetable.timetable_duration).format("HH:mm:ss"):moment().format("HH:mm:ss"),endDate=moment(calendar.calendar_endDate).format("YYYY-MM-DD");calendar.calendar_startDate=new Date(startTime+" "+startDate),calendar.calendar_endDate=new Date(endTime+" "+endDate),calendarService.addCalendar(calendar).then(function(){$scope.createEvent(calendar),$uibModalInstance.close()})},$scope.cancel=function(){$uibModalInstance.dismiss()}}$scope.showDialog=function(startDate,endDate){$scope.calendar={calendar_startDate:startDate._d,calendar_endDate:endDate._d},$scope.timetable={timetable_startTime:startDate._d,timetabe_duration:moment(endDate).subtract(moment(startDate))},$uibModal.open({animation:!0,scope:$scope,templateUrl:"scripts/mojrokovnik-calendar/calendar-dialog.html",controller:calendarDialogCtrl}),clientsService.fetchClients().then(function(clients){$scope.clients=clients}),$scope.types=["Ročište","Obaveza"]}}function clientsCtrl($scope,clientsService,$mdDialog){$scope.getClients=function(){clientsService.fetchClients().then(function(clients){$scope.clients=clients,$scope.selClient=clients[0]})},$scope.showDialog=function(event,client){$mdDialog.show({scope:$scope,preserveScope:!0,locals:client,controller:clientDialogCtrl,templateUrl:"scripts/mojrokovnik-clients/clients-dialog.html",parent:angular.element(document.body),targetEvent:event,clickOutsideToClose:!0})},$scope.selectClient=function(client){$scope.selClient=client},$scope.removeClient=function(client){clientsService.deleteClient(client).then(function(){$scope.clients=_.without($scope.clients,client),$scope.selClient=$scope.clients[0]})},$scope.getClients()}function clientDialogCtrl($scope,$mdDialog,clientsService,locals){$scope.client=locals,$scope.save=function(client){locals?clientsService.updateClient(client).then(function(){$mdDialog.hide()}):clientsService.addClient(client).then(function(){$scope.clients.push(client),$mdDialog.hide()})},$scope.cancel=function(){$mdDialog.cancel()}}function clientsSidenav(){return{controller:clientsCtrl,link:function(scope,elem,attr,ctrl){}}}function clientsTemplate(){return{link:function(scope,elem,attr,ctrl){}}}function userService($http){this.fetchUser=function(){return $http({url:"../server/mr-user.php",method:"GET"}).then(function(response){return response.data})}}function clientsService($http,notify){this.fetchClients=function(params){return $http({url:"../server/mr-client.php",method:"GET",params:params}).then(function(response){return response.data})},this.addClient=function(params){return $http({url:"../server/mr-client.php",method:"POST",params:params}).then(function(response){return notify.show(response.data.msg),response.data})},this.updateClient=function(params){return $http({url:"../server/mr-client.php",method:"PUT",params:params}).then(function(response){return notify.show(response.data.msg),response.data})},this.deleteClient=function(params){return $http({url:"../server/mr-client.php",method:"DELETE",params:params}).then(function(response){return notify.show(response.data.msg),response.data})}}function calendarService($http,notify){this.fetchCalendar=function(params){return $http({url:"../server/mr-calendar.php",method:"GET",params:params}).then(function(response){return response.data})},this.addCalendar=function(params){return $http({url:"../server/mr-calendar.php",method:"POST",params:params}).then(function(response){return notify.show(response.data.msg),response.data})},this.updateCalendar=function(params){return $http({url:"../server/mr-calendar.php",method:"PUT",params:params}).then(function(response){return notify.show(response.data.msg),response.data})},this.deleteCalendar=function(params){return $http({url:"../server/mr-calendar.php",method:"DELETE",params:params}).then(function(response){return notify.show(response.data.msg),response.data})}}function mrLoginCtrl($location,$http,$cookies,$scope,notify,userService){$scope.login=function(login){$http({url:"../server/mr-login.php",method:"POST",params:login}).then(function(response){response.data.login?userService.fetchUser().then(function(user){user&&($cookies.putObject("user",user),$location.url("/clients"))}):notify.show(response.data.msg)})}}function notifyService($mdToast){this.show=function(text){$mdToast.show($mdToast.simple().content(text).position("top right"))}}function mojrokovnikAuth(userService,$cookies){var self=this;userService.fetchUser().then(function(user){user&&(self.user=user)}),this.getUser=function(){return self.user},this.isLoggedIn=function(){return!!$cookies.getObject("user")}}function mojrokovnikConf($routeProvider){$routeProvider.otherwise({redirectTo:"/clients"}),$routeProvider.when("/login",{templateUrl:"scripts/mojrokovnik/login/login.html"}),$routeProvider.when("/clients",{templateUrl:"scripts/mojrokovnik-clients/clients.html"}),$routeProvider.when("/calendar",{templateUrl:"scripts/mojrokovnik-calendar/calendar.html"})}function calendarTemplate(calendarService){return{controller:calendarCtrl,link:function(scope,element,attr,ctrl){function initializeCalendar(events){element.fullCalendar({header:{left:"prev,next today",center:"title",right:"month,agendaWeek,agendaDay"},height:angular.element("body").height(),firstDay:1,defaultView:"agendaWeek",timezone:"local",selectable:!0,editable:!0,eventLimit:!0,events:events,select:function(startDate,endDate){scope.showDialog(startDate,endDate)}})}calendarService.fetchCalendar().then(function(events){var filterEvents=[];return angular.forEach(events,function(item){filterEvents.push({title:item.calendar_name+" - "+item.calendar_comment,start:item.calendar_startDate,end:item.calendar_endDate})}),initializeCalendar(filterEvents)}),scope.createEvent=function(event){var eventData={title:event.calendar_name+" - "+event.calendar_comment,start:event.calendar_startDate,end:event.calendar_endDate};element.fullCalendar("renderEvent",eventData,!0),element.fullCalendar("unselect")}}}}function calendarCtrl($scope,$uibModal,calendarService,clientsService){function calendarDialogCtrl($uibModalInstance){$scope.save=function(calendar,timetable){var startTime=timetable?moment(timetable.timetable_startTime).format("HH:mm:ss"):moment().format("HH:mm:ss"),startDate=moment(calendar.calendar_startDate).format("YYYY-MM-DD"),endTime=timetable?moment(timetable.timetable_duration).format("HH:mm:ss"):moment().format("HH:mm:ss"),endDate=moment(calendar.calendar_endDate).format("YYYY-MM-DD");calendar.calendar_startDate=new Date(startTime+" "+startDate),calendar.calendar_endDate=new Date(endTime+" "+endDate),calendarService.addCalendar(calendar).then(function(){$scope.createEvent(calendar),$uibModalInstance.close()})},$scope.cancel=function(){$uibModalInstance.dismiss()}}$scope.showDialog=function(startDate,endDate){$scope.calendar={calendar_startDate:startDate._d,calendar_endDate:endDate._d},$scope.timetable={timetable_startTime:startDate._d,timetabe_duration:moment(endDate).subtract(moment(startDate))},$uibModal.open({animation:!0,scope:$scope,templateUrl:"scripts/mojrokovnik-calendar/calendar-dialog.html",controller:calendarDialogCtrl}),clientsService.fetchClients().then(function(clients){$scope.clients=clients}),$scope.types=[{1:"Ročište"},{2:"Obaveza"}]}}function clientsCtrl($scope,clientsService,$mdDialog){$scope.getClients=function(){clientsService.fetchClients().then(function(clients){$scope.clients=clients,$scope.selClient=clients[0]})},$scope.showDialog=function(event,client){$mdDialog.show({scope:$scope,preserveScope:!0,locals:client,controller:clientDialogCtrl,templateUrl:"scripts/mojrokovnik-clients/clients-dialog.html",parent:angular.element(document.body),targetEvent:event,clickOutsideToClose:!0})},$scope.selectClient=function(client){$scope.selClient=client},$scope.removeClient=function(client){clientsService.deleteClient(client).then(function(){$scope.clients=_.without($scope.clients,client),$scope.selClient=$scope.clients[0]})},$scope.getClients()}function clientDialogCtrl($scope,$mdDialog,clientsService,locals){$scope.client=locals,$scope.save=function(client){locals?clientsService.updateClient(client).then(function(){$mdDialog.hide()}):clientsService.addClient(client).then(function(){$scope.clients.push(client),$mdDialog.hide()})},$scope.cancel=function(){$mdDialog.cancel()}}function clientsSidenav(){return{controller:clientsCtrl,link:function(scope,elem,attr,ctrl){}}}function clientsTemplate(){return{link:function(scope,elem,attr,ctrl){}}}function userService($http){this.fetchUser=function(){return $http({url:"../server/mr-user.php",method:"GET"}).then(function(response){return response.data})}}function clientsService($http,notify){this.fetchClients=function(params){return $http({url:"../server/mr-client.php",method:"GET",params:params}).then(function(response){return response.data})},this.addClient=function(params){return $http({url:"../server/mr-client.php",method:"POST",params:params}).then(function(response){return notify.show(response.data.msg),response.data})},this.updateClient=function(params){return $http({url:"../server/mr-client.php",method:"PUT",params:params}).then(function(response){return notify.show(response.data.msg),response.data})},this.deleteClient=function(params){return $http({url:"../server/mr-client.php",method:"DELETE",params:params}).then(function(response){return notify.show(response.data.msg),response.data})}}function calendarService($http,notify){this.fetchCalendar=function(params){return $http({url:"../server/mr-calendar.php",method:"GET",params:params}).then(function(response){return response.data})},this.addCalendar=function(params){return $http({url:"../server/mr-calendar.php",method:"POST",params:params}).then(function(response){return notify.show(response.data.msg),response.data})},this.updateCalendar=function(params){return $http({url:"../server/mr-calendar.php",method:"PUT",params:params}).then(function(response){return notify.show(response.data.msg),response.data})},this.deleteCalendar=function(params){return $http({url:"../server/mr-calendar.php",method:"DELETE",params:params}).then(function(response){return notify.show(response.data.msg),response.data})}}function mrLoginCtrl($location,$http,$cookies,$scope,notify,userService){$scope.login=function(login){$http({url:"../server/mr-login.php",method:"POST",params:login}).then(function(response){response.data.login?userService.fetchUser().then(function(user){user&&($cookies.putObject("user",user),$location.url("/clients"))}):notify.show(response.data.msg)})}}function notifyService($mdToast){this.show=function(text){$mdToast.show($mdToast.simple().content(text).position("top right"))}}function mojrokovnikAuth(userService,$cookies){var self=this;userService.fetchUser().then(function(user){user&&(self.user=user)}),this.getUser=function(){return self.user},this.isLoggedIn=function(){return!!$cookies.getObject("user")}}function mojrokovnikConf($routeProvider){$routeProvider.otherwise({redirectTo:"/clients"}),$routeProvider.when("/login",{templateUrl:"scripts/mojrokovnik/login/login.html"}),$routeProvider.when("/clients",{templateUrl:"scripts/mojrokovnik-clients/clients.html"}),$routeProvider.when("/calendar",{templateUrl:"scripts/mojrokovnik-calendar/calendar.html"})}function calendarTemplate(calendarService){return{controller:calendarCtrl,link:function(scope,element,attr,ctrl){function initializeCalendar(events){element.fullCalendar({header:{left:"prev,next today",center:"title",right:"month,agendaWeek,agendaDay"},height:angular.element("body").height(),firstDay:1,defaultView:"agendaWeek",timezone:"local",selectable:!0,editable:!0,eventLimit:!0,events:events,select:function(startDate,endDate){scope.showDialog(startDate,endDate)}})}calendarService.fetchCalendar().then(function(events){var filterEvents=[];return angular.forEach(events,function(item){filterEvents.push({title:item.calendar_name+" - "+item.calendar_comment,start:item.calendar_startDate,end:item.calendar_endDate})}),initializeCalendar(filterEvents)}),scope.createEvent=function(event){var eventData={title:event.calendar_name+" - "+event.calendar_comment,start:event.calendar_startDate,end:event.calendar_endDate};element.fullCalendar("renderEvent",eventData,!0),element.fullCalendar("unselect")}}}}function calendarCtrl($scope,$uibModal,calendarService,clientsService){function calendarDialogCtrl($uibModalInstance){$scope.save=function(calendar,timetable){var startTime=timetable?moment(timetable.timetable_startTime).format("HH:mm:ss"):moment().format("HH:mm:ss"),startDate=moment(calendar.calendar_startDate).format("YYYY-MM-DD"),endTime=timetable?moment(timetable.timetable_duration).format("HH:mm:ss"):moment().format("HH:mm:ss"),endDate=moment(calendar.calendar_endDate).format("YYYY-MM-DD");calendar.calendar_startDate=new Date(startTime+" "+startDate),calendar.calendar_endDate=new Date(endTime+" "+endDate),calendarService.addCalendar(calendar).then(function(){$scope.createEvent(calendar),$uibModalInstance.close()})},$scope.cancel=function(){$uibModalInstance.dismiss()}}$scope.showDialog=function(startDate,endDate){$scope.calendar={calendar_startDate:startDate._d,calendar_endDate:endDate._d},$scope.timetable={timetable_startTime:startDate._d,timetabe_duration:moment(endDate).subtract(moment(startDate))},$uibModal.open({animation:!0,scope:$scope,templateUrl:"scripts/mojrokovnik-calendar/calendar-dialog.html",controller:calendarDialogCtrl}),clientsService.fetchClients().then(function(clients){$scope.clients=clients}),$scope.types=[{value:1,name:"Ročište"},{value:2,name:"Obaveza"}]}}function clientsCtrl($scope,clientsService,$mdDialog){$scope.getClients=function(){clientsService.fetchClients().then(function(clients){$scope.clients=clients,$scope.selClient=clients[0]})},$scope.showDialog=function(event,client){$mdDialog.show({scope:$scope,preserveScope:!0,locals:client,controller:clientDialogCtrl,templateUrl:"scripts/mojrokovnik-clients/clients-dialog.html",parent:angular.element(document.body),targetEvent:event,clickOutsideToClose:!0})},$scope.selectClient=function(client){$scope.selClient=client},$scope.removeClient=function(client){clientsService.deleteClient(client).then(function(){$scope.clients=_.without($scope.clients,client),$scope.selClient=$scope.clients[0]})},$scope.getClients()}function clientDialogCtrl($scope,$mdDialog,clientsService,locals){$scope.client=locals,$scope.save=function(client){locals?clientsService.updateClient(client).then(function(){$mdDialog.hide()}):clientsService.addClient(client).then(function(){$scope.clients.push(client),$mdDialog.hide()})},$scope.cancel=function(){$mdDialog.cancel()}}function clientsSidenav(){return{controller:clientsCtrl,link:function(scope,elem,attr,ctrl){}}}function clientsTemplate(){return{link:function(scope,elem,attr,ctrl){}}}function userService($http){this.fetchUser=function(){return $http({url:"../server/mr-user.php",method:"GET"}).then(function(response){return response.data})}}function clientsService($http,notify){this.fetchClients=function(params){return $http({url:"../server/mr-client.php",method:"GET",params:params}).then(function(response){return response.data})},this.addClient=function(params){return $http({url:"../server/mr-client.php",method:"POST",params:params}).then(function(response){return notify.show(response.data.msg),response.data})},this.updateClient=function(params){return $http({url:"../server/mr-client.php",method:"PUT",params:params}).then(function(response){return notify.show(response.data.msg),response.data})},this.deleteClient=function(params){return $http({url:"../server/mr-client.php",method:"DELETE",params:params}).then(function(response){return notify.show(response.data.msg),response.data})}}function calendarService($http,notify){this.fetchCalendar=function(params){return $http({url:"../server/mr-calendar.php",method:"GET",params:params}).then(function(response){return response.data})},this.addCalendar=function(params){return $http({url:"../server/mr-calendar.php",method:"POST",params:params}).then(function(response){return notify.show(response.data.msg),response.data})},this.updateCalendar=function(params){return $http({url:"../server/mr-calendar.php",method:"PUT",params:params}).then(function(response){return notify.show(response.data.msg),response.data})},this.deleteCalendar=function(params){return $http({url:"../server/mr-calendar.php",method:"DELETE",params:params}).then(function(response){return notify.show(response.data.msg),response.data})}}function mrLoginCtrl($location,$http,$cookies,$scope,notify,userService){$scope.login=function(login){$http({url:"../server/mr-login.php",method:"POST",params:login}).then(function(response){response.data.login?userService.fetchUser().then(function(user){user&&($cookies.putObject("user",user),$location.url("/clients"))}):notify.show(response.data.msg)})}}function notifyService($mdToast){this.show=function(text){$mdToast.show($mdToast.simple().content(text).position("top right"))}}mojrokovnikAuth.$inject=["userService","$cookies"],mojrokovnikConf.$inject=["$routeProvider"],angular.module("mojrokovnik",["ngRoute","ngCookies","mojrokovnik.api","mojrokovnik.login","mojrokovnik.navigation","mojrokovnik.notify","mojrokovnik.clients","mojrokovnik.calendar"]).service("authentification",mojrokovnikAuth).config(["$routeProvider",mojrokovnikConf]).run(function($rootScope,$location,authentification){$rootScope.$on("$routeChangeStart",function(event,next){authentification.isLoggedIn()||$location.url("/login")})}),calendarTemplate.$inject=["calendarService"],calendarCtrl.$inject=["$scope","$uibModal","calendarService","clientsService"],angular.module("mojrokovnik.calendar",["ngMaterial","ui.bootstrap"]).controller("calendarCtrl",calendarCtrl).directive("calendarTemplate",calendarTemplate),clientsCtrl.$inject=["$scope","clientsService","$mdDialog"],clientDialogCtrl.$inject=["$scope","$mdDialog","clientsService","locals"],clientsSidenav.$inject=[],clientsTemplate.$inject=[],angular.module("mojrokovnik.clients",["ngMaterial"]).controller("clientsCtrl",clientsCtrl).directive("clientsSidenav",clientsSidenav).directive("clientsTemplate",clientsTemplate),userService.$inject=["$http"],clientsService.$inject=["$http","notify"],calendarService.$inject=["$http","notify"],angular.module("mojrokovnik.api",[]).service("userService",userService).service("clientsService",clientsService).service("calendarService",calendarService),mrLoginCtrl.$inject=["$location","$http","$cookies","$scope","notify","userService"],angular.module("mojrokovnik.login",[]).controller("mrLoginCtrl",mrLoginCtrl),angular.module("mojrokovnik.navigation",[]).directive("mrMainNavigation",function($location,authentification){return{templateUrl:"scripts/mojrokovnik/navigation/navigation.html",link:function(scope){scope.visible=authentification.isLoggedIn(),scope.isCurrentPath=function(value){return $location.$$path===value}}}}),describe("mojrokovnik.navigation module",function(){beforeEach(module("mojrokovnik.navigation")),describe("mrMainNavigation controller",function(){it("should ....",inject(function($controller){var navigationCtrl=$controller("mrMainNvigationCtrl");expect(navigationCtrl).toBeDefined()}))})}),notifyService.$inject=["$mdToast"],angular.module("mojrokovnik.notify",["ngMaterial"]).service("notify",notifyService),mojrokovnikAuth.$inject=["userService","$cookies"],mojrokovnikConf.$inject=["$routeProvider"],angular.module("mojrokovnik",["ngRoute","ngCookies","mojrokovnik.api","mojrokovnik.login","mojrokovnik.navigation","mojrokovnik.notify","mojrokovnik.clients","mojrokovnik.calendar"]).service("authentification",mojrokovnikAuth).config(["$routeProvider",mojrokovnikConf]).run(function($rootScope,$location,authentification){$rootScope.$on("$routeChangeStart",function(event,next){authentification.isLoggedIn()||$location.url("/login")})}),calendarTemplate.$inject=["calendarService"],calendarCtrl.$inject=["$scope","$uibModal","calendarService","clientsService"],angular.module("mojrokovnik.calendar",["ngMaterial","ui.bootstrap"]).controller("calendarCtrl",calendarCtrl).directive("calendarTemplate",calendarTemplate),clientsCtrl.$inject=["$scope","clientsService","$mdDialog"],clientDialogCtrl.$inject=["$scope","$mdDialog","clientsService","locals"],clientsSidenav.$inject=[],clientsTemplate.$inject=[],angular.module("mojrokovnik.clients",["ngMaterial"]).controller("clientsCtrl",clientsCtrl).directive("clientsSidenav",clientsSidenav).directive("clientsTemplate",clientsTemplate),userService.$inject=["$http"],clientsService.$inject=["$http","notify"],calendarService.$inject=["$http","notify"],angular.module("mojrokovnik.api",[]).service("userService",userService).service("clientsService",clientsService).service("calendarService",calendarService),mrLoginCtrl.$inject=["$location","$http","$cookies","$scope","notify","userService"],angular.module("mojrokovnik.login",[]).controller("mrLoginCtrl",mrLoginCtrl),angular.module("mojrokovnik.navigation",[]).directive("mrMainNavigation",function($location,authentification){return{templateUrl:"scripts/mojrokovnik/navigation/navigation.html",link:function(scope){scope.visible=authentification.isLoggedIn(),scope.isCurrentPath=function(value){return $location.$$path===value}}}}),describe("mojrokovnik.navigation module",function(){beforeEach(module("mojrokovnik.navigation")),describe("mrMainNavigation controller",function(){it("should ....",inject(function($controller){var navigationCtrl=$controller("mrMainNvigationCtrl");expect(navigationCtrl).toBeDefined()}))})}),notifyService.$inject=["$mdToast"],angular.module("mojrokovnik.notify",["ngMaterial"]).service("notify",notifyService),mojrokovnikAuth.$inject=["userService","$cookies"],mojrokovnikConf.$inject=["$routeProvider"],angular.module("mojrokovnik",["ngRoute","ngCookies","mojrokovnik.api","mojrokovnik.login","mojrokovnik.navigation","mojrokovnik.notify","mojrokovnik.clients","mojrokovnik.calendar"]).service("authentification",mojrokovnikAuth).config(["$routeProvider",mojrokovnikConf]).run(function($rootScope,$location,authentification){$rootScope.$on("$routeChangeStart",function(event,next){authentification.isLoggedIn()||$location.url("/login")})}),calendarTemplate.$inject=["calendarService"],calendarCtrl.$inject=["$scope","$uibModal","calendarService","clientsService"],angular.module("mojrokovnik.calendar",["ngMaterial","ui.bootstrap"]).controller("calendarCtrl",calendarCtrl).directive("calendarTemplate",calendarTemplate),clientsCtrl.$inject=["$scope","clientsService","$mdDialog"],clientDialogCtrl.$inject=["$scope","$mdDialog","clientsService","locals"],clientsSidenav.$inject=[],clientsTemplate.$inject=[],angular.module("mojrokovnik.clients",["ngMaterial"]).controller("clientsCtrl",clientsCtrl).directive("clientsSidenav",clientsSidenav).directive("clientsTemplate",clientsTemplate),userService.$inject=["$http"],clientsService.$inject=["$http","notify"],calendarService.$inject=["$http","notify"],angular.module("mojrokovnik.api",[]).service("userService",userService).service("clientsService",clientsService).service("calendarService",calendarService),mrLoginCtrl.$inject=["$location","$http","$cookies","$scope","notify","userService"],angular.module("mojrokovnik.login",[]).controller("mrLoginCtrl",mrLoginCtrl),angular.module("mojrokovnik.navigation",[]).directive("mrMainNavigation",function($location,authentification){return{templateUrl:"scripts/mojrokovnik/navigation/navigation.html",link:function(scope){scope.visible=authentification.isLoggedIn(),scope.isCurrentPath=function(value){return $location.$$path===value}}}}),describe("mojrokovnik.navigation module",function(){beforeEach(module("mojrokovnik.navigation")),describe("mrMainNavigation controller",function(){it("should ....",inject(function($controller){var navigationCtrl=$controller("mrMainNvigationCtrl");expect(navigationCtrl).toBeDefined()}))})}),notifyService.$inject=["$mdToast"],angular.module("mojrokovnik.notify",["ngMaterial"]).service("notify",notifyService),mojrokovnikAuth.$inject=["userService","$cookies"],mojrokovnikConf.$inject=["$routeProvider"],angular.module("mojrokovnik",["ngRoute","ngCookies","mojrokovnik.api","mojrokovnik.login","mojrokovnik.navigation","mojrokovnik.notify","mojrokovnik.clients","mojrokovnik.calendar"]).service("authentification",mojrokovnikAuth).config(["$routeProvider",mojrokovnikConf]).run(function($rootScope,$location,authentification){$rootScope.$on("$routeChangeStart",function(event,next){authentification.isLoggedIn()||$location.url("/login")})}),calendarTemplate.$inject=["calendarService"],calendarCtrl.$inject=["$scope","$uibModal","calendarService","clientsService"],angular.module("mojrokovnik.calendar",["ngMaterial","ui.bootstrap"]).controller("calendarCtrl",calendarCtrl).directive("calendarTemplate",calendarTemplate),clientsCtrl.$inject=["$scope","clientsService","$mdDialog"],clientDialogCtrl.$inject=["$scope","$mdDialog","clientsService","locals"],clientsSidenav.$inject=[],clientsTemplate.$inject=[],angular.module("mojrokovnik.clients",["ngMaterial"]).controller("clientsCtrl",clientsCtrl).directive("clientsSidenav",clientsSidenav).directive("clientsTemplate",clientsTemplate),userService.$inject=["$http"],clientsService.$inject=["$http","notify"],calendarService.$inject=["$http","notify"],angular.module("mojrokovnik.api",[]).service("userService",userService).service("clientsService",clientsService).service("calendarService",calendarService),mrLoginCtrl.$inject=["$location","$http","$cookies","$scope","notify","userService"],angular.module("mojrokovnik.login",[]).controller("mrLoginCtrl",mrLoginCtrl),
angular.module("mojrokovnik.navigation",[]).directive("mrMainNavigation",function($location,authentification){return{templateUrl:"scripts/mojrokovnik/navigation/navigation.html",link:function(scope){scope.visible=authentification.isLoggedIn(),scope.isCurrentPath=function(value){return $location.$$path===value}}}}),describe("mojrokovnik.navigation module",function(){beforeEach(module("mojrokovnik.navigation")),describe("mrMainNavigation controller",function(){it("should ....",inject(function($controller){var navigationCtrl=$controller("mrMainNvigationCtrl");expect(navigationCtrl).toBeDefined()}))})}),notifyService.$inject=["$mdToast"],angular.module("mojrokovnik.notify",["ngMaterial"]).service("notify",notifyService),mojrokovnikAuth.$inject=["userService","$cookies"],mojrokovnikConf.$inject=["$routeProvider"],angular.module("mojrokovnik",["ngRoute","ngCookies","mojrokovnik.api","mojrokovnik.login","mojrokovnik.navigation","mojrokovnik.notify","mojrokovnik.clients","mojrokovnik.calendar"]).service("authentification",mojrokovnikAuth).config(["$routeProvider",mojrokovnikConf]).run(function($rootScope,$location,authentification){$rootScope.$on("$routeChangeStart",function(event,next){authentification.isLoggedIn()||$location.url("/login")})}),calendarTemplate.$inject=["calendarService"],calendarCtrl.$inject=["$scope","$uibModal","calendarService"],angular.module("mojrokovnik.calendar",["ngMaterial","ui.bootstrap"]).controller("calendarCtrl",calendarCtrl).directive("calendarTemplate",calendarTemplate),clientsCtrl.$inject=["$scope","clientsService","$mdDialog"],clientDialogCtrl.$inject=["$scope","$mdDialog","clientsService","locals"],clientsSidenav.$inject=[],clientsTemplate.$inject=[],angular.module("mojrokovnik.clients",["ngMaterial"]).controller("clientsCtrl",clientsCtrl).directive("clientsSidenav",clientsSidenav).directive("clientsTemplate",clientsTemplate),userService.$inject=["$http"],clientsService.$inject=["$http","notify"],calendarService.$inject=["$http","notify"],angular.module("mojrokovnik.api",[]).service("userService",userService).service("clientsService",clientsService).service("calendarService",calendarService),mrLoginCtrl.$inject=["$location","$http","$cookies","$scope","notify","userService"],angular.module("mojrokovnik.login",[]).controller("mrLoginCtrl",mrLoginCtrl),angular.module("mojrokovnik.navigation",[]).directive("mrMainNavigation",function($location,authentification){return{templateUrl:"scripts/mojrokovnik/navigation/navigation.html",link:function(scope){scope.visible=authentification.isLoggedIn(),scope.isCurrentPath=function(value){return $location.$$path===value}}}}),describe("mojrokovnik.navigation module",function(){beforeEach(module("mojrokovnik.navigation")),describe("mrMainNavigation controller",function(){it("should ....",inject(function($controller){var navigationCtrl=$controller("mrMainNvigationCtrl");expect(navigationCtrl).toBeDefined()}))})}),notifyService.$inject=["$mdToast"],angular.module("mojrokovnik.notify",["ngMaterial"]).service("notify",notifyService),mojrokovnikAuth.$inject=["userService","$cookies"],mojrokovnikConf.$inject=["$routeProvider"],angular.module("mojrokovnik",["ngRoute","ngCookies","mojrokovnik.api","mojrokovnik.login","mojrokovnik.navigation","mojrokovnik.notify","mojrokovnik.clients","mojrokovnik.calendar"]).service("authentification",mojrokovnikAuth).config(["$routeProvider",mojrokovnikConf]).run(function($rootScope,$location,authentification){$rootScope.$on("$routeChangeStart",function(event,next){authentification.isLoggedIn()||$location.url("/login")})}),calendarTemplate.$inject=["calendarService"],calendarCtrl.$inject=["$scope","$uibModal","calendarService"],angular.module("mojrokovnik.calendar",["ngMaterial","ui.bootstrap"]).controller("calendarCtrl",calendarCtrl).directive("calendarTemplate",calendarTemplate),clientsCtrl.$inject=["$scope","clientsService","$mdDialog"],clientDialogCtrl.$inject=["$scope","$mdDialog","clientsService","locals"],clientsSidenav.$inject=[],clientsTemplate.$inject=[],angular.module("mojrokovnik.clients",["ngMaterial"]).controller("clientsCtrl",clientsCtrl).directive("clientsSidenav",clientsSidenav).directive("clientsTemplate",clientsTemplate),userService.$inject=["$http"],clientsService.$inject=["$http","notify"],calendarService.$inject=["$http","notify"],angular.module("mojrokovnik.api",[]).service("userService",userService).service("clientsService",clientsService).service("calendarService",calendarService),mrLoginCtrl.$inject=["$location","$http","$cookies","$scope","notify","userService"],angular.module("mojrokovnik.login",[]).controller("mrLoginCtrl",mrLoginCtrl),angular.module("mojrokovnik.navigation",[]).directive("mrMainNavigation",function($location,authentification){return{templateUrl:"scripts/mojrokovnik/navigation/navigation.html",link:function(scope){scope.visible=authentification.isLoggedIn(),scope.isCurrentPath=function(value){return $location.$$path===value}}}}),describe("mojrokovnik.navigation module",function(){beforeEach(module("mojrokovnik.navigation")),describe("mrMainNavigation controller",function(){it("should ....",inject(function($controller){var navigationCtrl=$controller("mrMainNvigationCtrl");expect(navigationCtrl).toBeDefined()}))})}),notifyService.$inject=["$mdToast"],angular.module("mojrokovnik.notify",["ngMaterial"]).service("notify",notifyService),mojrokovnikAuth.$inject=["userService","$cookies"],mojrokovnikConf.$inject=["$routeProvider"],angular.module("mojrokovnik",["ngRoute","ngCookies","mojrokovnik.api","mojrokovnik.login","mojrokovnik.navigation","mojrokovnik.notify","mojrokovnik.clients","mojrokovnik.calendar"]).service("authentification",mojrokovnikAuth).config(["$routeProvider",mojrokovnikConf]).run(function($rootScope,$location,authentification){$rootScope.$on("$routeChangeStart",function(event,next){authentification.isLoggedIn()||$location.url("/login")})}),calendarTemplate.$inject=["calendarService"],calendarCtrl.$inject=["$scope","$uibModal","calendarService","clientsService"],angular.module("mojrokovnik.calendar",["ngMaterial","ui.bootstrap"]).controller("calendarCtrl",calendarCtrl).directive("calendarTemplate",calendarTemplate),clientsCtrl.$inject=["$scope","clientsService","$mdDialog"],clientDialogCtrl.$inject=["$scope","$mdDialog","clientsService","locals"],clientsSidenav.$inject=[],clientsTemplate.$inject=[],angular.module("mojrokovnik.clients",["ngMaterial"]).controller("clientsCtrl",clientsCtrl).directive("clientsSidenav",clientsSidenav).directive("clientsTemplate",clientsTemplate),userService.$inject=["$http"],clientsService.$inject=["$http","notify"],calendarService.$inject=["$http","notify"],angular.module("mojrokovnik.api",[]).service("userService",userService).service("clientsService",clientsService).service("calendarService",calendarService),mrLoginCtrl.$inject=["$location","$http","$cookies","$scope","notify","userService"],angular.module("mojrokovnik.login",[]).controller("mrLoginCtrl",mrLoginCtrl),angular.module("mojrokovnik.navigation",[]).directive("mrMainNavigation",function($location,authentification){return{templateUrl:"scripts/mojrokovnik/navigation/navigation.html",link:function(scope){scope.visible=authentification.isLoggedIn(),scope.isCurrentPath=function(value){return $location.$$path===value}}}}),describe("mojrokovnik.navigation module",function(){beforeEach(module("mojrokovnik.navigation")),describe("mrMainNavigation controller",function(){it("should ....",inject(function($controller){var navigationCtrl=$controller("mrMainNvigationCtrl");expect(navigationCtrl).toBeDefined()}))})}),notifyService.$inject=["$mdToast"],angular.module("mojrokovnik.notify",["ngMaterial"]).service("notify",notifyService),mojrokovnikAuth.$inject=["userService","$cookies"],mojrokovnikConf.$inject=["$routeProvider"],angular.module("mojrokovnik",["ngRoute","ngCookies","mojrokovnik.api","mojrokovnik.login","mojrokovnik.navigation","mojrokovnik.notify","mojrokovnik.clients","mojrokovnik.calendar"]).service("authentification",mojrokovnikAuth).config(["$routeProvider",mojrokovnikConf]).run(function($rootScope,$location,authentification){$rootScope.$on("$routeChangeStart",function(event,next){authentification.isLoggedIn()||$location.url("/login")})}),calendarTemplate.$inject=["calendarService"],calendarCtrl.$inject=["$scope","$uibModal","calendarService","clientsService"],angular.module("mojrokovnik.calendar",["ngMaterial","ui.bootstrap"]).controller("calendarCtrl",calendarCtrl).directive("calendarTemplate",calendarTemplate),clientsCtrl.$inject=["$scope","clientsService","$mdDialog"],clientDialogCtrl.$inject=["$scope","$mdDialog","clientsService","locals"],clientsSidenav.$inject=[],clientsTemplate.$inject=[],angular.module("mojrokovnik.clients",["ngMaterial"]).controller("clientsCtrl",clientsCtrl).directive("clientsSidenav",clientsSidenav).directive("clientsTemplate",clientsTemplate),userService.$inject=["$http"],clientsService.$inject=["$http","notify"],calendarService.$inject=["$http","notify"],angular.module("mojrokovnik.api",[]).service("userService",userService).service("clientsService",clientsService).service("calendarService",calendarService),mrLoginCtrl.$inject=["$location","$http","$cookies","$scope","notify","userService"],angular.module("mojrokovnik.login",[]).controller("mrLoginCtrl",mrLoginCtrl),angular.module("mojrokovnik.navigation",[]).directive("mrMainNavigation",function($location,authentification){return{templateUrl:"scripts/mojrokovnik/navigation/navigation.html",link:function(scope){scope.visible=authentification.isLoggedIn(),scope.isCurrentPath=function(value){return $location.$$path===value}}}}),describe("mojrokovnik.navigation module",function(){beforeEach(module("mojrokovnik.navigation")),describe("mrMainNavigation controller",function(){it("should ....",inject(function($controller){var navigationCtrl=$controller("mrMainNvigationCtrl");expect(navigationCtrl).toBeDefined()}))})}),notifyService.$inject=["$mdToast"],angular.module("mojrokovnik.notify",["ngMaterial"]).service("notify",notifyService),mojrokovnikAuth.$inject=["userService","$cookies"],mojrokovnikConf.$inject=["$routeProvider"],angular.module("mojrokovnik",["ngRoute","ngCookies","mojrokovnik.api","mojrokovnik.login","mojrokovnik.navigation","mojrokovnik.notify","mojrokovnik.clients","mojrokovnik.calendar"]).service("authentification",mojrokovnikAuth).config(["$routeProvider",mojrokovnikConf]).run(function($rootScope,$location,authentification){$rootScope.$on("$routeChangeStart",function(event,next){authentification.isLoggedIn()||$location.url("/login")})}),calendarTemplate.$inject=["calendarService"],calendarCtrl.$inject=["$scope","$uibModal","calendarService","clientsService"],angular.module("mojrokovnik.calendar",["ngMaterial","ui.bootstrap"]).controller("calendarCtrl",calendarCtrl).directive("calendarTemplate",calendarTemplate),clientsCtrl.$inject=["$scope","clientsService","$mdDialog"],clientDialogCtrl.$inject=["$scope","$mdDialog","clientsService","locals"],clientsSidenav.$inject=[],clientsTemplate.$inject=[],angular.module("mojrokovnik.clients",["ngMaterial"]).controller("clientsCtrl",clientsCtrl).directive("clientsSidenav",clientsSidenav).directive("clientsTemplate",clientsTemplate),userService.$inject=["$http"],clientsService.$inject=["$http","notify"],calendarService.$inject=["$http","notify"],angular.module("mojrokovnik.api",[]).service("userService",userService).service("clientsService",clientsService).service("calendarService",calendarService),mrLoginCtrl.$inject=["$location","$http","$cookies","$scope","notify","userService"],angular.module("mojrokovnik.login",[]).controller("mrLoginCtrl",mrLoginCtrl),angular.module("mojrokovnik.navigation",[]).directive("mrMainNavigation",function($location,authentification){return{templateUrl:"scripts/mojrokovnik/navigation/navigation.html",link:function(scope){scope.visible=authentification.isLoggedIn(),scope.isCurrentPath=function(value){return $location.$$path===value}}}}),describe("mojrokovnik.navigation module",function(){beforeEach(module("mojrokovnik.navigation")),describe("mrMainNavigation controller",function(){it("should ....",inject(function($controller){var navigationCtrl=$controller("mrMainNvigationCtrl");expect(navigationCtrl).toBeDefined()}))})}),notifyService.$inject=["$mdToast"],angular.module("mojrokovnik.notify",["ngMaterial"]).service("notify",notifyService),mojrokovnikAuth.$inject=["userService","$cookies"],mojrokovnikConf.$inject=["$routeProvider"],angular.module("mojrokovnik",["ngRoute","ngCookies","mojrokovnik.api","mojrokovnik.login","mojrokovnik.navigation","mojrokovnik.notify","mojrokovnik.clients","mojrokovnik.calendar"]).service("authentification",mojrokovnikAuth).config(["$routeProvider",mojrokovnikConf]).run(function($rootScope,$location,authentification){$rootScope.$on("$routeChangeStart",function(event,next){authentification.isLoggedIn()||$location.url("/login")})}),calendarTemplate.$inject=["calendarService"],calendarCtrl.$inject=["$scope","$uibModal","calendarService","clientsService"],angular.module("mojrokovnik.calendar",["ngMaterial","ui.bootstrap"]).controller("calendarCtrl",calendarCtrl).directive("calendarTemplate",calendarTemplate),clientsCtrl.$inject=["$scope","clientsService","$mdDialog"],clientDialogCtrl.$inject=["$scope","$mdDialog","clientsService","locals"],clientsSidenav.$inject=[],clientsTemplate.$inject=[],angular.module("mojrokovnik.clients",["ngMaterial"]).controller("clientsCtrl",clientsCtrl).directive("clientsSidenav",clientsSidenav).directive("clientsTemplate",clientsTemplate),userService.$inject=["$http"],clientsService.$inject=["$http","notify"],calendarService.$inject=["$http","notify"],angular.module("mojrokovnik.api",[]).service("userService",userService).service("clientsService",clientsService).service("calendarService",calendarService),mrLoginCtrl.$inject=["$location","$http","$cookies","$scope","notify","userService"],angular.module("mojrokovnik.login",[]).controller("mrLoginCtrl",mrLoginCtrl),angular.module("mojrokovnik.navigation",[]).directive("mrMainNavigation",function($location,authentification){return{templateUrl:"scripts/mojrokovnik/navigation/navigation.html",link:function(scope){scope.visible=authentification.isLoggedIn(),scope.isCurrentPath=function(value){return $location.$$path===value}}}}),describe("mojrokovnik.navigation module",function(){beforeEach(module("mojrokovnik.navigation")),describe("mrMainNavigation controller",function(){it("should ....",inject(function($controller){var navigationCtrl=$controller("mrMainNvigationCtrl");expect(navigationCtrl).toBeDefined()}))})}),notifyService.$inject=["$mdToast"],angular.module("mojrokovnik.notify",["ngMaterial"]).service("notify",notifyService),mojrokovnikAuth.$inject=["userService","$cookies"],mojrokovnikConf.$inject=["$routeProvider"],angular.module("mojrokovnik",["ngRoute","ngCookies","mojrokovnik.api","mojrokovnik.login","mojrokovnik.navigation","mojrokovnik.notify","mojrokovnik.clients","mojrokovnik.calendar"]).service("authentification",mojrokovnikAuth).config(["$routeProvider",mojrokovnikConf]).run(function($rootScope,$location,authentification){$rootScope.$on("$routeChangeStart",function(event,next){authentification.isLoggedIn()||$location.url("/login")})}),calendarTemplate.$inject=["calendarService"],calendarCtrl.$inject=["$scope","$uibModal","calendarService","clientsService"],angular.module("mojrokovnik.calendar",["ngMaterial","ui.bootstrap"]).controller("calendarCtrl",calendarCtrl).directive("calendarTemplate",calendarTemplate),clientsCtrl.$inject=["$scope","clientsService","$mdDialog"],clientDialogCtrl.$inject=["$scope","$mdDialog","clientsService","locals"],clientsSidenav.$inject=[],clientsTemplate.$inject=[],angular.module("mojrokovnik.clients",["ngMaterial"]).controller("clientsCtrl",clientsCtrl).directive("clientsSidenav",clientsSidenav).directive("clientsTemplate",clientsTemplate),userService.$inject=["$http"],clientsService.$inject=["$http","notify"],calendarService.$inject=["$http","notify"],angular.module("mojrokovnik.api",[]).service("userService",userService).service("clientsService",clientsService).service("calendarService",calendarService),mrLoginCtrl.$inject=["$location","$http","$cookies","$scope","notify","userService"],angular.module("mojrokovnik.login",[]).controller("mrLoginCtrl",mrLoginCtrl),angular.module("mojrokovnik.navigation",[]).directive("mrMainNavigation",function($location,authentification){return{templateUrl:"scripts/mojrokovnik/navigation/navigation.html",link:function(scope){scope.visible=authentification.isLoggedIn(),scope.isCurrentPath=function(value){return $location.$$path===value}}}}),describe("mojrokovnik.navigation module",function(){beforeEach(module("mojrokovnik.navigation")),describe("mrMainNavigation controller",function(){it("should ....",inject(function($controller){var navigationCtrl=$controller("mrMainNvigationCtrl");expect(navigationCtrl).toBeDefined()}))})}),notifyService.$inject=["$mdToast"],angular.module("mojrokovnik.notify",["ngMaterial"]).service("notify",notifyService),mojrokovnikAuth.$inject=["userService","$cookies"],mojrokovnikConf.$inject=["$routeProvider"],angular.module("mojrokovnik",["ngRoute","ngCookies","mojrokovnik.api","mojrokovnik.login","mojrokovnik.navigation","mojrokovnik.notify","mojrokovnik.clients","mojrokovnik.calendar"]).service("authentification",mojrokovnikAuth).config(["$routeProvider",mojrokovnikConf]).run(function($rootScope,$location,authentification){$rootScope.$on("$routeChangeStart",function(event,next){authentification.isLoggedIn()||$location.url("/login")})}),calendarTemplate.$inject=["calendarService"],calendarCtrl.$inject=["$scope","$uibModal","calendarService","clientsService"],angular.module("mojrokovnik.calendar",["ngMaterial","ui.bootstrap"]).controller("calendarCtrl",calendarCtrl).directive("calendarTemplate",calendarTemplate),clientsCtrl.$inject=["$scope","clientsService","$mdDialog"],clientDialogCtrl.$inject=["$scope","$mdDialog","clientsService","locals"],clientsSidenav.$inject=[],clientsTemplate.$inject=[],angular.module("mojrokovnik.clients",["ngMaterial"]).controller("clientsCtrl",clientsCtrl).directive("clientsSidenav",clientsSidenav).directive("clientsTemplate",clientsTemplate),userService.$inject=["$http"],clientsService.$inject=["$http","notify"],calendarService.$inject=["$http","notify"],angular.module("mojrokovnik.api",[]).service("userService",userService).service("clientsService",clientsService).service("calendarService",calendarService),mrLoginCtrl.$inject=["$location","$http","$cookies","$scope","notify","userService"],angular.module("mojrokovnik.login",[]).controller("mrLoginCtrl",mrLoginCtrl),angular.module("mojrokovnik.navigation",[]).directive("mrMainNavigation",function($location,authentification){return{templateUrl:"scripts/mojrokovnik/navigation/navigation.html",link:function(scope){scope.visible=authentification.isLoggedIn(),scope.isCurrentPath=function(value){return $location.$$path===value}}}}),describe("mojrokovnik.navigation module",function(){beforeEach(module("mojrokovnik.navigation")),describe("mrMainNavigation controller",function(){it("should ....",inject(function($controller){var navigationCtrl=$controller("mrMainNvigationCtrl");expect(navigationCtrl).toBeDefined()}))})}),notifyService.$inject=["$mdToast"],angular.module("mojrokovnik.notify",["ngMaterial"]).service("notify",notifyService),mojrokovnikAuth.$inject=["userService","$cookies"],mojrokovnikConf.$inject=["$routeProvider"],angular.module("mojrokovnik",["ngRoute","ngCookies","mojrokovnik.api","mojrokovnik.login","mojrokovnik.navigation","mojrokovnik.notify","mojrokovnik.clients","mojrokovnik.calendar"]).service("authentification",mojrokovnikAuth).config(["$routeProvider",mojrokovnikConf]).run(function($rootScope,$location,authentification){$rootScope.$on("$routeChangeStart",function(event,next){authentification.isLoggedIn()||$location.url("/login")})}),calendarTemplate.$inject=["calendarService"],calendarCtrl.$inject=["$scope","$uibModal","calendarService","clientsService"],angular.module("mojrokovnik.calendar",["ngMaterial","ui.bootstrap"]).controller("calendarCtrl",calendarCtrl).directive("calendarTemplate",calendarTemplate),clientsCtrl.$inject=["$scope","clientsService","$mdDialog"],clientDialogCtrl.$inject=["$scope","$mdDialog","clientsService","locals"],clientsSidenav.$inject=[],clientsTemplate.$inject=[],angular.module("mojrokovnik.clients",["ngMaterial"]).controller("clientsCtrl",clientsCtrl).directive("clientsSidenav",clientsSidenav).directive("clientsTemplate",clientsTemplate),userService.$inject=["$http"],clientsService.$inject=["$http","notify"],calendarService.$inject=["$http","notify"],angular.module("mojrokovnik.api",[]).service("userService",userService).service("clientsService",clientsService).service("calendarService",calendarService),mrLoginCtrl.$inject=["$location","$http","$cookies","$scope","notify","userService"],angular.module("mojrokovnik.login",[]).controller("mrLoginCtrl",mrLoginCtrl),angular.module("mojrokovnik.navigation",[]).directive("mrMainNavigation",function($location,authentification){return{templateUrl:"scripts/mojrokovnik/navigation/navigation.html",link:function(scope){scope.visible=authentification.isLoggedIn(),scope.isCurrentPath=function(value){return $location.$$path===value}}}}),describe("mojrokovnik.navigation module",function(){beforeEach(module("mojrokovnik.navigation")),describe("mrMainNavigation controller",function(){it("should ....",inject(function($controller){var navigationCtrl=$controller("mrMainNvigationCtrl");expect(navigationCtrl).toBeDefined()}))})}),notifyService.$inject=["$mdToast"],angular.module("mojrokovnik.notify",["ngMaterial"]).service("notify",notifyService),mojrokovnikAuth.$inject=["userService","$cookies"],mojrokovnikConf.$inject=["$routeProvider"],angular.module("mojrokovnik",["ngRoute","ngCookies","mojrokovnik.api","mojrokovnik.login","mojrokovnik.navigation","mojrokovnik.notify","mojrokovnik.clients","mojrokovnik.calendar"]).service("authentification",mojrokovnikAuth).config(["$routeProvider",mojrokovnikConf]).run(function($rootScope,$location,authentification){$rootScope.$on("$routeChangeStart",function(event,next){authentification.isLoggedIn()||$location.url("/login")})}),calendarTemplate.$inject=["calendarService"],calendarCtrl.$inject=["$scope","$uibModal","calendarService","clientsService"],angular.module("mojrokovnik.calendar",["ngMaterial","ui.bootstrap"]).controller("calendarCtrl",calendarCtrl).directive("calendarTemplate",calendarTemplate),clientsCtrl.$inject=["$scope","clientsService","$mdDialog"],clientDialogCtrl.$inject=["$scope","$mdDialog","clientsService","locals"],clientsSidenav.$inject=[],clientsTemplate.$inject=[],angular.module("mojrokovnik.clients",["ngMaterial"]).controller("clientsCtrl",clientsCtrl).directive("clientsSidenav",clientsSidenav).directive("clientsTemplate",clientsTemplate),userService.$inject=["$http"],clientsService.$inject=["$http","notify"],calendarService.$inject=["$http","notify"],angular.module("mojrokovnik.api",[]).service("userService",userService).service("clientsService",clientsService).service("calendarService",calendarService),mrLoginCtrl.$inject=["$location","$http","$cookies","$scope","notify","userService"],angular.module("mojrokovnik.login",[]).controller("mrLoginCtrl",mrLoginCtrl),angular.module("mojrokovnik.navigation",[]).directive("mrMainNavigation",function($location,authentification){return{templateUrl:"scripts/mojrokovnik/navigation/navigation.html",link:function(scope){scope.visible=authentification.isLoggedIn(),scope.isCurrentPath=function(value){return $location.$$path===value}}}}),describe("mojrokovnik.navigation module",function(){beforeEach(module("mojrokovnik.navigation")),describe("mrMainNavigation controller",function(){it("should ....",inject(function($controller){var navigationCtrl=$controller("mrMainNvigationCtrl");expect(navigationCtrl).toBeDefined()}))})}),notifyService.$inject=["$mdToast"],angular.module("mojrokovnik.notify",["ngMaterial"]).service("notify",notifyService);
//# sourceMappingURL=app.min.map